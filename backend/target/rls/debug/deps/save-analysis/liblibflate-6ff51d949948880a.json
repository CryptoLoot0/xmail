{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1","program":"/Users/jwen/.rustup/toolchains/stable-x86_64-apple-darwin/bin/rls","arguments":["--crate-name","libflate","--edition=2018","/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","split-debuginfo=unpacked","-C","debuginfo=2","-C","metadata=6ff51d949948880a","-C","extra-filename=-6ff51d949948880a","--out-dir","/Users/jwen/workspace/dmail/dfinity-react-wanxiang/backend/target/rls/debug/deps","-L","dependency=/Users/jwen/workspace/dmail/dfinity-react-wanxiang/backend/target/rls/debug/deps","--extern","adler32=/Users/jwen/workspace/dmail/dfinity-react-wanxiang/backend/target/rls/debug/deps/libadler32-da97f1ee6e77fbe3.rmeta","--extern","crc32fast=/Users/jwen/workspace/dmail/dfinity-react-wanxiang/backend/target/rls/debug/deps/libcrc32fast-595a1ff085f71c6d.rmeta","--extern","libflate_lz77=/Users/jwen/workspace/dmail/dfinity-react-wanxiang/backend/target/rls/debug/deps/liblibflate_lz77-62d974f28de634fd.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/Users/jwen/.rustup/toolchains/stable-x86_64-apple-darwin"],"output":"/Users/jwen/workspace/dmail/dfinity-react-wanxiang/backend/target/rls/debug/deps/liblibflate-6ff51d949948880a.rmeta"},"prelude":{"crate_id":{"name":"libflate","disambiguator":[16455241957083428833,0]},"crate_root":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src","external_crates":[{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[7777094053559708767,0]}},{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[10550174156715778454,0]}},{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[8770346864682343241,0]}},{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[8196830942918118636,0]}},{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[12786826162718588903,0]}},{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[7262382603413566750,0]}},{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[12233289566066112318,0]}},{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[4998072162051350919,0]}},{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[14817392966914922723,0]}},{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[13537029249427453884,0]}},{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[16172866892641339196,0]}},{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/lib.rs","num":12,"id":{"name":"std_detect","disambiguator":[18226255698322429307,0]}},{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/lib.rs","num":13,"id":{"name":"addr2line","disambiguator":[12872472635654720224,0]}},{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/lib.rs","num":14,"id":{"name":"gimli","disambiguator":[15477836623066676988,0]}},{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/lib.rs","num":15,"id":{"name":"object","disambiguator":[8883445751219211826,0]}},{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/lib.rs","num":16,"id":{"name":"panic_unwind","disambiguator":[4189598673803333586,0]}},{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/lz77.rs","num":17,"id":{"name":"libflate_lz77","disambiguator":[18005720600492954150,0]}},{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/lz77.rs","num":18,"id":{"name":"rle_decode_fast","disambiguator":[1460654393448198470,0]}},{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/checksum.rs","num":19,"id":{"name":"adler32","disambiguator":[9138060541809573558,0]}},{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/checksum.rs","num":20,"id":{"name":"crc32fast","disambiguator":[12123085284160624984,0]}},{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/checksum.rs","num":21,"id":{"name":"cfg_if","disambiguator":[14051682313894696593,0]}}],"span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/lib.rs","byte_start":0,"byte_end":703,"line_start":1,"line_end":31,"column_start":1,"column_end":10}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":996},"span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/lib.rs","byte_start":120,"byte_end":126,"line_start":3,"line_end":3,"column_start":17,"column_end":23},"alias_span":null,"name":"Finish","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":868},"span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/deflate/mod.rs","byte_start":1402,"byte_end":1409,"line_start":22,"line_end":22,"column_start":23,"column_end":30},"alias_span":null,"name":"Decoder","value":"","parent":{"krate":0,"index":8}},{"kind":"Use","ref_id":{"krate":0,"index":876},"span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/deflate/mod.rs","byte_start":1433,"byte_end":1446,"line_start":23,"line_end":23,"column_start":23,"column_end":36},"alias_span":null,"name":"EncodeOptions","value":"","parent":{"krate":0,"index":8}},{"kind":"Use","ref_id":{"krate":0,"index":902},"span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/deflate/mod.rs","byte_start":1470,"byte_end":1477,"line_start":24,"line_end":24,"column_start":23,"column_end":30},"alias_span":null,"name":"Encoder","value":"","parent":{"krate":0,"index":8}},{"kind":"Use","ref_id":{"krate":0,"index":78},"span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/deflate/mod.rs","byte_start":1501,"byte_end":1519,"line_start":25,"line_end":25,"column_start":23,"column_end":41},"alias_span":null,"name":"DEFAULT_BLOCK_SIZE","value":"","parent":{"krate":0,"index":8}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/lz77.rs","byte_start":84247,"byte_end":84248,"line_start":4,"line_end":4,"column_start":24,"column_end":25},"alias_span":null,"name":"*","value":"DefaultLz77Encoder, Lz77Encode, Lz77Decoder, Code, CompressionLevel","parent":{"krate":0,"index":469}},{"kind":"Use","ref_id":{"krate":0,"index":1205},"span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/non_blocking/deflate/mod.rs","byte_start":86393,"byte_end":86400,"line_start":23,"line_end":23,"column_start":23,"column_end":30},"alias_span":null,"name":"Decoder","value":"","parent":{"krate":0,"index":472}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/lib.rs","byte_start":0,"byte_end":703,"line_start":1,"line_end":31,"column_start":1,"column_end":10},"name":"","qualname":"::","value":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":8},{"krate":0,"index":231},{"krate":0,"index":291},{"krate":0,"index":469},{"krate":0,"index":471},{"krate":0,"index":626},{"krate":0,"index":718},{"krate":0,"index":756},{"krate":0,"index":781},{"krate":0,"index":867}],"decl_id":null,"docs":" A Rust implementation of DEFLATE algorithm and related formats (ZLIB, GZIP).\n","sig":null,"attributes":[{"value":"/ A Rust implementation of DEFLATE algorithm and related formats (ZLIB, GZIP).","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/lib.rs","byte_start":0,"byte_end":80,"line_start":1,"line_end":1,"column_start":1,"column_end":81}},{"value":"warn(missing_docs)","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/lib.rs","byte_start":81,"byte_end":103,"line_start":2,"line_end":2,"column_start":1,"column_end":23}}]},{"kind":"Mod","id":{"krate":0,"index":8},"span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/deflate/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"deflate","qualname":"::deflate","value":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/deflate/mod.rs","parent":null,"children":[{"krate":0,"index":9},{"krate":0,"index":12},{"krate":0,"index":15},{"krate":0,"index":18},{"krate":0,"index":21},{"krate":0,"index":52},{"krate":0,"index":144},{"krate":0,"index":981},{"krate":0,"index":991},{"krate":0,"index":993},{"krate":0,"index":995}],"decl_id":null,"docs":" The encoder and decoder of the DEFLATE format and algorithm.","sig":null,"attributes":[{"value":"/ The encoder and decoder of the DEFLATE format and algorithm.","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/deflate/mod.rs","byte_start":705,"byte_end":769,"line_start":1,"line_end":1,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/deflate/mod.rs","byte_start":770,"byte_end":773,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ The DEFLATE is defined in [RFC-1951](https://tools.ietf.org/html/rfc1951).","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/deflate/mod.rs","byte_start":774,"byte_end":852,"line_start":3,"line_end":3,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/deflate/mod.rs","byte_start":853,"byte_end":856,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/deflate/mod.rs","byte_start":857,"byte_end":871,"line_start":5,"line_end":5,"column_start":1,"column_end":15}},{"value":"/ ```","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/deflate/mod.rs","byte_start":872,"byte_end":879,"line_start":6,"line_end":6,"column_start":1,"column_end":8}},{"value":"/ use std::io::{self, Read};","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/deflate/mod.rs","byte_start":880,"byte_end":910,"line_start":7,"line_end":7,"column_start":1,"column_end":31}},{"value":"/ use libflate::deflate::{Encoder, Decoder};","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/deflate/mod.rs","byte_start":911,"byte_end":957,"line_start":8,"line_end":8,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/deflate/mod.rs","byte_start":958,"byte_end":961,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ // Encoding","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/deflate/mod.rs","byte_start":962,"byte_end":977,"line_start":10,"line_end":10,"column_start":1,"column_end":16}},{"value":"/ let mut encoder = Encoder::new(Vec::new());","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/deflate/mod.rs","byte_start":978,"byte_end":1025,"line_start":11,"line_end":11,"column_start":1,"column_end":48}},{"value":"/ io::copy(&mut &b\"Hello World!\"[..], &mut encoder).unwrap();","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/deflate/mod.rs","byte_start":1026,"byte_end":1089,"line_start":12,"line_end":12,"column_start":1,"column_end":64}},{"value":"/ let encoded_data = encoder.finish().into_result().unwrap();","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/deflate/mod.rs","byte_start":1090,"byte_end":1153,"line_start":13,"line_end":13,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/deflate/mod.rs","byte_start":1154,"byte_end":1157,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ // Decoding","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/deflate/mod.rs","byte_start":1158,"byte_end":1173,"line_start":15,"line_end":15,"column_start":1,"column_end":16}},{"value":"/ let mut decoder = Decoder::new(&encoded_data[..]);","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/deflate/mod.rs","byte_start":1174,"byte_end":1228,"line_start":16,"line_end":16,"column_start":1,"column_end":55}},{"value":"/ let mut decoded_data = Vec::new();","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/deflate/mod.rs","byte_start":1229,"byte_end":1267,"line_start":17,"line_end":17,"column_start":1,"column_end":39}},{"value":"/ decoder.read_to_end(&mut decoded_data).unwrap();","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/deflate/mod.rs","byte_start":1268,"byte_end":1320,"line_start":18,"line_end":18,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/deflate/mod.rs","byte_start":1321,"byte_end":1324,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(decoded_data, b\"Hello World!\");","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/deflate/mod.rs","byte_start":1325,"byte_end":1371,"line_start":20,"line_end":20,"column_start":1,"column_end":47}},{"value":"/ ```","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/deflate/mod.rs","byte_start":1372,"byte_end":1379,"line_start":21,"line_end":21,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":868},"span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/deflate/decode.rs","byte_start":2509,"byte_end":2516,"line_start":9,"line_end":9,"column_start":12,"column_end":19},"name":"Decoder","qualname":"::deflate::decode::Decoder","value":"Decoder {  }","parent":null,"children":[{"krate":0,"index":870},{"krate":0,"index":871},{"krate":0,"index":872}],"decl_id":null,"docs":" DEFLATE decoder.\n","sig":null,"attributes":[{"value":"/ DEFLATE decoder.","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/deflate/decode.rs","byte_start":2460,"byte_end":2480,"line_start":7,"line_end":7,"column_start":1,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":39},"span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/deflate/decode.rs","byte_start":3172,"byte_end":3175,"line_start":34,"line_end":34,"column_start":12,"column_end":15},"name":"new","qualname":"<Decoder<R>>::new","value":"pub fn new(R) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Makes a new decoder instance.","sig":null,"attributes":[{"value":"/ Makes a new decoder instance.","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/deflate/decode.rs","byte_start":2655,"byte_end":2688,"line_start":18,"line_end":18,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/deflate/decode.rs","byte_start":2693,"byte_end":2696,"line_start":19,"line_end":19,"column_start":5,"column_end":8}},{"value":"/ `inner` is to be decoded DEFLATE stream.","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/deflate/decode.rs","byte_start":2701,"byte_end":2745,"line_start":20,"line_end":20,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/deflate/decode.rs","byte_start":2750,"byte_end":2753,"line_start":21,"line_end":21,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/deflate/decode.rs","byte_start":2758,"byte_end":2772,"line_start":22,"line_end":22,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/deflate/decode.rs","byte_start":2777,"byte_end":2784,"line_start":23,"line_end":23,"column_start":5,"column_end":12}},{"value":"/ use std::io::{Cursor, Read};","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/deflate/decode.rs","byte_start":2789,"byte_end":2821,"line_start":24,"line_end":24,"column_start":5,"column_end":37}},{"value":"/ use libflate::deflate::Decoder;","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/deflate/decode.rs","byte_start":2826,"byte_end":2861,"line_start":25,"line_end":25,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/deflate/decode.rs","byte_start":2866,"byte_end":2869,"line_start":26,"line_end":26,"column_start":5,"column_end":8}},{"value":"/ let encoded_data = [243, 72, 205, 201, 201, 87, 8, 207, 47, 202, 73, 81, 4, 0];","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/deflate/decode.rs","byte_start":2874,"byte_end":2957,"line_start":27,"line_end":27,"column_start":5,"column_end":88}},{"value":"/ let mut decoder = Decoder::new(&encoded_data[..]);","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/deflate/decode.rs","byte_start":2962,"byte_end":3016,"line_start":28,"line_end":28,"column_start":5,"column_end":59}},{"value":"/ let mut buf = Vec::new();","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/deflate/decode.rs","byte_start":3021,"byte_end":3050,"line_start":29,"line_end":29,"column_start":5,"column_end":34}},{"value":"/ decoder.read_to_end(&mut buf).unwrap();","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/deflate/decode.rs","byte_start":3055,"byte_end":3098,"line_start":30,"line_end":30,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/deflate/decode.rs","byte_start":3103,"byte_end":3106,"line_start":31,"line_end":31,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(buf, b\"Hello World!\");","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/deflate/decode.rs","byte_start":3111,"byte_end":3148,"line_start":32,"line_end":32,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/deflate/decode.rs","byte_start":3153,"byte_end":3160,"line_start":33,"line_end":33,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":40},"span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/deflate/decode.rs","byte_start":3431,"byte_end":3443,"line_start":43,"line_end":43,"column_start":12,"column_end":24},"name":"as_inner_ref","qualname":"<Decoder<R>>::as_inner_ref","value":"pub fn as_inner_ref(&Self) -> &R","parent":null,"children":[],"decl_id":null,"docs":" Returns the immutable reference to the inner stream.\n","sig":null,"attributes":[{"value":"/ Returns the immutable reference to the inner stream.","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/deflate/decode.rs","byte_start":3363,"byte_end":3419,"line_start":42,"line_end":42,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":41},"span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/deflate/decode.rs","byte_start":3575,"byte_end":3587,"line_start":48,"line_end":48,"column_start":12,"column_end":24},"name":"as_inner_mut","qualname":"<Decoder<R>>::as_inner_mut","value":"pub fn as_inner_mut(&mut Self) -> &mut R","parent":null,"children":[],"decl_id":null,"docs":" Returns the mutable reference to the inner stream.\n","sig":null,"attributes":[{"value":"/ Returns the mutable reference to the inner stream.","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/deflate/decode.rs","byte_start":3509,"byte_end":3563,"line_start":47,"line_end":47,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":42},"span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/deflate/decode.rs","byte_start":4083,"byte_end":4093,"line_start":63,"line_end":63,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Decoder<R>>::into_inner","value":"pub fn into_inner(Self) -> R","parent":null,"children":[],"decl_id":null,"docs":" Unwraps this `Decoder`, returning the underlying reader.","sig":null,"attributes":[{"value":"/ Unwraps this `Decoder`, returning the underlying reader.","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/deflate/decode.rs","byte_start":3661,"byte_end":3721,"line_start":52,"line_end":52,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/deflate/decode.rs","byte_start":3726,"byte_end":3729,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/deflate/decode.rs","byte_start":3734,"byte_end":3748,"line_start":54,"line_end":54,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/deflate/decode.rs","byte_start":3753,"byte_end":3760,"line_start":55,"line_end":55,"column_start":5,"column_end":12}},{"value":"/ use std::io::Cursor;","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/deflate/decode.rs","byte_start":3765,"byte_end":3789,"line_start":56,"line_end":56,"column_start":5,"column_end":29}},{"value":"/ use libflate::deflate::Decoder;","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/deflate/decode.rs","byte_start":3794,"byte_end":3829,"line_start":57,"line_end":57,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/deflate/decode.rs","byte_start":3834,"byte_end":3837,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ let encoded_data = [243, 72, 205, 201, 201, 87, 8, 207, 47, 202, 73, 81, 4, 0];","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/deflate/decode.rs","byte_start":3842,"byte_end":3925,"line_start":59,"line_end":59,"column_start":5,"column_end":88}},{"value":"/ let decoder = Decoder::new(Cursor::new(&encoded_data));","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/deflate/decode.rs","byte_start":3930,"byte_end":3989,"line_start":60,"line_end":60,"column_start":5,"column_end":64}},{"value":"/ assert_eq!(decoder.into_inner().into_inner(), &encoded_data);","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/deflate/decode.rs","byte_start":3994,"byte_end":4059,"line_start":61,"line_end":61,"column_start":5,"column_end":70}},{"value":"/ ```","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/deflate/decode.rs","byte_start":4064,"byte_end":4071,"line_start":62,"line_end":62,"column_start":5,"column_end":12}}]},{"kind":"Const","id":{"krate":0,"index":78},"span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/deflate/encode.rs","byte_start":9544,"byte_end":9562,"line_start":10,"line_end":10,"column_start":11,"column_end":29},"name":"DEFAULT_BLOCK_SIZE","qualname":"::deflate::encode::DEFAULT_BLOCK_SIZE","value":"usize","parent":null,"children":[],"decl_id":null,"docs":" The default size of a DEFLATE block.\n","sig":null,"attributes":[{"value":"/ The default size of a DEFLATE block.","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/deflate/encode.rs","byte_start":9493,"byte_end":9533,"line_start":9,"line_end":9,"column_start":1,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":876},"span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/deflate/encode.rs","byte_start":9731,"byte_end":9744,"line_start":16,"line_end":16,"column_start":12,"column_end":25},"name":"EncodeOptions","qualname":"::deflate::encode::EncodeOptions","value":"EncodeOptions {  }","parent":null,"children":[{"krate":0,"index":878},{"krate":0,"index":879},{"krate":0,"index":880}],"decl_id":null,"docs":" Options for a DEFLATE encoder.\n","sig":null,"attributes":[{"value":"/ Options for a DEFLATE encoder.","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/deflate/encode.rs","byte_start":9640,"byte_end":9674,"line_start":14,"line_end":14,"column_start":1,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":83},"span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/deflate/encode.rs","byte_start":10282,"byte_end":10285,"line_start":36,"line_end":36,"column_start":12,"column_end":15},"name":"new","qualname":"<EncodeOptions<lz77::DefaultLz77Encoder>>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Makes a default instance.","sig":null,"attributes":[{"value":"/ Makes a default instance.","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/deflate/encode.rs","byte_start":10015,"byte_end":10044,"line_start":27,"line_end":27,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/deflate/encode.rs","byte_start":10049,"byte_end":10052,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/deflate/encode.rs","byte_start":10057,"byte_end":10071,"line_start":29,"line_end":29,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/deflate/encode.rs","byte_start":10076,"byte_end":10083,"line_start":30,"line_end":30,"column_start":5,"column_end":12}},{"value":"/ use libflate::deflate::{Encoder, EncodeOptions};","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/deflate/encode.rs","byte_start":10088,"byte_end":10140,"line_start":31,"line_end":31,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/deflate/encode.rs","byte_start":10145,"byte_end":10148,"line_start":32,"line_end":32,"column_start":5,"column_end":8}},{"value":"/ let options = EncodeOptions::new();","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/deflate/encode.rs","byte_start":10153,"byte_end":10192,"line_start":33,"line_end":33,"column_start":5,"column_end":44}},{"value":"/ let encoder = Encoder::with_options(Vec::new(), options);","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/deflate/encode.rs","byte_start":10197,"byte_end":10258,"line_start":34,"line_end":34,"column_start":5,"column_end":66}},{"value":"/ ```","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/deflate/encode.rs","byte_start":10263,"byte_end":10270,"line_start":35,"line_end":35,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":86},"span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/deflate/encode.rs","byte_start":10913,"byte_end":10922,"line_start":58,"line_end":58,"column_start":12,"column_end":21},"name":"with_lz77","qualname":"<EncodeOptions<E>>::with_lz77","value":"pub fn with_lz77(E) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Specifies the LZ77 encoder used to compress input data.","sig":null,"attributes":[{"value":"/ Specifies the LZ77 encoder used to compress input data.","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/deflate/encode.rs","byte_start":10538,"byte_end":10597,"line_start":48,"line_end":48,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/deflate/encode.rs","byte_start":10602,"byte_end":10605,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/deflate/encode.rs","byte_start":10610,"byte_end":10623,"line_start":50,"line_end":50,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/deflate/encode.rs","byte_start":10628,"byte_end":10635,"line_start":51,"line_end":51,"column_start":5,"column_end":12}},{"value":"/ use libflate::lz77::DefaultLz77Encoder;","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/deflate/encode.rs","byte_start":10640,"byte_end":10683,"line_start":52,"line_end":52,"column_start":5,"column_end":48}},{"value":"/ use libflate::deflate::{Encoder, EncodeOptions};","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/deflate/encode.rs","byte_start":10688,"byte_end":10740,"line_start":53,"line_end":53,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/deflate/encode.rs","byte_start":10745,"byte_end":10748,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ let options = EncodeOptions::with_lz77(DefaultLz77Encoder::new());","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/deflate/encode.rs","byte_start":10753,"byte_end":10823,"line_start":55,"line_end":55,"column_start":5,"column_end":75}},{"value":"/ let encoder = Encoder::with_options(Vec::new(), options);","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/deflate/encode.rs","byte_start":10828,"byte_end":10889,"line_start":56,"line_end":56,"column_start":5,"column_end":66}},{"value":"/ ```","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/deflate/encode.rs","byte_start":10894,"byte_end":10901,"line_start":57,"line_end":57,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":87},"span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/deflate/encode.rs","byte_start":11428,"byte_end":11442,"line_start":76,"line_end":76,"column_start":12,"column_end":26},"name":"no_compression","qualname":"<EncodeOptions<E>>::no_compression","value":"pub fn no_compression(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Disables LZ77 compression.","sig":null,"attributes":[{"value":"/ Disables LZ77 compression.","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/deflate/encode.rs","byte_start":11096,"byte_end":11126,"line_start":66,"line_end":66,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/deflate/encode.rs","byte_start":11131,"byte_end":11134,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/deflate/encode.rs","byte_start":11139,"byte_end":11152,"line_start":68,"line_end":68,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/deflate/encode.rs","byte_start":11157,"byte_end":11164,"line_start":69,"line_end":69,"column_start":5,"column_end":12}},{"value":"/ use libflate::lz77::DefaultLz77Encoder;","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/deflate/encode.rs","byte_start":11169,"byte_end":11212,"line_start":70,"line_end":70,"column_start":5,"column_end":48}},{"value":"/ use libflate::deflate::{Encoder, EncodeOptions};","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/deflate/encode.rs","byte_start":11217,"byte_end":11269,"line_start":71,"line_end":71,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/deflate/encode.rs","byte_start":11274,"byte_end":11277,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ let options = EncodeOptions::new().no_compression();","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/deflate/encode.rs","byte_start":11282,"byte_end":11338,"line_start":73,"line_end":73,"column_start":5,"column_end":61}},{"value":"/ let encoder = Encoder::with_options(Vec::new(), options);","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/deflate/encode.rs","byte_start":11343,"byte_end":11404,"line_start":74,"line_end":74,"column_start":5,"column_end":66}},{"value":"/ ```","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/deflate/encode.rs","byte_start":11409,"byte_end":11416,"line_start":75,"line_end":75,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":88},"span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/deflate/encode.rs","byte_start":11886,"byte_end":11896,"line_start":92,"line_end":92,"column_start":12,"column_end":22},"name":"block_size","qualname":"<EncodeOptions<E>>::block_size","value":"pub fn block_size(Self, usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Specifies the hint of the size of a DEFLATE block.","sig":null,"attributes":[{"value":"/ Specifies the hint of the size of a DEFLATE block.","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/deflate/encode.rs","byte_start":11513,"byte_end":11567,"line_start":81,"line_end":81,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/deflate/encode.rs","byte_start":11572,"byte_end":11575,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ The default value is `DEFAULT_BLOCK_SIZE`.","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/deflate/encode.rs","byte_start":11580,"byte_end":11626,"line_start":83,"line_end":83,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/deflate/encode.rs","byte_start":11631,"byte_end":11634,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/deflate/encode.rs","byte_start":11639,"byte_end":11652,"line_start":85,"line_end":85,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/deflate/encode.rs","byte_start":11657,"byte_end":11664,"line_start":86,"line_end":86,"column_start":5,"column_end":12}},{"value":"/ use libflate::deflate::{Encoder, EncodeOptions};","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/deflate/encode.rs","byte_start":11669,"byte_end":11721,"line_start":87,"line_end":87,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/deflate/encode.rs","byte_start":11726,"byte_end":11729,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ let options = EncodeOptions::new().block_size(512 * 1024);","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/deflate/encode.rs","byte_start":11734,"byte_end":11796,"line_start":89,"line_end":89,"column_start":5,"column_end":67}},{"value":"/ let encoder = Encoder::with_options(Vec::new(), options);","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/deflate/encode.rs","byte_start":11801,"byte_end":11862,"line_start":90,"line_end":90,"column_start":5,"column_end":66}},{"value":"/ ```","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/deflate/encode.rs","byte_start":11867,"byte_end":11874,"line_start":91,"line_end":91,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":89},"span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/deflate/encode.rs","byte_start":12296,"byte_end":12315,"line_start":106,"line_end":106,"column_start":12,"column_end":31},"name":"fixed_huffman_codes","qualname":"<EncodeOptions<E>>::fixed_huffman_codes","value":"pub fn fixed_huffman_codes(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Specifies to compress with fixed huffman codes.","sig":null,"attributes":[{"value":"/ Specifies to compress with fixed huffman codes.","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/deflate/encode.rs","byte_start":11986,"byte_end":12037,"line_start":97,"line_end":97,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/deflate/encode.rs","byte_start":12042,"byte_end":12045,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/deflate/encode.rs","byte_start":12050,"byte_end":12063,"line_start":99,"line_end":99,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/deflate/encode.rs","byte_start":12068,"byte_end":12075,"line_start":100,"line_end":100,"column_start":5,"column_end":12}},{"value":"/ use libflate::deflate::{Encoder, EncodeOptions};","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/deflate/encode.rs","byte_start":12080,"byte_end":12132,"line_start":101,"line_end":101,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/deflate/encode.rs","byte_start":12137,"byte_end":12140,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ let options = EncodeOptions::new().fixed_huffman_codes();","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/deflate/encode.rs","byte_start":12145,"byte_end":12206,"line_start":103,"line_end":103,"column_start":5,"column_end":66}},{"value":"/ let encoder = Encoder::with_options(Vec::new(), options);","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/deflate/encode.rs","byte_start":12211,"byte_end":12272,"line_start":104,"line_end":104,"column_start":5,"column_end":66}},{"value":"/ ```","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/deflate/encode.rs","byte_start":12277,"byte_end":12284,"line_start":105,"line_end":105,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":902},"span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/deflate/encode.rs","byte_start":12887,"byte_end":12894,"line_start":131,"line_end":131,"column_start":12,"column_end":19},"name":"Encoder","qualname":"::deflate::encode::Encoder","value":"Encoder {  }","parent":null,"children":[{"krate":0,"index":905},{"krate":0,"index":906}],"decl_id":null,"docs":" DEFLATE encoder.\n","sig":null,"attributes":[{"value":"/ DEFLATE encoder.","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/deflate/encode.rs","byte_start":12838,"byte_end":12858,"line_start":129,"line_end":129,"column_start":1,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":94},"span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/deflate/encode.rs","byte_start":13617,"byte_end":13620,"line_start":155,"line_end":155,"column_start":12,"column_end":15},"name":"new","qualname":"<Encoder<W, lz77::DefaultLz77Encoder>>::new","value":"pub fn new(W) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Makes a new encoder instance.","sig":null,"attributes":[{"value":"/ Makes a new encoder instance.","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/deflate/encode.rs","byte_start":13059,"byte_end":13092,"line_start":139,"line_end":139,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/deflate/encode.rs","byte_start":13097,"byte_end":13100,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ Encoded DEFLATE stream is written to `inner`.","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/deflate/encode.rs","byte_start":13105,"byte_end":13154,"line_start":141,"line_end":141,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/deflate/encode.rs","byte_start":13159,"byte_end":13162,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/deflate/encode.rs","byte_start":13167,"byte_end":13181,"line_start":143,"line_end":143,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/deflate/encode.rs","byte_start":13186,"byte_end":13193,"line_start":144,"line_end":144,"column_start":5,"column_end":12}},{"value":"/ use std::io::Write;","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/deflate/encode.rs","byte_start":13198,"byte_end":13221,"line_start":145,"line_end":145,"column_start":5,"column_end":28}},{"value":"/ use libflate::deflate::Encoder;","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/deflate/encode.rs","byte_start":13226,"byte_end":13261,"line_start":146,"line_end":146,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/deflate/encode.rs","byte_start":13266,"byte_end":13269,"line_start":147,"line_end":147,"column_start":5,"column_end":8}},{"value":"/ let mut encoder = Encoder::new(Vec::new());","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/deflate/encode.rs","byte_start":13274,"byte_end":13321,"line_start":148,"line_end":148,"column_start":5,"column_end":52}},{"value":"/ encoder.write_all(b\"Hello World!\").unwrap();","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/deflate/encode.rs","byte_start":13326,"byte_end":13374,"line_start":149,"line_end":149,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/deflate/encode.rs","byte_start":13379,"byte_end":13382,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(encoder.finish().into_result().unwrap(),","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/deflate/encode.rs","byte_start":13387,"byte_end":13442,"line_start":151,"line_end":151,"column_start":5,"column_end":60}},{"value":"/            [5, 192, 49, 13, 0, 0, 8, 3, 65, 43, 224, 6, 7, 24, 128, 237,","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/deflate/encode.rs","byte_start":13447,"byte_end":13523,"line_start":152,"line_end":152,"column_start":5,"column_end":81}},{"value":"/            147, 38, 245, 63, 244, 230, 65, 181, 50, 215, 1]);","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/deflate/encode.rs","byte_start":13528,"byte_end":13593,"line_start":153,"line_end":153,"column_start":5,"column_end":70}},{"value":"/ ```","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/deflate/encode.rs","byte_start":13598,"byte_end":13605,"line_start":154,"line_end":154,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":98},"span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/deflate/encode.rs","byte_start":14433,"byte_end":14445,"line_start":181,"line_end":181,"column_start":12,"column_end":24},"name":"with_options","qualname":"<Encoder<W, E>>::with_options","value":"pub fn with_options(W, EncodeOptions<E>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Makes a new encoder instance with specified options.","sig":null,"attributes":[{"value":"/ Makes a new encoder instance with specified options.","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/deflate/encode.rs","byte_start":13789,"byte_end":13845,"line_start":164,"line_end":164,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/deflate/encode.rs","byte_start":13850,"byte_end":13853,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ Encoded DEFLATE stream is written to `inner`.","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/deflate/encode.rs","byte_start":13858,"byte_end":13907,"line_start":166,"line_end":166,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/deflate/encode.rs","byte_start":13912,"byte_end":13915,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/deflate/encode.rs","byte_start":13920,"byte_end":13934,"line_start":168,"line_end":168,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/deflate/encode.rs","byte_start":13939,"byte_end":13946,"line_start":169,"line_end":169,"column_start":5,"column_end":12}},{"value":"/ use std::io::Write;","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/deflate/encode.rs","byte_start":13951,"byte_end":13974,"line_start":170,"line_end":170,"column_start":5,"column_end":28}},{"value":"/ use libflate::deflate::{Encoder, EncodeOptions};","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/deflate/encode.rs","byte_start":13979,"byte_end":14031,"line_start":171,"line_end":171,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/deflate/encode.rs","byte_start":14036,"byte_end":14039,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ let options = EncodeOptions::new().no_compression();","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/deflate/encode.rs","byte_start":14044,"byte_end":14100,"line_start":173,"line_end":173,"column_start":5,"column_end":61}},{"value":"/ let mut encoder = Encoder::with_options(Vec::new(), options);","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/deflate/encode.rs","byte_start":14105,"byte_end":14170,"line_start":174,"line_end":174,"column_start":5,"column_end":70}},{"value":"/ encoder.write_all(b\"Hello World!\").unwrap();","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/deflate/encode.rs","byte_start":14175,"byte_end":14223,"line_start":175,"line_end":175,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/deflate/encode.rs","byte_start":14228,"byte_end":14231,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(encoder.finish().into_result().unwrap(),","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/deflate/encode.rs","byte_start":14236,"byte_end":14291,"line_start":177,"line_end":177,"column_start":5,"column_end":60}},{"value":"/            [1, 12, 0, 243, 255, 72, 101, 108, 108, 111, 32, 87, 111,","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/deflate/encode.rs","byte_start":14296,"byte_end":14368,"line_start":178,"line_end":178,"column_start":5,"column_end":77}},{"value":"/             114, 108, 100, 33]);","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/deflate/encode.rs","byte_start":14373,"byte_end":14409,"line_start":179,"line_end":179,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/deflate/encode.rs","byte_start":14414,"byte_end":14421,"line_start":180,"line_end":180,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":99},"span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/deflate/encode.rs","byte_start":15140,"byte_end":15146,"line_start":202,"line_end":202,"column_start":12,"column_end":18},"name":"finish","qualname":"<Encoder<W, E>>::finish","value":"pub fn finish(Self) -> Finish<W, io::Error>","parent":null,"children":[],"decl_id":null,"docs":" Flushes internal buffer and returns the inner stream.","sig":null,"attributes":[{"value":"/ Flushes internal buffer and returns the inner stream.","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/deflate/encode.rs","byte_start":14620,"byte_end":14677,"line_start":188,"line_end":188,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/deflate/encode.rs","byte_start":14682,"byte_end":14685,"line_start":189,"line_end":189,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/deflate/encode.rs","byte_start":14690,"byte_end":14704,"line_start":190,"line_end":190,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/deflate/encode.rs","byte_start":14709,"byte_end":14716,"line_start":191,"line_end":191,"column_start":5,"column_end":12}},{"value":"/ use std::io::Write;","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/deflate/encode.rs","byte_start":14721,"byte_end":14744,"line_start":192,"line_end":192,"column_start":5,"column_end":28}},{"value":"/ use libflate::deflate::Encoder;","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/deflate/encode.rs","byte_start":14749,"byte_end":14784,"line_start":193,"line_end":193,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/deflate/encode.rs","byte_start":14789,"byte_end":14792,"line_start":194,"line_end":194,"column_start":5,"column_end":8}},{"value":"/ let mut encoder = Encoder::new(Vec::new());","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/deflate/encode.rs","byte_start":14797,"byte_end":14844,"line_start":195,"line_end":195,"column_start":5,"column_end":52}},{"value":"/ encoder.write_all(b\"Hello World!\").unwrap();","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/deflate/encode.rs","byte_start":14849,"byte_end":14897,"line_start":196,"line_end":196,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/deflate/encode.rs","byte_start":14902,"byte_end":14905,"line_start":197,"line_end":197,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(encoder.finish().into_result().unwrap(),","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/deflate/encode.rs","byte_start":14910,"byte_end":14965,"line_start":198,"line_end":198,"column_start":5,"column_end":60}},{"value":"/            [5, 192, 49, 13, 0, 0, 8, 3, 65, 43, 224, 6, 7, 24, 128, 237,","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/deflate/encode.rs","byte_start":14970,"byte_end":15046,"line_start":199,"line_end":199,"column_start":5,"column_end":81}},{"value":"/            147, 38, 245, 63, 244, 230, 65, 181, 50, 215, 1]);","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/deflate/encode.rs","byte_start":15051,"byte_end":15116,"line_start":200,"line_end":200,"column_start":5,"column_end":70}},{"value":"/ ```","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/deflate/encode.rs","byte_start":15121,"byte_end":15128,"line_start":201,"line_end":201,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":100},"span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/deflate/encode.rs","byte_start":15460,"byte_end":15472,"line_start":210,"line_end":210,"column_start":12,"column_end":24},"name":"as_inner_ref","qualname":"<Encoder<W, E>>::as_inner_ref","value":"pub fn as_inner_ref(&Self) -> &W","parent":null,"children":[],"decl_id":null,"docs":" Returns the immutable reference to the inner stream.\n","sig":null,"attributes":[{"value":"/ Returns the immutable reference to the inner stream.","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/deflate/encode.rs","byte_start":15392,"byte_end":15448,"line_start":209,"line_end":209,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":101},"span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/deflate/encode.rs","byte_start":15600,"byte_end":15612,"line_start":215,"line_end":215,"column_start":12,"column_end":24},"name":"as_inner_mut","qualname":"<Encoder<W, E>>::as_inner_mut","value":"pub fn as_inner_mut(&mut Self) -> &mut W","parent":null,"children":[],"decl_id":null,"docs":" Returns the mutable reference to the inner stream.\n","sig":null,"attributes":[{"value":"/ Returns the mutable reference to the inner stream.","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/deflate/encode.rs","byte_start":15534,"byte_end":15588,"line_start":214,"line_end":214,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":102},"span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/deflate/encode.rs","byte_start":15748,"byte_end":15758,"line_start":220,"line_end":220,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Encoder<W, E>>::into_inner","value":"pub fn into_inner(Self) -> W","parent":null,"children":[],"decl_id":null,"docs":" Unwraps the `Encoder`, returning the inner stream.\n","sig":null,"attributes":[{"value":"/ Unwraps the `Encoder`, returning the inner stream.","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/deflate/encode.rs","byte_start":15682,"byte_end":15736,"line_start":219,"line_end":219,"column_start":5,"column_end":59}}]},{"kind":"Mod","id":{"krate":0,"index":231},"span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/finish.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"finish","qualname":"::finish","value":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/finish.rs","parent":null,"children":[{"krate":0,"index":232},{"krate":0,"index":233},{"krate":0,"index":236},{"krate":0,"index":239},{"krate":0,"index":240},{"krate":0,"index":243},{"krate":0,"index":996},{"krate":0,"index":1001},{"krate":0,"index":1005},{"krate":0,"index":1009},{"krate":0,"index":1013},{"krate":0,"index":1017},{"krate":0,"index":1021},{"krate":0,"index":1024},{"krate":0,"index":1029},{"krate":0,"index":1032},{"krate":0,"index":1036},{"krate":0,"index":246},{"krate":0,"index":1041},{"krate":0,"index":1044},{"krate":0,"index":253},{"krate":0,"index":257},{"krate":0,"index":260},{"krate":0,"index":264},{"krate":0,"index":267},{"krate":0,"index":1047},{"krate":0,"index":1050},{"krate":0,"index":271},{"krate":0,"index":275},{"krate":0,"index":278},{"krate":0,"index":282},{"krate":0,"index":285},{"krate":0,"index":289}],"decl_id":null,"docs":" `Finish` and related types.\n","sig":null,"attributes":[{"value":"/ `Finish` and related types.","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/finish.rs","byte_start":39473,"byte_end":39504,"line_start":1,"line_end":1,"column_start":1,"column_end":32}}]},{"kind":"Struct","id":{"krate":0,"index":996},"span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/finish.rs","byte_start":39829,"byte_end":39835,"line_start":10,"line_end":10,"column_start":12,"column_end":18},"name":"Finish","qualname":"::finish::Finish","value":"Finish {  }","parent":null,"children":[{"krate":0,"index":999},{"krate":0,"index":1000}],"decl_id":null,"docs":" `Finish` is a type that represents a value which\n may have an error occurred during the computation.","sig":null,"attributes":[{"value":"/ `Finish` is a type that represents a value which","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/finish.rs","byte_start":39567,"byte_end":39619,"line_start":5,"line_end":5,"column_start":1,"column_end":53}},{"value":"/ may have an error occurred during the computation.","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/finish.rs","byte_start":39620,"byte_end":39674,"line_start":6,"line_end":6,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/finish.rs","byte_start":39675,"byte_end":39678,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ Logically, `Finish<T, E>` is equivalent to `Result<T, (T, E)>`.","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/finish.rs","byte_start":39679,"byte_end":39746,"line_start":8,"line_end":8,"column_start":1,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":249},"span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/finish.rs","byte_start":40391,"byte_end":40394,"line_start":29,"line_end":29,"column_start":12,"column_end":15},"name":"new","qualname":"<Finish<T, E>>::new","value":"pub fn new(T, Option<E>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Makes a new instance.","sig":null,"attributes":[{"value":"/ Makes a new instance.","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/finish.rs","byte_start":39912,"byte_end":39937,"line_start":15,"line_end":15,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/finish.rs","byte_start":39942,"byte_end":39945,"line_start":16,"line_end":16,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/finish.rs","byte_start":39950,"byte_end":39964,"line_start":17,"line_end":17,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/finish.rs","byte_start":39969,"byte_end":39976,"line_start":18,"line_end":18,"column_start":5,"column_end":12}},{"value":"/ use libflate::Finish;","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/finish.rs","byte_start":39981,"byte_end":40006,"line_start":19,"line_end":19,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/finish.rs","byte_start":40011,"byte_end":40014,"line_start":20,"line_end":20,"column_start":5,"column_end":8}},{"value":"/ // The result value of a succeeded computation","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/finish.rs","byte_start":40019,"byte_end":40069,"line_start":21,"line_end":21,"column_start":5,"column_end":55}},{"value":"/ let succeeded = Finish::new(\"value\", None as Option<()>);","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/finish.rs","byte_start":40074,"byte_end":40135,"line_start":22,"line_end":22,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(succeeded.into_result(), Ok(\"value\"));","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/finish.rs","byte_start":40140,"byte_end":40193,"line_start":23,"line_end":23,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/finish.rs","byte_start":40198,"byte_end":40201,"line_start":24,"line_end":24,"column_start":5,"column_end":8}},{"value":"/ // The result value of a failed computation","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/finish.rs","byte_start":40206,"byte_end":40253,"line_start":25,"line_end":25,"column_start":5,"column_end":52}},{"value":"/ let failed = Finish::new(\"value\", Some(\"error\"));","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/finish.rs","byte_start":40258,"byte_end":40311,"line_start":26,"line_end":26,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(failed.into_result(), Err(\"error\"));","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/finish.rs","byte_start":40316,"byte_end":40367,"line_start":27,"line_end":27,"column_start":5,"column_end":56}},{"value":"/ ```","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/finish.rs","byte_start":40372,"byte_end":40379,"line_start":28,"line_end":28,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":250},"span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/finish.rs","byte_start":40854,"byte_end":40860,"line_start":45,"line_end":45,"column_start":12,"column_end":18},"name":"unwrap","qualname":"<Finish<T, E>>::unwrap","value":"pub fn unwrap(Self) -> (T, Option<E>)","parent":null,"children":[],"decl_id":null,"docs":" Unwraps the instance.","sig":null,"attributes":[{"value":"/ Unwraps the instance.","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/finish.rs","byte_start":40476,"byte_end":40501,"line_start":33,"line_end":33,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/finish.rs","byte_start":40506,"byte_end":40509,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/finish.rs","byte_start":40514,"byte_end":40528,"line_start":35,"line_end":35,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/finish.rs","byte_start":40533,"byte_end":40540,"line_start":36,"line_end":36,"column_start":5,"column_end":12}},{"value":"/ use libflate::Finish;","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/finish.rs","byte_start":40545,"byte_end":40570,"line_start":37,"line_end":37,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/finish.rs","byte_start":40575,"byte_end":40578,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ let succeeded = Finish::new(\"value\", None as Option<()>);","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/finish.rs","byte_start":40583,"byte_end":40644,"line_start":39,"line_end":39,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(succeeded.unwrap(), (\"value\", None));","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/finish.rs","byte_start":40649,"byte_end":40701,"line_start":40,"line_end":40,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/finish.rs","byte_start":40706,"byte_end":40709,"line_start":41,"line_end":41,"column_start":5,"column_end":8}},{"value":"/ let failed = Finish::new(\"value\", Some(\"error\"));","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/finish.rs","byte_start":40714,"byte_end":40767,"line_start":42,"line_end":42,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(failed.unwrap(), (\"value\", Some(\"error\")));","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/finish.rs","byte_start":40772,"byte_end":40830,"line_start":43,"line_end":43,"column_start":5,"column_end":63}},{"value":"/ ```","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/finish.rs","byte_start":40835,"byte_end":40842,"line_start":44,"line_end":44,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":251},"span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/finish.rs","byte_start":41329,"byte_end":41340,"line_start":61,"line_end":61,"column_start":12,"column_end":23},"name":"into_result","qualname":"<Finish<T, E>>::into_result","value":"pub fn into_result(Self) -> Result<T, E>","parent":null,"children":[],"decl_id":null,"docs":" Converts from `Finish<T, E>` to `Result<T, E>`.","sig":null,"attributes":[{"value":"/ Converts from `Finish<T, E>` to `Result<T, E>`.","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/finish.rs","byte_start":40931,"byte_end":40982,"line_start":49,"line_end":49,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/finish.rs","byte_start":40987,"byte_end":40990,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/finish.rs","byte_start":40995,"byte_end":41009,"line_start":51,"line_end":51,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/finish.rs","byte_start":41014,"byte_end":41021,"line_start":52,"line_end":52,"column_start":5,"column_end":12}},{"value":"/ use libflate::Finish;","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/finish.rs","byte_start":41026,"byte_end":41051,"line_start":53,"line_end":53,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/finish.rs","byte_start":41056,"byte_end":41059,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ let succeeded = Finish::new(\"value\", None as Option<()>);","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/finish.rs","byte_start":41064,"byte_end":41125,"line_start":55,"line_end":55,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(succeeded.into_result(), Ok(\"value\"));","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/finish.rs","byte_start":41130,"byte_end":41183,"line_start":56,"line_end":56,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/finish.rs","byte_start":41188,"byte_end":41191,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ let failed = Finish::new(\"value\", Some(\"error\"));","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/finish.rs","byte_start":41196,"byte_end":41249,"line_start":58,"line_end":58,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(failed.into_result(), Err(\"error\"));","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/finish.rs","byte_start":41254,"byte_end":41305,"line_start":59,"line_end":59,"column_start":5,"column_end":56}},{"value":"/ ```","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/finish.rs","byte_start":41310,"byte_end":41317,"line_start":60,"line_end":60,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":252},"span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/finish.rs","byte_start":41885,"byte_end":41894,"line_start":81,"line_end":81,"column_start":12,"column_end":21},"name":"as_result","qualname":"<Finish<T, E>>::as_result","value":"pub fn as_result(&Self) -> Result<&T, &E>","parent":null,"children":[],"decl_id":null,"docs":" Converts from `Finish<T, E>` to `Result<&T, &E>`.","sig":null,"attributes":[{"value":"/ Converts from `Finish<T, E>` to `Result<&T, &E>`.","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/finish.rs","byte_start":41487,"byte_end":41540,"line_start":69,"line_end":69,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/finish.rs","byte_start":41545,"byte_end":41548,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/finish.rs","byte_start":41553,"byte_end":41567,"line_start":71,"line_end":71,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/finish.rs","byte_start":41572,"byte_end":41579,"line_start":72,"line_end":72,"column_start":5,"column_end":12}},{"value":"/ use libflate::Finish;","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/finish.rs","byte_start":41584,"byte_end":41609,"line_start":73,"line_end":73,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/finish.rs","byte_start":41614,"byte_end":41617,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ let succeeded = Finish::new(\"value\", None as Option<()>);","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/finish.rs","byte_start":41622,"byte_end":41683,"line_start":75,"line_end":75,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(succeeded.as_result(), Ok(&\"value\"));","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/finish.rs","byte_start":41688,"byte_end":41740,"line_start":76,"line_end":76,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/finish.rs","byte_start":41745,"byte_end":41748,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ let failed = Finish::new(\"value\", Some(\"error\"));","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/finish.rs","byte_start":41753,"byte_end":41806,"line_start":78,"line_end":78,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(failed.as_result(), Err(&\"error\"));","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/finish.rs","byte_start":41811,"byte_end":41861,"line_start":79,"line_end":79,"column_start":5,"column_end":55}},{"value":"/ ```","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/finish.rs","byte_start":41866,"byte_end":41873,"line_start":80,"line_end":80,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":1041},"span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/finish.rs","byte_start":42353,"byte_end":42363,"line_start":98,"line_end":98,"column_start":12,"column_end":22},"name":"AutoFinish","qualname":"::finish::AutoFinish","value":"AutoFinish {  }","parent":null,"children":[{"krate":0,"index":1043}],"decl_id":null,"docs":" A wrapper struct that completes the processing of the underlying instance when drops.","sig":null,"attributes":[{"value":"/ A wrapper struct that completes the processing of the underlying instance when drops.","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/finish.rs","byte_start":42047,"byte_end":42136,"line_start":90,"line_end":90,"column_start":1,"column_end":90}},{"value":"/","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/finish.rs","byte_start":42137,"byte_end":42140,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/ This calls `Complete:::complete` method of `T` when drops.","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/finish.rs","byte_start":42141,"byte_end":42203,"line_start":92,"line_end":92,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/finish.rs","byte_start":42204,"byte_end":42207,"line_start":93,"line_end":93,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/finish.rs","byte_start":42208,"byte_end":42220,"line_start":94,"line_end":94,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/finish.rs","byte_start":42221,"byte_end":42224,"line_start":95,"line_end":95,"column_start":1,"column_end":4}},{"value":"/ If the invocation of `Complete::complete(T)` returns an error, `AutoFinish::drop()` will panic.","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/finish.rs","byte_start":42225,"byte_end":42324,"line_start":96,"line_end":96,"column_start":1,"column_end":100}}]},{"kind":"Method","id":{"krate":0,"index":255},"span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/finish.rs","byte_start":42863,"byte_end":42866,"line_start":116,"line_end":116,"column_start":12,"column_end":15},"name":"new","qualname":"<AutoFinish<T>>::new","value":"pub fn new(T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `AutoFinish` instance.","sig":null,"attributes":[{"value":"/ Makes a new `AutoFinish` instance.","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/finish.rs","byte_start":42441,"byte_end":42479,"line_start":102,"line_end":102,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/finish.rs","byte_start":42484,"byte_end":42487,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/finish.rs","byte_start":42492,"byte_end":42506,"line_start":104,"line_end":104,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/finish.rs","byte_start":42511,"byte_end":42514,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/finish.rs","byte_start":42519,"byte_end":42526,"line_start":106,"line_end":106,"column_start":5,"column_end":12}},{"value":"/ use std::io;","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/finish.rs","byte_start":42531,"byte_end":42547,"line_start":107,"line_end":107,"column_start":5,"column_end":21}},{"value":"/ use libflate::finish::AutoFinish;","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/finish.rs","byte_start":42552,"byte_end":42589,"line_start":108,"line_end":108,"column_start":5,"column_end":42}},{"value":"/ use libflate::gzip::Encoder;","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/finish.rs","byte_start":42594,"byte_end":42626,"line_start":109,"line_end":109,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/finish.rs","byte_start":42631,"byte_end":42634,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ let plain = b\"Hello World!\";","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/finish.rs","byte_start":42639,"byte_end":42671,"line_start":111,"line_end":111,"column_start":5,"column_end":37}},{"value":"/ let mut buf = Vec::new();","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/finish.rs","byte_start":42676,"byte_end":42705,"line_start":112,"line_end":112,"column_start":5,"column_end":34}},{"value":"/ let mut encoder = AutoFinish::new(Encoder::new(&mut buf).unwrap());","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/finish.rs","byte_start":42710,"byte_end":42781,"line_start":113,"line_end":113,"column_start":5,"column_end":76}},{"value":"/ io::copy(&mut &plain[..], &mut encoder).unwrap();","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/finish.rs","byte_start":42786,"byte_end":42839,"line_start":114,"line_end":114,"column_start":5,"column_end":58}},{"value":"/ ```","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/finish.rs","byte_start":42844,"byte_end":42851,"line_start":115,"line_end":115,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":256},"span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/finish.rs","byte_start":43026,"byte_end":43036,"line_start":121,"line_end":121,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<AutoFinish<T>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Unwraps this `AutoFinish` instance, returning the underlying instance.\n","sig":null,"attributes":[{"value":"/ Unwraps this `AutoFinish` instance, returning the underlying instance.","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/finish.rs","byte_start":42940,"byte_end":43014,"line_start":120,"line_end":120,"column_start":5,"column_end":79}}]},{"kind":"Struct","id":{"krate":0,"index":1047},"span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/finish.rs","byte_start":44169,"byte_end":44188,"line_start":160,"line_end":160,"column_start":12,"column_end":31},"name":"AutoFinishUnchecked","qualname":"::finish::AutoFinishUnchecked","value":"AutoFinishUnchecked {  }","parent":null,"children":[{"krate":0,"index":1049}],"decl_id":null,"docs":" A wrapper struct that completes the processing of the underlying instance when drops.","sig":null,"attributes":[{"value":"/ A wrapper struct that completes the processing of the underlying instance when drops.","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/finish.rs","byte_start":43896,"byte_end":43985,"line_start":154,"line_end":154,"column_start":1,"column_end":90}},{"value":"/","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/finish.rs","byte_start":43986,"byte_end":43989,"line_start":155,"line_end":155,"column_start":1,"column_end":4}},{"value":"/ This calls `Complete:::complete` method of `T` when drops.","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/finish.rs","byte_start":43990,"byte_end":44052,"line_start":156,"line_end":156,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/finish.rs","byte_start":44053,"byte_end":44056,"line_start":157,"line_end":157,"column_start":1,"column_end":4}},{"value":"/ Note that this ignores the result of the invocation of `Complete::complete(T)`.","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/finish.rs","byte_start":44057,"byte_end":44140,"line_start":158,"line_end":158,"column_start":1,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":273},"span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/finish.rs","byte_start":44724,"byte_end":44727,"line_start":178,"line_end":178,"column_start":12,"column_end":15},"name":"new","qualname":"<AutoFinishUnchecked<T>>::new","value":"pub fn new(T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `AutoFinishUnchecked` instance.","sig":null,"attributes":[{"value":"/ Makes a new `AutoFinishUnchecked` instance.","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/finish.rs","byte_start":44275,"byte_end":44322,"line_start":164,"line_end":164,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/finish.rs","byte_start":44327,"byte_end":44330,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/finish.rs","byte_start":44335,"byte_end":44349,"line_start":166,"line_end":166,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/finish.rs","byte_start":44354,"byte_end":44357,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/finish.rs","byte_start":44362,"byte_end":44369,"line_start":168,"line_end":168,"column_start":5,"column_end":12}},{"value":"/ use std::io;","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/finish.rs","byte_start":44374,"byte_end":44390,"line_start":169,"line_end":169,"column_start":5,"column_end":21}},{"value":"/ use libflate::finish::AutoFinishUnchecked;","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/finish.rs","byte_start":44395,"byte_end":44441,"line_start":170,"line_end":170,"column_start":5,"column_end":51}},{"value":"/ use libflate::gzip::Encoder;","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/finish.rs","byte_start":44446,"byte_end":44478,"line_start":171,"line_end":171,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/finish.rs","byte_start":44483,"byte_end":44486,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ let plain = b\"Hello World!\";","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/finish.rs","byte_start":44491,"byte_end":44523,"line_start":173,"line_end":173,"column_start":5,"column_end":37}},{"value":"/ let mut buf = Vec::new();","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/finish.rs","byte_start":44528,"byte_end":44557,"line_start":174,"line_end":174,"column_start":5,"column_end":34}},{"value":"/ let mut encoder = AutoFinishUnchecked::new(Encoder::new(&mut buf).unwrap());","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/finish.rs","byte_start":44562,"byte_end":44642,"line_start":175,"line_end":175,"column_start":5,"column_end":85}},{"value":"/ io::copy(&mut &plain[..], &mut encoder).unwrap();","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/finish.rs","byte_start":44647,"byte_end":44700,"line_start":176,"line_end":176,"column_start":5,"column_end":58}},{"value":"/ ```","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/finish.rs","byte_start":44705,"byte_end":44712,"line_start":177,"line_end":177,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":274},"span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/finish.rs","byte_start":44905,"byte_end":44915,"line_start":183,"line_end":183,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<AutoFinishUnchecked<T>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Unwraps this `AutoFinishUnchecked` instance, returning the underlying instance.\n","sig":null,"attributes":[{"value":"/ Unwraps this `AutoFinishUnchecked` instance, returning the underlying instance.","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/finish.rs","byte_start":44810,"byte_end":44893,"line_start":182,"line_end":182,"column_start":5,"column_end":88}}]},{"kind":"Trait","id":{"krate":0,"index":289},"span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/finish.rs","byte_start":45826,"byte_end":45834,"line_start":215,"line_end":215,"column_start":11,"column_end":19},"name":"Complete","qualname":"::finish::Complete","value":"Complete","parent":null,"children":[{"krate":0,"index":290}],"decl_id":null,"docs":" This trait allows to complete an I/O related processing.\n","sig":null,"attributes":[{"value":"/ This trait allows to complete an I/O related processing.","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/finish.rs","byte_start":45755,"byte_end":45815,"line_start":214,"line_end":214,"column_start":1,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":290},"span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/finish.rs","byte_start":45909,"byte_end":45917,"line_start":217,"line_end":217,"column_start":8,"column_end":16},"name":"complete","qualname":"::finish::Complete::complete","value":"pub fn complete(Self) -> io::Result<()>","parent":{"krate":0,"index":289},"children":[],"decl_id":null,"docs":" Completes the current processing and returns the result.\n","sig":null,"attributes":[{"value":"/ Completes the current processing and returns the result.","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/finish.rs","byte_start":45841,"byte_end":45901,"line_start":216,"line_end":216,"column_start":5,"column_end":65}}]},{"kind":"Mod","id":{"krate":0,"index":291},"span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"gzip","qualname":"::gzip","value":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","parent":null,"children":[{"krate":0,"index":292},{"krate":0,"index":295},{"krate":0,"index":298},{"krate":0,"index":299},{"krate":0,"index":302},{"krate":0,"index":305},{"krate":0,"index":308},{"krate":0,"index":309},{"krate":0,"index":312},{"krate":0,"index":315},{"krate":0,"index":318},{"krate":0,"index":320},{"krate":0,"index":321},{"krate":0,"index":322},{"krate":0,"index":323},{"krate":0,"index":324},{"krate":0,"index":325},{"krate":0,"index":326},{"krate":0,"index":327},{"krate":0,"index":328},{"krate":0,"index":329},{"krate":0,"index":330},{"krate":0,"index":331},{"krate":0,"index":332},{"krate":0,"index":333},{"krate":0,"index":334},{"krate":0,"index":335},{"krate":0,"index":336},{"krate":0,"index":337},{"krate":0,"index":338},{"krate":0,"index":339},{"krate":0,"index":340},{"krate":0,"index":1053},{"krate":0,"index":1060},{"krate":0,"index":1062},{"krate":0,"index":1064},{"krate":0,"index":1065},{"krate":0,"index":1067},{"krate":0,"index":1068},{"krate":0,"index":1070},{"krate":0,"index":341},{"krate":0,"index":344},{"krate":0,"index":1073},{"krate":0,"index":1076},{"krate":0,"index":1078},{"krate":0,"index":346},{"krate":0,"index":1080},{"krate":0,"index":1082},{"krate":0,"index":1084},{"krate":0,"index":353},{"krate":0,"index":364},{"krate":0,"index":1086},{"krate":0,"index":1095},{"krate":0,"index":1097},{"krate":0,"index":366},{"krate":0,"index":385},{"krate":0,"index":1099},{"krate":0,"index":1101},{"krate":0,"index":1103},{"krate":0,"index":1105},{"krate":0,"index":1106},{"krate":0,"index":1109},{"krate":0,"index":1110},{"krate":0,"index":1112},{"krate":0,"index":388},{"krate":0,"index":1115},{"krate":0,"index":1119},{"krate":0,"index":1121},{"krate":0,"index":1123},{"krate":0,"index":1124},{"krate":0,"index":1127},{"krate":0,"index":1128},{"krate":0,"index":1131},{"krate":0,"index":395},{"krate":0,"index":1134},{"krate":0,"index":1168},{"krate":0,"index":1170},{"krate":0,"index":1172},{"krate":0,"index":1173},{"krate":0,"index":1176},{"krate":0,"index":1177},{"krate":0,"index":1179},{"krate":0,"index":403},{"krate":0,"index":1182},{"krate":0,"index":1186},{"krate":0,"index":406},{"krate":0,"index":408},{"krate":0,"index":410},{"krate":0,"index":417},{"krate":0,"index":424},{"krate":0,"index":427},{"krate":0,"index":437},{"krate":0,"index":442},{"krate":0,"index":1189},{"krate":0,"index":1195},{"krate":0,"index":447},{"krate":0,"index":456},{"krate":0,"index":1198},{"krate":0,"index":1202},{"krate":0,"index":459},{"krate":0,"index":466}],"decl_id":null,"docs":" The encoder and decoder of the GZIP format.","sig":null,"attributes":[{"value":"/ The encoder and decoder of the GZIP format.","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":45946,"byte_end":45993,"line_start":1,"line_end":1,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":45994,"byte_end":45997,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ The GZIP format is defined in [RFC-1952](https://tools.ietf.org/html/rfc1952).","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":45998,"byte_end":46080,"line_start":3,"line_end":3,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":46081,"byte_end":46084,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":46085,"byte_end":46099,"line_start":5,"line_end":5,"column_start":1,"column_end":15}},{"value":"/ ```","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":46100,"byte_end":46107,"line_start":6,"line_end":6,"column_start":1,"column_end":8}},{"value":"/ use std::io::{self, Read};","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":46108,"byte_end":46138,"line_start":7,"line_end":7,"column_start":1,"column_end":31}},{"value":"/ use libflate::gzip::{Encoder, Decoder};","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":46139,"byte_end":46182,"line_start":8,"line_end":8,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":46183,"byte_end":46186,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ // Encoding","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":46187,"byte_end":46202,"line_start":10,"line_end":10,"column_start":1,"column_end":16}},{"value":"/ let mut encoder = Encoder::new(Vec::new()).unwrap();","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":46203,"byte_end":46259,"line_start":11,"line_end":11,"column_start":1,"column_end":57}},{"value":"/ io::copy(&mut &b\"Hello World!\"[..], &mut encoder).unwrap();","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":46260,"byte_end":46323,"line_start":12,"line_end":12,"column_start":1,"column_end":64}},{"value":"/ let encoded_data = encoder.finish().into_result().unwrap();","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":46324,"byte_end":46387,"line_start":13,"line_end":13,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":46388,"byte_end":46391,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ // Decoding","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":46392,"byte_end":46407,"line_start":15,"line_end":15,"column_start":1,"column_end":16}},{"value":"/ let mut decoder = Decoder::new(&encoded_data[..]).unwrap();","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":46408,"byte_end":46471,"line_start":16,"line_end":16,"column_start":1,"column_end":64}},{"value":"/ let mut decoded_data = Vec::new();","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":46472,"byte_end":46510,"line_start":17,"line_end":17,"column_start":1,"column_end":39}},{"value":"/ decoder.read_to_end(&mut decoded_data).unwrap();","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":46511,"byte_end":46563,"line_start":18,"line_end":18,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":46564,"byte_end":46567,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(decoded_data, b\"Hello World!\");","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":46568,"byte_end":46614,"line_start":20,"line_end":20,"column_start":1,"column_end":47}},{"value":"/ ```","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":46615,"byte_end":46622,"line_start":21,"line_end":21,"column_start":1,"column_end":8}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1054},"span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":47540,"byte_end":47547,"line_start":57,"line_end":57,"column_start":5,"column_end":12},"name":"Fastest","qualname":"::gzip::CompressionLevel::Fastest","value":"CompressionLevel::Fastest","parent":{"krate":0,"index":1053},"children":[],"decl_id":null,"docs":" Compressor used fastest algorithm.\n","sig":null,"attributes":[{"value":"/ Compressor used fastest algorithm.","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":47497,"byte_end":47535,"line_start":56,"line_end":56,"column_start":5,"column_end":43}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1056},"span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":47618,"byte_end":47625,"line_start":60,"line_end":60,"column_start":5,"column_end":12},"name":"Slowest","qualname":"::gzip::CompressionLevel::Slowest","value":"CompressionLevel::Slowest","parent":{"krate":0,"index":1053},"children":[],"decl_id":null,"docs":" Compressor used maximum compression, slowest algorithm.\n","sig":null,"attributes":[{"value":"/ Compressor used maximum compression, slowest algorithm.","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":47554,"byte_end":47613,"line_start":59,"line_end":59,"column_start":5,"column_end":64}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1058},"span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":47681,"byte_end":47688,"line_start":63,"line_end":63,"column_start":5,"column_end":12},"name":"Unknown","qualname":"::gzip::CompressionLevel::Unknown","value":"CompressionLevel::Unknown","parent":{"krate":0,"index":1053},"children":[],"decl_id":null,"docs":" No information about compression method.\n","sig":null,"attributes":[{"value":"/ No information about compression method.","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":47632,"byte_end":47676,"line_start":62,"line_end":62,"column_start":5,"column_end":49}}]},{"kind":"Enum","id":{"krate":0,"index":1053},"span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":47474,"byte_end":47490,"line_start":55,"line_end":55,"column_start":10,"column_end":26},"name":"CompressionLevel","qualname":"::gzip::CompressionLevel","value":"pub enum CompressionLevel { Fastest, Slowest, Unknown, }","parent":null,"children":[{"krate":0,"index":1054},{"krate":0,"index":1056},{"krate":0,"index":1058}],"decl_id":null,"docs":" Compression levels defined by the GZIP format.\n","sig":null,"attributes":[{"value":"/ Compression levels defined by the GZIP format.","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":47369,"byte_end":47419,"line_start":53,"line_end":53,"column_start":1,"column_end":51}}]},{"kind":"Struct","id":{"krate":0,"index":1080},"span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":49246,"byte_end":49259,"line_start":123,"line_end":123,"column_start":12,"column_end":25},"name":"HeaderBuilder","qualname":"::gzip::HeaderBuilder","value":"HeaderBuilder {  }","parent":null,"children":[{"krate":0,"index":1081}],"decl_id":null,"docs":" GZIP header builder.\n","sig":null,"attributes":[{"value":"/ GZIP header builder.","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":49186,"byte_end":49210,"line_start":121,"line_end":121,"column_start":1,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":354},"span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":49881,"byte_end":49884,"line_start":142,"line_end":142,"column_start":12,"column_end":15},"name":"new","qualname":"<HeaderBuilder>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Makes a new builder instance.","sig":null,"attributes":[{"value":"/ Makes a new builder instance.","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":49309,"byte_end":49342,"line_start":127,"line_end":127,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":49347,"byte_end":49350,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":49355,"byte_end":49369,"line_start":129,"line_end":129,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":49374,"byte_end":49381,"line_start":130,"line_end":130,"column_start":5,"column_end":12}},{"value":"/ use libflate::gzip::{HeaderBuilder, CompressionLevel, Os};","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":49386,"byte_end":49448,"line_start":131,"line_end":131,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":49453,"byte_end":49456,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ let header = HeaderBuilder::new().finish();","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":49461,"byte_end":49508,"line_start":133,"line_end":133,"column_start":5,"column_end":52}},{"value":"/ assert_eq!(header.compression_level(), CompressionLevel::Unknown);","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":49513,"byte_end":49583,"line_start":134,"line_end":134,"column_start":5,"column_end":75}},{"value":"/ assert_eq!(header.os(), Os::Unix);","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":49588,"byte_end":49626,"line_start":135,"line_end":135,"column_start":5,"column_end":43}},{"value":"/ assert_eq!(header.is_text(), false);","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":49631,"byte_end":49671,"line_start":136,"line_end":136,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(header.is_verified(), false);","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":49676,"byte_end":49720,"line_start":137,"line_end":137,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(header.extra_field(), None);","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":49725,"byte_end":49768,"line_start":138,"line_end":138,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(header.filename(), None);","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":49773,"byte_end":49813,"line_start":139,"line_end":139,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(header.comment(), None);","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":49818,"byte_end":49857,"line_start":140,"line_end":140,"column_start":5,"column_end":44}},{"value":"/ ```","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":49862,"byte_end":49869,"line_start":141,"line_end":141,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":356},"span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":50857,"byte_end":50874,"line_start":174,"line_end":174,"column_start":12,"column_end":29},"name":"modification_time","qualname":"<HeaderBuilder>::modification_time","value":"pub fn modification_time(&mut Self, u32) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the modification time (UNIX timestamp).","sig":null,"attributes":[{"value":"/ Sets the modification time (UNIX timestamp).","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":50569,"byte_end":50617,"line_start":165,"line_end":165,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":50622,"byte_end":50625,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":50630,"byte_end":50644,"line_start":167,"line_end":167,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":50649,"byte_end":50656,"line_start":168,"line_end":168,"column_start":5,"column_end":12}},{"value":"/ use libflate::gzip::HeaderBuilder;","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":50661,"byte_end":50699,"line_start":169,"line_end":169,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":50704,"byte_end":50707,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ let header = HeaderBuilder::new().modification_time(10).finish();","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":50712,"byte_end":50781,"line_start":171,"line_end":171,"column_start":5,"column_end":74}},{"value":"/ assert_eq!(header.modification_time(), 10);","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":50786,"byte_end":50833,"line_start":172,"line_end":172,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":50838,"byte_end":50845,"line_start":173,"line_end":173,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":357},"span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":51238,"byte_end":51240,"line_start":187,"line_end":187,"column_start":12,"column_end":14},"name":"os","qualname":"<HeaderBuilder>::os","value":"pub fn os(&mut Self, Os) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the OS type.","sig":null,"attributes":[{"value":"/ Sets the OS type.","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":51008,"byte_end":51029,"line_start":179,"line_end":179,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":51034,"byte_end":51037,"line_start":180,"line_end":180,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":51042,"byte_end":51049,"line_start":181,"line_end":181,"column_start":5,"column_end":12}},{"value":"/ use libflate::gzip::{HeaderBuilder, Os};","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":51054,"byte_end":51098,"line_start":182,"line_end":182,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":51103,"byte_end":51106,"line_start":183,"line_end":183,"column_start":5,"column_end":8}},{"value":"/ let header = HeaderBuilder::new().os(Os::Ntfs).finish();","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":51111,"byte_end":51171,"line_start":184,"line_end":184,"column_start":5,"column_end":65}},{"value":"/ assert_eq!(header.os(), Os::Ntfs);","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":51176,"byte_end":51214,"line_start":185,"line_end":185,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":51219,"byte_end":51226,"line_start":186,"line_end":186,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":358},"span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":51593,"byte_end":51597,"line_start":201,"line_end":201,"column_start":12,"column_end":16},"name":"text","qualname":"<HeaderBuilder>::text","value":"pub fn text(&mut Self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Indicates the encoding data is a ASCII text.","sig":null,"attributes":[{"value":"/ Indicates the encoding data is a ASCII text.","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":51328,"byte_end":51376,"line_start":192,"line_end":192,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":51381,"byte_end":51384,"line_start":193,"line_end":193,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":51389,"byte_end":51403,"line_start":194,"line_end":194,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":51408,"byte_end":51415,"line_start":195,"line_end":195,"column_start":5,"column_end":12}},{"value":"/ use libflate::gzip::HeaderBuilder;","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":51420,"byte_end":51458,"line_start":196,"line_end":196,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":51463,"byte_end":51466,"line_start":197,"line_end":197,"column_start":5,"column_end":8}},{"value":"/ let header = HeaderBuilder::new().text().finish();","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":51471,"byte_end":51525,"line_start":198,"line_end":198,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(header.is_text(), true);","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":51530,"byte_end":51569,"line_start":199,"line_end":199,"column_start":5,"column_end":44}},{"value":"/ ```","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":51574,"byte_end":51581,"line_start":200,"line_end":200,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":359},"span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":51958,"byte_end":51964,"line_start":215,"line_end":215,"column_start":12,"column_end":18},"name":"verify","qualname":"<HeaderBuilder>::verify","value":"pub fn verify(&mut Self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Specifies toe verify header bytes using CRC-16.","sig":null,"attributes":[{"value":"/ Specifies toe verify header bytes using CRC-16.","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":51684,"byte_end":51735,"line_start":206,"line_end":206,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":51740,"byte_end":51743,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":51748,"byte_end":51762,"line_start":208,"line_end":208,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":51767,"byte_end":51774,"line_start":209,"line_end":209,"column_start":5,"column_end":12}},{"value":"/ use libflate::gzip::HeaderBuilder;","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":51779,"byte_end":51817,"line_start":210,"line_end":210,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":51822,"byte_end":51825,"line_start":211,"line_end":211,"column_start":5,"column_end":8}},{"value":"/ let header = HeaderBuilder::new().verify().finish();","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":51830,"byte_end":51886,"line_start":212,"line_end":212,"column_start":5,"column_end":61}},{"value":"/ assert_eq!(header.is_verified(), true);","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":51891,"byte_end":51934,"line_start":213,"line_end":213,"column_start":5,"column_end":48}},{"value":"/ ```","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":51939,"byte_end":51946,"line_start":214,"line_end":214,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":360},"span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":52488,"byte_end":52499,"line_start":231,"line_end":231,"column_start":12,"column_end":23},"name":"extra_field","qualname":"<HeaderBuilder>::extra_field","value":"pub fn extra_field(&mut Self, ExtraField) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the extra field.","sig":null,"attributes":[{"value":"/ Sets the extra field.","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":52055,"byte_end":52080,"line_start":220,"line_end":220,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":52085,"byte_end":52088,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":52093,"byte_end":52107,"line_start":222,"line_end":222,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":52112,"byte_end":52119,"line_start":223,"line_end":223,"column_start":5,"column_end":12}},{"value":"/ use libflate::gzip::{HeaderBuilder, ExtraField, ExtraSubField};","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":52124,"byte_end":52191,"line_start":224,"line_end":224,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":52196,"byte_end":52199,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/ let subfield = ExtraSubField{id: [0, 1], data: vec![2, 3, 4]};","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":52204,"byte_end":52270,"line_start":226,"line_end":226,"column_start":5,"column_end":71}},{"value":"/ let extra = ExtraField{subfields: vec![subfield]};","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":52275,"byte_end":52329,"line_start":227,"line_end":227,"column_start":5,"column_end":59}},{"value":"/ let header = HeaderBuilder::new().extra_field(extra.clone()).finish();","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":52334,"byte_end":52408,"line_start":228,"line_end":228,"column_start":5,"column_end":79}},{"value":"/ assert_eq!(header.extra_field(), Some(&extra));","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":52413,"byte_end":52464,"line_start":229,"line_end":229,"column_start":5,"column_end":56}},{"value":"/ ```","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":52469,"byte_end":52476,"line_start":230,"line_end":230,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":361},"span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":52951,"byte_end":52959,"line_start":246,"line_end":246,"column_start":12,"column_end":20},"name":"filename","qualname":"<HeaderBuilder>::filename","value":"pub fn filename(&mut Self, CString) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the file name.","sig":null,"attributes":[{"value":"/ Sets the file name.","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":52616,"byte_end":52639,"line_start":236,"line_end":236,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":52644,"byte_end":52647,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":52652,"byte_end":52666,"line_start":238,"line_end":238,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":52671,"byte_end":52678,"line_start":239,"line_end":239,"column_start":5,"column_end":12}},{"value":"/ use std::ffi::CString;","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":52683,"byte_end":52709,"line_start":240,"line_end":240,"column_start":5,"column_end":31}},{"value":"/ use libflate::gzip::HeaderBuilder;","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":52714,"byte_end":52752,"line_start":241,"line_end":241,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":52757,"byte_end":52760,"line_start":242,"line_end":242,"column_start":5,"column_end":8}},{"value":"/ let header = HeaderBuilder::new().filename(CString::new(\"foo\").unwrap()).finish();","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":52765,"byte_end":52851,"line_start":243,"line_end":243,"column_start":5,"column_end":91}},{"value":"/ assert_eq!(header.filename(), Some(&CString::new(\"foo\").unwrap()));","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":52856,"byte_end":52927,"line_start":244,"line_end":244,"column_start":5,"column_end":76}},{"value":"/ ```","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":52932,"byte_end":52939,"line_start":245,"line_end":245,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":362},"span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":53407,"byte_end":53414,"line_start":261,"line_end":261,"column_start":12,"column_end":19},"name":"comment","qualname":"<HeaderBuilder>::comment","value":"pub fn comment(&mut Self, CString) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the comment.","sig":null,"attributes":[{"value":"/ Sets the comment.","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":53076,"byte_end":53097,"line_start":251,"line_end":251,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":53102,"byte_end":53105,"line_start":252,"line_end":252,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":53110,"byte_end":53124,"line_start":253,"line_end":253,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":53129,"byte_end":53136,"line_start":254,"line_end":254,"column_start":5,"column_end":12}},{"value":"/ use std::ffi::CString;","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":53141,"byte_end":53167,"line_start":255,"line_end":255,"column_start":5,"column_end":31}},{"value":"/ use libflate::gzip::HeaderBuilder;","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":53172,"byte_end":53210,"line_start":256,"line_end":256,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":53215,"byte_end":53218,"line_start":257,"line_end":257,"column_start":5,"column_end":8}},{"value":"/ let header = HeaderBuilder::new().comment(CString::new(\"foo\").unwrap()).finish();","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":53223,"byte_end":53308,"line_start":258,"line_end":258,"column_start":5,"column_end":90}},{"value":"/ assert_eq!(header.comment(), Some(&CString::new(\"foo\").unwrap()));","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":53313,"byte_end":53383,"line_start":259,"line_end":259,"column_start":5,"column_end":75}},{"value":"/ ```","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":53388,"byte_end":53395,"line_start":260,"line_end":260,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":363},"span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":53570,"byte_end":53576,"line_start":267,"line_end":267,"column_start":12,"column_end":18},"name":"finish","qualname":"<HeaderBuilder>::finish","value":"pub fn finish(&Self) -> Header","parent":null,"children":[],"decl_id":null,"docs":" Returns the result header.\n","sig":null,"attributes":[{"value":"/ Returns the result header.","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":53528,"byte_end":53558,"line_start":266,"line_end":266,"column_start":5,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":1086},"span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":53773,"byte_end":53779,"line_start":279,"line_end":279,"column_start":12,"column_end":18},"name":"Header","qualname":"::gzip::Header","value":"Header {  }","parent":null,"children":[{"krate":0,"index":1087},{"krate":0,"index":1088},{"krate":0,"index":1089},{"krate":0,"index":1090},{"krate":0,"index":1091},{"krate":0,"index":1092},{"krate":0,"index":1093},{"krate":0,"index":1094}],"decl_id":null,"docs":" GZIP Header.\n","sig":null,"attributes":[{"value":"/ GZIP Header.","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":53721,"byte_end":53737,"line_start":277,"line_end":277,"column_start":1,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":367},"span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":54086,"byte_end":54103,"line_start":291,"line_end":291,"column_start":12,"column_end":29},"name":"modification_time","qualname":"<Header>::modification_time","value":"pub fn modification_time(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Returns the modification time (UNIX timestamp).\n","sig":null,"attributes":[{"value":"/ Returns the modification time (UNIX timestamp).","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":54023,"byte_end":54074,"line_start":290,"line_end":290,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":368},"span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":54208,"byte_end":54225,"line_start":296,"line_end":296,"column_start":12,"column_end":29},"name":"compression_level","qualname":"<Header>::compression_level","value":"pub fn compression_level(&Self) -> CompressionLevel","parent":null,"children":[],"decl_id":null,"docs":" Returns the compression level.\n","sig":null,"attributes":[{"value":"/ Returns the compression level.","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":54162,"byte_end":54196,"line_start":295,"line_end":295,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":369},"span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":54341,"byte_end":54343,"line_start":301,"line_end":301,"column_start":12,"column_end":14},"name":"os","qualname":"<Header>::os","value":"pub fn os(&Self) -> Os","parent":null,"children":[],"decl_id":null,"docs":" Returns the OS type.\n","sig":null,"attributes":[{"value":"/ Returns the OS type.","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":54305,"byte_end":54329,"line_start":300,"line_end":300,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":370},"span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":54481,"byte_end":54488,"line_start":306,"line_end":306,"column_start":12,"column_end":19},"name":"is_text","qualname":"<Header>::is_text","value":"pub fn is_text(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the stream is probably ASCII text, `false` otherwise.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the stream is probably ASCII text, `false` otherwise.","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":54394,"byte_end":54469,"line_start":305,"line_end":305,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":371},"span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":54630,"byte_end":54641,"line_start":311,"line_end":311,"column_start":12,"column_end":23},"name":"is_verified","qualname":"<Header>::is_verified","value":"pub fn is_verified(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the header bytes is verified by CRC-16, `false` otherwise.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the header bytes is verified by CRC-16, `false` otherwise.","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":54538,"byte_end":54618,"line_start":310,"line_end":310,"column_start":5,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":372},"span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":54735,"byte_end":54746,"line_start":316,"line_end":316,"column_start":12,"column_end":23},"name":"extra_field","qualname":"<Header>::extra_field","value":"pub fn extra_field(&Self) -> Option<&ExtraField>","parent":null,"children":[],"decl_id":null,"docs":" Returns the extra field.\n","sig":null,"attributes":[{"value":"/ Returns the extra field.","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":54695,"byte_end":54723,"line_start":315,"line_end":315,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":373},"span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":54862,"byte_end":54870,"line_start":321,"line_end":321,"column_start":12,"column_end":20},"name":"filename","qualname":"<Header>::filename","value":"pub fn filename(&Self) -> Option<&CString>","parent":null,"children":[],"decl_id":null,"docs":" Returns the file name.\n","sig":null,"attributes":[{"value":"/ Returns the file name.","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":54824,"byte_end":54850,"line_start":320,"line_end":320,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":374},"span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":54978,"byte_end":54985,"line_start":326,"line_end":326,"column_start":12,"column_end":19},"name":"comment","qualname":"<Header>::comment","value":"pub fn comment(&Self) -> Option<&CString>","parent":null,"children":[],"decl_id":null,"docs":" Returns the comment.\n","sig":null,"attributes":[{"value":"/ Returns the comment.","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":54942,"byte_end":54966,"line_start":325,"line_end":325,"column_start":5,"column_end":29}}]},{"kind":"Struct","id":{"krate":0,"index":1099},"span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":59065,"byte_end":59075,"line_start":453,"line_end":453,"column_start":12,"column_end":22},"name":"ExtraField","qualname":"::gzip::ExtraField","value":"ExtraField { subfields }","parent":null,"children":[{"krate":0,"index":1100}],"decl_id":null,"docs":" Extra field of a GZIP header.\n","sig":null,"attributes":[{"value":"/ Extra field of a GZIP header.","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":58975,"byte_end":59008,"line_start":451,"line_end":451,"column_start":1,"column_end":34}}]},{"kind":"Field","id":{"krate":0,"index":1100},"span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":59119,"byte_end":59128,"line_start":455,"line_end":455,"column_start":9,"column_end":18},"name":"subfields","qualname":"::gzip::ExtraField::subfields","value":"std::vec::Vec<gzip::ExtraSubField>","parent":{"krate":0,"index":1099},"children":[],"decl_id":null,"docs":" Data of the extra field.\n","sig":null,"attributes":[{"value":"/ Data of the extra field.","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":59082,"byte_end":59110,"line_start":454,"line_end":454,"column_start":5,"column_end":33}}]},{"kind":"Struct","id":{"krate":0,"index":1115},"span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":60202,"byte_end":60215,"line_start":490,"line_end":490,"column_start":12,"column_end":25},"name":"ExtraSubField","qualname":"::gzip::ExtraSubField","value":"ExtraSubField { id, data }","parent":null,"children":[{"krate":0,"index":1116},{"krate":0,"index":1118}],"decl_id":null,"docs":" A sub field in the extra field of a GZIP header.\n","sig":null,"attributes":[{"value":"/ A sub field in the extra field of a GZIP header.","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":60093,"byte_end":60145,"line_start":488,"line_end":488,"column_start":1,"column_end":53}}]},{"kind":"Field","id":{"krate":0,"index":1116},"span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":60251,"byte_end":60253,"line_start":492,"line_end":492,"column_start":9,"column_end":11},"name":"id","qualname":"::gzip::ExtraSubField::id","value":"[u8; 2]","parent":{"krate":0,"index":1115},"children":[],"decl_id":null,"docs":" ID of the field.\n","sig":null,"attributes":[{"value":"/ ID of the field.","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":60222,"byte_end":60242,"line_start":491,"line_end":491,"column_start":5,"column_end":25}}]},{"kind":"Field","id":{"krate":0,"index":1118},"span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":60300,"byte_end":60304,"line_start":495,"line_end":495,"column_start":9,"column_end":13},"name":"data","qualname":"::gzip::ExtraSubField::data","value":"std::vec::Vec<u8>","parent":{"krate":0,"index":1115},"children":[],"decl_id":null,"docs":" Data of the field.\n","sig":null,"attributes":[{"value":"/ Data of the field.","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":60269,"byte_end":60291,"line_start":494,"line_end":494,"column_start":5,"column_end":27}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1135},"span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":61274,"byte_end":61277,"line_start":534,"line_end":534,"column_start":5,"column_end":8},"name":"Fat","qualname":"::gzip::Os::Fat","value":"Os::Fat","parent":{"krate":0,"index":1134},"children":[],"decl_id":null,"docs":" FAT filesystem (MS-DOS, OS/2, NT/Win32)\n","sig":null,"attributes":[{"value":"/ FAT filesystem (MS-DOS, OS/2, NT/Win32)","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":61226,"byte_end":61269,"line_start":533,"line_end":533,"column_start":5,"column_end":48}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1137},"span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":61298,"byte_end":61303,"line_start":537,"line_end":537,"column_start":5,"column_end":10},"name":"Amiga","qualname":"::gzip::Os::Amiga","value":"Os::Amiga","parent":{"krate":0,"index":1134},"children":[],"decl_id":null,"docs":" Amiga\n","sig":null,"attributes":[{"value":"/ Amiga","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":61284,"byte_end":61293,"line_start":536,"line_end":536,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1139},"span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":61335,"byte_end":61338,"line_start":540,"line_end":540,"column_start":5,"column_end":8},"name":"Vms","qualname":"::gzip::Os::Vms","value":"Os::Vms","parent":{"krate":0,"index":1134},"children":[],"decl_id":null,"docs":" VMS (or OpenVMS)\n","sig":null,"attributes":[{"value":"/ VMS (or OpenVMS)","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":61310,"byte_end":61330,"line_start":539,"line_end":539,"column_start":5,"column_end":25}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1141},"span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":61358,"byte_end":61362,"line_start":543,"line_end":543,"column_start":5,"column_end":9},"name":"Unix","qualname":"::gzip::Os::Unix","value":"Os::Unix","parent":{"krate":0,"index":1134},"children":[],"decl_id":null,"docs":" Unix\n","sig":null,"attributes":[{"value":"/ Unix","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":61345,"byte_end":61353,"line_start":542,"line_end":542,"column_start":5,"column_end":13}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1143},"span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":61384,"byte_end":61389,"line_start":546,"line_end":546,"column_start":5,"column_end":10},"name":"VmCms","qualname":"::gzip::Os::VmCms","value":"Os::VmCms","parent":{"krate":0,"index":1134},"children":[],"decl_id":null,"docs":" VM/CMS\n","sig":null,"attributes":[{"value":"/ VM/CMS","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":61369,"byte_end":61379,"line_start":545,"line_end":545,"column_start":5,"column_end":15}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1145},"span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":61414,"byte_end":61422,"line_start":549,"line_end":549,"column_start":5,"column_end":13},"name":"AtariTos","qualname":"::gzip::Os::AtariTos","value":"Os::AtariTos","parent":{"krate":0,"index":1134},"children":[],"decl_id":null,"docs":" Atari TOS\n","sig":null,"attributes":[{"value":"/ Atari TOS","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":61396,"byte_end":61409,"line_start":548,"line_end":548,"column_start":5,"column_end":18}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1147},"span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":61464,"byte_end":61468,"line_start":552,"line_end":552,"column_start":5,"column_end":9},"name":"Hpfs","qualname":"::gzip::Os::Hpfs","value":"Os::Hpfs","parent":{"krate":0,"index":1134},"children":[],"decl_id":null,"docs":" HPFS filesystem (OS/2, NT)\n","sig":null,"attributes":[{"value":"/ HPFS filesystem (OS/2, NT)","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":61429,"byte_end":61459,"line_start":551,"line_end":551,"column_start":5,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1149},"span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":61493,"byte_end":61502,"line_start":555,"line_end":555,"column_start":5,"column_end":14},"name":"Macintosh","qualname":"::gzip::Os::Macintosh","value":"Os::Macintosh","parent":{"krate":0,"index":1134},"children":[],"decl_id":null,"docs":" Macintosh\n","sig":null,"attributes":[{"value":"/ Macintosh","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":61475,"byte_end":61488,"line_start":554,"line_end":554,"column_start":5,"column_end":18}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1151},"span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":61526,"byte_end":61533,"line_start":558,"line_end":558,"column_start":5,"column_end":12},"name":"ZSystem","qualname":"::gzip::Os::ZSystem","value":"Os::ZSystem","parent":{"krate":0,"index":1134},"children":[],"decl_id":null,"docs":" Z-System\n","sig":null,"attributes":[{"value":"/ Z-System","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":61509,"byte_end":61521,"line_start":557,"line_end":557,"column_start":5,"column_end":17}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1153},"span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":61553,"byte_end":61556,"line_start":561,"line_end":561,"column_start":5,"column_end":8},"name":"CpM","qualname":"::gzip::Os::CpM","value":"Os::CpM","parent":{"krate":0,"index":1134},"children":[],"decl_id":null,"docs":" CP/M\n","sig":null,"attributes":[{"value":"/ CP/M","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":61540,"byte_end":61548,"line_start":560,"line_end":560,"column_start":5,"column_end":13}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1155},"span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":61579,"byte_end":61585,"line_start":564,"line_end":564,"column_start":5,"column_end":11},"name":"Tops20","qualname":"::gzip::Os::Tops20","value":"Os::Tops20","parent":{"krate":0,"index":1134},"children":[],"decl_id":null,"docs":" TOPS-20\n","sig":null,"attributes":[{"value":"/ TOPS-20","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":61563,"byte_end":61574,"line_start":563,"line_end":563,"column_start":5,"column_end":16}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1157},"span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":61621,"byte_end":61625,"line_start":567,"line_end":567,"column_start":5,"column_end":9},"name":"Ntfs","qualname":"::gzip::Os::Ntfs","value":"Os::Ntfs","parent":{"krate":0,"index":1134},"children":[],"decl_id":null,"docs":" NTFS filesystem (NT)\n","sig":null,"attributes":[{"value":"/ NTFS filesystem (NT)","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":61592,"byte_end":61616,"line_start":566,"line_end":566,"column_start":5,"column_end":29}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1159},"span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":61645,"byte_end":61649,"line_start":570,"line_end":570,"column_start":5,"column_end":9},"name":"Qdos","qualname":"::gzip::Os::Qdos","value":"Os::Qdos","parent":{"krate":0,"index":1134},"children":[],"decl_id":null,"docs":" QDOS\n","sig":null,"attributes":[{"value":"/ QDOS","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":61632,"byte_end":61640,"line_start":569,"line_end":569,"column_start":5,"column_end":13}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1161},"span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":61677,"byte_end":61688,"line_start":573,"line_end":573,"column_start":5,"column_end":16},"name":"AcornRiscos","qualname":"::gzip::Os::AcornRiscos","value":"Os::AcornRiscos","parent":{"krate":0,"index":1134},"children":[],"decl_id":null,"docs":" Acorn RISCOS\n","sig":null,"attributes":[{"value":"/ Acorn RISCOS","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":61656,"byte_end":61672,"line_start":572,"line_end":572,"column_start":5,"column_end":21}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1163},"span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":61711,"byte_end":61718,"line_start":576,"line_end":576,"column_start":5,"column_end":12},"name":"Unknown","qualname":"::gzip::Os::Unknown","value":"Os::Unknown","parent":{"krate":0,"index":1134},"children":[],"decl_id":null,"docs":" Unknown\n","sig":null,"attributes":[{"value":"/ Unknown","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":61695,"byte_end":61706,"line_start":575,"line_end":575,"column_start":5,"column_end":16}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1165},"span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":61761,"byte_end":61770,"line_start":579,"line_end":579,"column_start":5,"column_end":14},"name":"Undefined","qualname":"::gzip::Os::Undefined","value":"Os::Undefined(u8)","parent":{"krate":0,"index":1134},"children":[],"decl_id":null,"docs":" Undefined value in RFC-1952\n","sig":null,"attributes":[{"value":"/ Undefined value in RFC-1952","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":61725,"byte_end":61756,"line_start":578,"line_end":578,"column_start":5,"column_end":36}}]},{"kind":"Enum","id":{"krate":0,"index":1134},"span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":61217,"byte_end":61219,"line_start":532,"line_end":532,"column_start":10,"column_end":12},"name":"Os","qualname":"::gzip::Os","value":"pub enum Os {\n    Fat,\n    Amiga,\n    Vms,\n    Unix,\n    VmCms,\n    AtariTos,\n    Hpfs,\n    Macintosh,\n    ZSystem,\n    CpM,\n    Tops20,\n    Ntfs,\n    Qdos,\n    AcornRiscos,\n    Unknown,\n    Undefined(u8),\n}","parent":null,"children":[{"krate":0,"index":1135},{"krate":0,"index":1137},{"krate":0,"index":1139},{"krate":0,"index":1141},{"krate":0,"index":1143},{"krate":0,"index":1145},{"krate":0,"index":1147},{"krate":0,"index":1149},{"krate":0,"index":1151},{"krate":0,"index":1153},{"krate":0,"index":1155},{"krate":0,"index":1157},{"krate":0,"index":1159},{"krate":0,"index":1161},{"krate":0,"index":1163},{"krate":0,"index":1165}],"decl_id":null,"docs":" OS type.\n","sig":null,"attributes":[{"value":"/ OS type.","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":61150,"byte_end":61162,"line_start":530,"line_end":530,"column_start":1,"column_end":13}}]},{"kind":"Struct","id":{"krate":0,"index":1182},"span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":63147,"byte_end":63160,"line_start":626,"line_end":626,"column_start":12,"column_end":25},"name":"EncodeOptions","qualname":"::gzip::EncodeOptions","value":"EncodeOptions {  }","parent":null,"children":[{"krate":0,"index":1184},{"krate":0,"index":1185}],"decl_id":null,"docs":" Options for a GZIP encoder.\n","sig":null,"attributes":[{"value":"/ Options for a GZIP encoder.","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":63087,"byte_end":63118,"line_start":624,"line_end":624,"column_start":1,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":409},"span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":63803,"byte_end":63806,"line_start":651,"line_end":651,"column_start":12,"column_end":15},"name":"new","qualname":"<EncodeOptions<lz77::DefaultLz77Encoder>>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Makes a default instance.","sig":null,"attributes":[{"value":"/ Makes a default instance.","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":63530,"byte_end":63559,"line_start":642,"line_end":642,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":63564,"byte_end":63567,"line_start":643,"line_end":643,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":63572,"byte_end":63586,"line_start":644,"line_end":644,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":63591,"byte_end":63598,"line_start":645,"line_end":645,"column_start":5,"column_end":12}},{"value":"/ use libflate::gzip::{Encoder, EncodeOptions};","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":63603,"byte_end":63652,"line_start":646,"line_end":646,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":63657,"byte_end":63660,"line_start":647,"line_end":647,"column_start":5,"column_end":8}},{"value":"/ let options = EncodeOptions::new();","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":63665,"byte_end":63704,"line_start":648,"line_end":648,"column_start":5,"column_end":44}},{"value":"/ let encoder = Encoder::with_options(Vec::new(), options).unwrap();","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":63709,"byte_end":63779,"line_start":649,"line_end":649,"column_start":5,"column_end":75}},{"value":"/ ```","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":63784,"byte_end":63791,"line_start":650,"line_end":650,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":412},"span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":64294,"byte_end":64303,"line_start":669,"line_end":669,"column_start":12,"column_end":21},"name":"with_lz77","qualname":"<EncodeOptions<E>>::with_lz77","value":"pub fn with_lz77(E) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Specifies the LZ77 encoder used to compress input data.","sig":null,"attributes":[{"value":"/ Specifies the LZ77 encoder used to compress input data.","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":63913,"byte_end":63972,"line_start":659,"line_end":659,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":63977,"byte_end":63980,"line_start":660,"line_end":660,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":63985,"byte_end":63998,"line_start":661,"line_end":661,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":64003,"byte_end":64010,"line_start":662,"line_end":662,"column_start":5,"column_end":12}},{"value":"/ use libflate::lz77::DefaultLz77Encoder;","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":64015,"byte_end":64058,"line_start":663,"line_end":663,"column_start":5,"column_end":48}},{"value":"/ use libflate::gzip::{Encoder, EncodeOptions};","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":64063,"byte_end":64112,"line_start":664,"line_end":664,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":64117,"byte_end":64120,"line_start":665,"line_end":665,"column_start":5,"column_end":8}},{"value":"/ let options = EncodeOptions::with_lz77(DefaultLz77Encoder::new());","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":64125,"byte_end":64195,"line_start":666,"line_end":666,"column_start":5,"column_end":75}},{"value":"/ let encoder = Encoder::with_options(Vec::new(), options).unwrap();","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":64200,"byte_end":64270,"line_start":667,"line_end":667,"column_start":5,"column_end":75}},{"value":"/ ```","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":64275,"byte_end":64282,"line_start":668,"line_end":668,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":413},"span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":64917,"byte_end":64931,"line_start":688,"line_end":688,"column_start":12,"column_end":26},"name":"no_compression","qualname":"<EncodeOptions<E>>::no_compression","value":"pub fn no_compression(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Disables LZ77 compression.","sig":null,"attributes":[{"value":"/ Disables LZ77 compression.","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":64579,"byte_end":64609,"line_start":678,"line_end":678,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":64614,"byte_end":64617,"line_start":679,"line_end":679,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":64622,"byte_end":64635,"line_start":680,"line_end":680,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":64640,"byte_end":64647,"line_start":681,"line_end":681,"column_start":5,"column_end":12}},{"value":"/ use libflate::lz77::DefaultLz77Encoder;","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":64652,"byte_end":64695,"line_start":682,"line_end":682,"column_start":5,"column_end":48}},{"value":"/ use libflate::gzip::{Encoder, EncodeOptions};","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":64700,"byte_end":64749,"line_start":683,"line_end":683,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":64754,"byte_end":64757,"line_start":684,"line_end":684,"column_start":5,"column_end":8}},{"value":"/ let options = EncodeOptions::new().no_compression();","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":64762,"byte_end":64818,"line_start":685,"line_end":685,"column_start":5,"column_end":61}},{"value":"/ let encoder = Encoder::with_options(Vec::new(), options).unwrap();","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":64823,"byte_end":64893,"line_start":686,"line_end":686,"column_start":5,"column_end":75}},{"value":"/ ```","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":64898,"byte_end":64905,"line_start":687,"line_end":687,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":414},"span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":65520,"byte_end":65526,"line_start":704,"line_end":704,"column_start":12,"column_end":18},"name":"header","qualname":"<EncodeOptions<E>>::header","value":"pub fn header(Self, Header) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the GZIP header which will be written to the output stream.","sig":null,"attributes":[{"value":"/ Sets the GZIP header which will be written to the output stream.","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":65097,"byte_end":65165,"line_start":694,"line_end":694,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":65170,"byte_end":65173,"line_start":695,"line_end":695,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":65178,"byte_end":65191,"line_start":696,"line_end":696,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":65196,"byte_end":65203,"line_start":697,"line_end":697,"column_start":5,"column_end":12}},{"value":"/ use libflate::gzip::{Encoder, EncodeOptions, HeaderBuilder};","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":65208,"byte_end":65272,"line_start":698,"line_end":698,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":65277,"byte_end":65280,"line_start":699,"line_end":699,"column_start":5,"column_end":8}},{"value":"/ let header = HeaderBuilder::new().text().modification_time(100).finish();","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":65285,"byte_end":65362,"line_start":700,"line_end":700,"column_start":5,"column_end":82}},{"value":"/ let options = EncodeOptions::new().header(header);","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":65367,"byte_end":65421,"line_start":701,"line_end":701,"column_start":5,"column_end":59}},{"value":"/ let encoder = Encoder::with_options(Vec::new(), options).unwrap();","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":65426,"byte_end":65496,"line_start":702,"line_end":702,"column_start":5,"column_end":75}},{"value":"/ ```","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":65501,"byte_end":65508,"line_start":703,"line_end":703,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":415},"span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":66005,"byte_end":66015,"line_start":720,"line_end":720,"column_start":12,"column_end":22},"name":"block_size","qualname":"<EncodeOptions<E>>::block_size","value":"pub fn block_size(Self, usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Specifies the hint of the size of a DEFLATE block.","sig":null,"attributes":[{"value":"/ Specifies the hint of the size of a DEFLATE block.","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":65617,"byte_end":65671,"line_start":709,"line_end":709,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":65676,"byte_end":65679,"line_start":710,"line_end":710,"column_start":5,"column_end":8}},{"value":"/ The default value is `deflate::DEFAULT_BLOCK_SIZE`.","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":65684,"byte_end":65739,"line_start":711,"line_end":711,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":65744,"byte_end":65747,"line_start":712,"line_end":712,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":65752,"byte_end":65765,"line_start":713,"line_end":713,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":65770,"byte_end":65777,"line_start":714,"line_end":714,"column_start":5,"column_end":12}},{"value":"/ use libflate::gzip::{Encoder, EncodeOptions};","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":65782,"byte_end":65831,"line_start":715,"line_end":715,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":65836,"byte_end":65839,"line_start":716,"line_end":716,"column_start":5,"column_end":8}},{"value":"/ let options = EncodeOptions::new().block_size(512 * 1024);","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":65844,"byte_end":65906,"line_start":717,"line_end":717,"column_start":5,"column_end":67}},{"value":"/ let encoder = Encoder::with_options(Vec::new(), options).unwrap();","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":65911,"byte_end":65981,"line_start":718,"line_end":718,"column_start":5,"column_end":75}},{"value":"/ ```","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":65986,"byte_end":65993,"line_start":719,"line_end":719,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":416},"span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":66443,"byte_end":66462,"line_start":734,"line_end":734,"column_start":12,"column_end":31},"name":"fixed_huffman_codes","qualname":"<EncodeOptions<E>>::fixed_huffman_codes","value":"pub fn fixed_huffman_codes(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Specifies to compress with fixed huffman codes.","sig":null,"attributes":[{"value":"/ Specifies to compress with fixed huffman codes.","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":66127,"byte_end":66178,"line_start":725,"line_end":725,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":66183,"byte_end":66186,"line_start":726,"line_end":726,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":66191,"byte_end":66204,"line_start":727,"line_end":727,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":66209,"byte_end":66216,"line_start":728,"line_end":728,"column_start":5,"column_end":12}},{"value":"/ use libflate::gzip::{Encoder, EncodeOptions};","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":66221,"byte_end":66270,"line_start":729,"line_end":729,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":66275,"byte_end":66278,"line_start":730,"line_end":730,"column_start":5,"column_end":8}},{"value":"/ let options = EncodeOptions::new().fixed_huffman_codes();","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":66283,"byte_end":66344,"line_start":731,"line_end":731,"column_start":5,"column_end":66}},{"value":"/ let encoder = Encoder::with_options(Vec::new(), options).unwrap();","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":66349,"byte_end":66419,"line_start":732,"line_end":732,"column_start":5,"column_end":75}},{"value":"/ ```","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":66424,"byte_end":66431,"line_start":733,"line_end":733,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":417},"span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":66593,"byte_end":66600,"line_start":741,"line_end":741,"column_start":12,"column_end":19},"name":"Encoder","qualname":"::gzip::Encoder","value":"Encoder {  }","parent":null,"children":[{"krate":0,"index":420},{"krate":0,"index":421},{"krate":0,"index":422},{"krate":0,"index":423}],"decl_id":null,"docs":" GZIP encoder.\n","sig":null,"attributes":[{"value":"/ GZIP encoder.","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":66564,"byte_end":66581,"line_start":740,"line_end":740,"column_start":1,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":426},"span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":67209,"byte_end":67212,"line_start":764,"line_end":764,"column_start":12,"column_end":15},"name":"new","qualname":"<Encoder<W, lz77::DefaultLz77Encoder>>::new","value":"pub fn new(W) -> io::Result<Self>","parent":null,"children":[],"decl_id":null,"docs":" Makes a new encoder instance.","sig":null,"attributes":[{"value":"/ Makes a new encoder instance.","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":66818,"byte_end":66851,"line_start":751,"line_end":751,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":66856,"byte_end":66859,"line_start":752,"line_end":752,"column_start":5,"column_end":8}},{"value":"/ Encoded GZIP stream is written to `inner`.","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":66864,"byte_end":66910,"line_start":753,"line_end":753,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":66915,"byte_end":66918,"line_start":754,"line_end":754,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":66923,"byte_end":66937,"line_start":755,"line_end":755,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":66942,"byte_end":66949,"line_start":756,"line_end":756,"column_start":5,"column_end":12}},{"value":"/ use std::io::Write;","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":66954,"byte_end":66977,"line_start":757,"line_end":757,"column_start":5,"column_end":28}},{"value":"/ use libflate::gzip::Encoder;","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":66982,"byte_end":67014,"line_start":758,"line_end":758,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":67019,"byte_end":67022,"line_start":759,"line_end":759,"column_start":5,"column_end":8}},{"value":"/ let mut encoder = Encoder::new(Vec::new()).unwrap();","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":67027,"byte_end":67083,"line_start":760,"line_end":760,"column_start":5,"column_end":61}},{"value":"/ encoder.write_all(b\"Hello World!\").unwrap();","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":67088,"byte_end":67136,"line_start":761,"line_end":761,"column_start":5,"column_end":53}},{"value":"/ encoder.finish().into_result().unwrap();","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":67141,"byte_end":67185,"line_start":762,"line_end":762,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":67190,"byte_end":67197,"line_start":763,"line_end":763,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":430},"span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":68212,"byte_end":68224,"line_start":791,"line_end":791,"column_start":12,"column_end":24},"name":"with_options","qualname":"<Encoder<W, E>>::with_options","value":"pub fn with_options(W, EncodeOptions<E>) -> io::Result<Self>","parent":null,"children":[],"decl_id":null,"docs":" Makes a new encoder instance with specified options.","sig":null,"attributes":[{"value":"/ Makes a new encoder instance with specified options.","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":67389,"byte_end":67445,"line_start":773,"line_end":773,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":67450,"byte_end":67453,"line_start":774,"line_end":774,"column_start":5,"column_end":8}},{"value":"/ Encoded GZIP stream is written to `inner`.","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":67458,"byte_end":67504,"line_start":775,"line_end":775,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":67509,"byte_end":67512,"line_start":776,"line_end":776,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":67517,"byte_end":67531,"line_start":777,"line_end":777,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":67536,"byte_end":67543,"line_start":778,"line_end":778,"column_start":5,"column_end":12}},{"value":"/ use std::io::Write;","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":67548,"byte_end":67571,"line_start":779,"line_end":779,"column_start":5,"column_end":28}},{"value":"/ use libflate::gzip::{Encoder, EncodeOptions, HeaderBuilder};","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":67576,"byte_end":67640,"line_start":780,"line_end":780,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":67645,"byte_end":67648,"line_start":781,"line_end":781,"column_start":5,"column_end":8}},{"value":"/ let header = HeaderBuilder::new().modification_time(123).finish();","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":67653,"byte_end":67723,"line_start":782,"line_end":782,"column_start":5,"column_end":75}},{"value":"/ let options = EncodeOptions::new().no_compression().header(header);","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":67728,"byte_end":67799,"line_start":783,"line_end":783,"column_start":5,"column_end":76}},{"value":"/ let mut encoder = Encoder::with_options(Vec::new(), options).unwrap();","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":67804,"byte_end":67878,"line_start":784,"line_end":784,"column_start":5,"column_end":79}},{"value":"/ encoder.write_all(b\"Hello World!\").unwrap();","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":67883,"byte_end":67931,"line_start":785,"line_end":785,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":67936,"byte_end":67939,"line_start":786,"line_end":786,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(encoder.finish().into_result().unwrap(),","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":67944,"byte_end":67999,"line_start":787,"line_end":787,"column_start":5,"column_end":60}},{"value":"/            &[31, 139, 8, 0, 123, 0, 0, 0, 0, 3, 1, 12, 0, 243, 255, 72, 101, 108, 108,","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":68004,"byte_end":68094,"line_start":788,"line_end":788,"column_start":5,"column_end":95}},{"value":"/              111, 32, 87, 111, 114, 108, 100, 33, 163, 28, 41, 28, 12, 0, 0, 0][..]);","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":68099,"byte_end":68188,"line_start":789,"line_end":789,"column_start":5,"column_end":94}},{"value":"/ ```","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":68193,"byte_end":68200,"line_start":790,"line_end":790,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":431},"span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":68833,"byte_end":68839,"line_start":810,"line_end":810,"column_start":12,"column_end":18},"name":"header","qualname":"<Encoder<W, E>>::header","value":"pub fn header(&Self) -> &Header","parent":null,"children":[],"decl_id":null,"docs":" Returns the header of the GZIP stream.","sig":null,"attributes":[{"value":"/ Returns the header of the GZIP stream.","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":68567,"byte_end":68609,"line_start":801,"line_end":801,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":68614,"byte_end":68617,"line_start":802,"line_end":802,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":68622,"byte_end":68636,"line_start":803,"line_end":803,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":68641,"byte_end":68648,"line_start":804,"line_end":804,"column_start":5,"column_end":12}},{"value":"/ use libflate::gzip::{Encoder, Os};","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":68653,"byte_end":68691,"line_start":805,"line_end":805,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":68696,"byte_end":68699,"line_start":806,"line_end":806,"column_start":5,"column_end":8}},{"value":"/ let encoder = Encoder::new(Vec::new()).unwrap();","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":68704,"byte_end":68756,"line_start":807,"line_end":807,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(encoder.header().os(), Os::Unix);","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":68761,"byte_end":68809,"line_start":808,"line_end":808,"column_start":5,"column_end":53}},{"value":"/ ```","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":68814,"byte_end":68821,"line_start":809,"line_end":809,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":432},"span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":69826,"byte_end":69832,"line_start":842,"line_end":842,"column_start":12,"column_end":18},"name":"finish","qualname":"<Encoder<W, E>>::finish","value":"pub fn finish(Self) -> Finish<W, io::Error>","parent":null,"children":[],"decl_id":null,"docs":" Writes the GZIP trailer and returns the inner stream.","sig":null,"attributes":[{"value":"/ Writes the GZIP trailer and returns the inner stream.","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":68892,"byte_end":68949,"line_start":814,"line_end":814,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":68954,"byte_end":68957,"line_start":815,"line_end":815,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":68962,"byte_end":68976,"line_start":816,"line_end":816,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":68981,"byte_end":68988,"line_start":817,"line_end":817,"column_start":5,"column_end":12}},{"value":"/ use std::io::Write;","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":68993,"byte_end":69016,"line_start":818,"line_end":818,"column_start":5,"column_end":28}},{"value":"/ use libflate::gzip::Encoder;","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":69021,"byte_end":69053,"line_start":819,"line_end":819,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":69058,"byte_end":69061,"line_start":820,"line_end":820,"column_start":5,"column_end":8}},{"value":"/ let mut encoder = Encoder::new(Vec::new()).unwrap();","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":69066,"byte_end":69122,"line_start":821,"line_end":821,"column_start":5,"column_end":61}},{"value":"/ encoder.write_all(b\"Hello World!\").unwrap();","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":69127,"byte_end":69175,"line_start":822,"line_end":822,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":69180,"byte_end":69183,"line_start":823,"line_end":823,"column_start":5,"column_end":8}},{"value":"/ assert!(encoder.finish().as_result().is_ok())","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":69188,"byte_end":69237,"line_start":824,"line_end":824,"column_start":5,"column_end":54}},{"value":"/ ```","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":69242,"byte_end":69249,"line_start":825,"line_end":825,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":69254,"byte_end":69257,"line_start":826,"line_end":826,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":69262,"byte_end":69272,"line_start":827,"line_end":827,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":69277,"byte_end":69280,"line_start":828,"line_end":828,"column_start":5,"column_end":8}},{"value":"/ If you are not concerned the result of this encoding,","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":69285,"byte_end":69342,"line_start":829,"line_end":829,"column_start":5,"column_end":62}},{"value":"/ it may be convenient to use `AutoFinishUnchecked` instead of the explicit invocation of this method.","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":69347,"byte_end":69451,"line_start":830,"line_end":830,"column_start":5,"column_end":109}},{"value":"/","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":69456,"byte_end":69459,"line_start":831,"line_end":831,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":69464,"byte_end":69471,"line_start":832,"line_end":832,"column_start":5,"column_end":12}},{"value":"/ use std::io;","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":69476,"byte_end":69492,"line_start":833,"line_end":833,"column_start":5,"column_end":21}},{"value":"/ use libflate::finish::AutoFinishUnchecked;","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":69497,"byte_end":69543,"line_start":834,"line_end":834,"column_start":5,"column_end":51}},{"value":"/ use libflate::gzip::Encoder;","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":69548,"byte_end":69580,"line_start":835,"line_end":835,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":69585,"byte_end":69588,"line_start":836,"line_end":836,"column_start":5,"column_end":8}},{"value":"/ let plain = b\"Hello World!\";","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":69593,"byte_end":69625,"line_start":837,"line_end":837,"column_start":5,"column_end":37}},{"value":"/ let mut buf = Vec::new();","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":69630,"byte_end":69659,"line_start":838,"line_end":838,"column_start":5,"column_end":34}},{"value":"/ let mut encoder = AutoFinishUnchecked::new(Encoder::new(&mut buf).unwrap());","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":69664,"byte_end":69744,"line_start":839,"line_end":839,"column_start":5,"column_end":85}},{"value":"/ io::copy(&mut &plain[..], &mut encoder).unwrap();","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":69749,"byte_end":69802,"line_start":840,"line_end":840,"column_start":5,"column_end":58}},{"value":"/ ```","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":69807,"byte_end":69814,"line_start":841,"line_end":841,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":434},"span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":70307,"byte_end":70319,"line_start":855,"line_end":855,"column_start":12,"column_end":24},"name":"as_inner_ref","qualname":"<Encoder<W, E>>::as_inner_ref","value":"pub fn as_inner_ref(&Self) -> &W","parent":null,"children":[],"decl_id":null,"docs":" Returns the immutable reference to the inner stream.\n","sig":null,"attributes":[{"value":"/ Returns the immutable reference to the inner stream.","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":70239,"byte_end":70295,"line_start":854,"line_end":854,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":435},"span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":70447,"byte_end":70459,"line_start":860,"line_end":860,"column_start":12,"column_end":24},"name":"as_inner_mut","qualname":"<Encoder<W, E>>::as_inner_mut","value":"pub fn as_inner_mut(&mut Self) -> &mut W","parent":null,"children":[],"decl_id":null,"docs":" Returns the mutable reference to the inner stream.\n","sig":null,"attributes":[{"value":"/ Returns the mutable reference to the inner stream.","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":70381,"byte_end":70435,"line_start":859,"line_end":859,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":436},"span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":70595,"byte_end":70605,"line_start":865,"line_end":865,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Encoder<W, E>>::into_inner","value":"pub fn into_inner(Self) -> W","parent":null,"children":[],"decl_id":null,"docs":" Unwraps the `Encoder`, returning the inner stream.\n","sig":null,"attributes":[{"value":"/ Unwraps the `Encoder`, returning the inner stream.","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":70529,"byte_end":70583,"line_start":864,"line_end":864,"column_start":5,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":1189},"span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":71332,"byte_end":71339,"line_start":896,"line_end":896,"column_start":12,"column_end":19},"name":"Decoder","qualname":"::gzip::Decoder","value":"Decoder {  }","parent":null,"children":[{"krate":0,"index":1191},{"krate":0,"index":1192},{"krate":0,"index":1193},{"krate":0,"index":1194}],"decl_id":null,"docs":" GZIP decoder.\n","sig":null,"attributes":[{"value":"/ GZIP decoder.","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":71286,"byte_end":71303,"line_start":894,"line_end":894,"column_start":1,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":449},"span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":72147,"byte_end":72150,"line_start":925,"line_end":925,"column_start":12,"column_end":15},"name":"new","qualname":"<Decoder<R>>::new","value":"pub fn new(R) -> io::Result<Self>","parent":null,"children":[],"decl_id":null,"docs":" Makes a new decoder instance.","sig":null,"attributes":[{"value":"/ Makes a new decoder instance.","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":71491,"byte_end":71524,"line_start":906,"line_end":906,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":71529,"byte_end":71532,"line_start":907,"line_end":907,"column_start":5,"column_end":8}},{"value":"/ `inner` is to be decoded GZIP stream.","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":71537,"byte_end":71578,"line_start":908,"line_end":908,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":71583,"byte_end":71586,"line_start":909,"line_end":909,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":71591,"byte_end":71605,"line_start":910,"line_end":910,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":71610,"byte_end":71617,"line_start":911,"line_end":911,"column_start":5,"column_end":12}},{"value":"/ use std::io::Read;","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":71622,"byte_end":71644,"line_start":912,"line_end":912,"column_start":5,"column_end":27}},{"value":"/ use libflate::gzip::Decoder;","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":71649,"byte_end":71681,"line_start":913,"line_end":913,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":71686,"byte_end":71689,"line_start":914,"line_end":914,"column_start":5,"column_end":8}},{"value":"/ let encoded_data = [31, 139, 8, 0, 123, 0, 0, 0, 0, 3, 1, 12, 0, 243, 255,","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":71694,"byte_end":71772,"line_start":915,"line_end":915,"column_start":5,"column_end":83}},{"value":"/                     72, 101, 108, 108, 111, 32, 87, 111, 114, 108, 100, 33,","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":71777,"byte_end":71856,"line_start":916,"line_end":916,"column_start":5,"column_end":84}},{"value":"/                     163, 28, 41, 28, 12, 0, 0, 0];","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":71861,"byte_end":71915,"line_start":917,"line_end":917,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":71920,"byte_end":71923,"line_start":918,"line_end":918,"column_start":5,"column_end":8}},{"value":"/ let mut decoder = Decoder::new(&encoded_data[..]).unwrap();","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":71928,"byte_end":71991,"line_start":919,"line_end":919,"column_start":5,"column_end":68}},{"value":"/ let mut buf = Vec::new();","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":71996,"byte_end":72025,"line_start":920,"line_end":920,"column_start":5,"column_end":34}},{"value":"/ decoder.read_to_end(&mut buf).unwrap();","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":72030,"byte_end":72073,"line_start":921,"line_end":921,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":72078,"byte_end":72081,"line_start":922,"line_end":922,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(buf, b\"Hello World!\");","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":72086,"byte_end":72123,"line_start":923,"line_end":923,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":72128,"byte_end":72135,"line_start":924,"line_end":924,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":450},"span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":72803,"byte_end":72809,"line_start":943,"line_end":943,"column_start":12,"column_end":18},"name":"header","qualname":"<Decoder<R>>::header","value":"pub fn header(&Self) -> &Header","parent":null,"children":[],"decl_id":null,"docs":" Returns the header of the GZIP stream.","sig":null,"attributes":[{"value":"/ Returns the header of the GZIP stream.","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":72296,"byte_end":72338,"line_start":930,"line_end":930,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":72343,"byte_end":72346,"line_start":931,"line_end":931,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":72351,"byte_end":72365,"line_start":932,"line_end":932,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":72370,"byte_end":72377,"line_start":933,"line_end":933,"column_start":5,"column_end":12}},{"value":"/ use libflate::gzip::{Decoder, Os};","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":72382,"byte_end":72420,"line_start":934,"line_end":934,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":72425,"byte_end":72428,"line_start":935,"line_end":935,"column_start":5,"column_end":8}},{"value":"/ let encoded_data = [31, 139, 8, 0, 123, 0, 0, 0, 0, 3, 1, 12, 0, 243, 255,","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":72433,"byte_end":72511,"line_start":936,"line_end":936,"column_start":5,"column_end":83}},{"value":"/                     72, 101, 108, 108, 111, 32, 87, 111, 114, 108, 100, 33,","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":72516,"byte_end":72595,"line_start":937,"line_end":937,"column_start":5,"column_end":84}},{"value":"/                     163, 28, 41, 28, 12, 0, 0, 0];","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":72600,"byte_end":72654,"line_start":938,"line_end":938,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":72659,"byte_end":72662,"line_start":939,"line_end":939,"column_start":5,"column_end":8}},{"value":"/ let decoder = Decoder::new(&encoded_data[..]).unwrap();","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":72667,"byte_end":72726,"line_start":940,"line_end":940,"column_start":5,"column_end":64}},{"value":"/ assert_eq!(decoder.header().os(), Os::Unix);","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":72731,"byte_end":72779,"line_start":941,"line_end":941,"column_start":5,"column_end":53}},{"value":"/ ```","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":72784,"byte_end":72791,"line_start":942,"line_end":942,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":451},"span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":72930,"byte_end":72942,"line_start":948,"line_end":948,"column_start":12,"column_end":24},"name":"as_inner_ref","qualname":"<Decoder<R>>::as_inner_ref","value":"pub fn as_inner_ref(&Self) -> &R","parent":null,"children":[],"decl_id":null,"docs":" Returns the immutable reference to the inner stream.\n","sig":null,"attributes":[{"value":"/ Returns the immutable reference to the inner stream.","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":72862,"byte_end":72918,"line_start":947,"line_end":947,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":452},"span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":73070,"byte_end":73082,"line_start":953,"line_end":953,"column_start":12,"column_end":24},"name":"as_inner_mut","qualname":"<Decoder<R>>::as_inner_mut","value":"pub fn as_inner_mut(&mut Self) -> &mut R","parent":null,"children":[],"decl_id":null,"docs":" Returns the mutable reference to the inner stream.\n","sig":null,"attributes":[{"value":"/ Returns the mutable reference to the inner stream.","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":73004,"byte_end":73058,"line_start":952,"line_end":952,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":453},"span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":73734,"byte_end":73744,"line_start":971,"line_end":971,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Decoder<R>>::into_inner","value":"pub fn into_inner(Self) -> R","parent":null,"children":[],"decl_id":null,"docs":" Unwraps this `Decoder`, returning the underlying reader.","sig":null,"attributes":[{"value":"/ Unwraps this `Decoder`, returning the underlying reader.","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":73152,"byte_end":73212,"line_start":957,"line_end":957,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":73217,"byte_end":73220,"line_start":958,"line_end":958,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":73225,"byte_end":73239,"line_start":959,"line_end":959,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":73244,"byte_end":73251,"line_start":960,"line_end":960,"column_start":5,"column_end":12}},{"value":"/ use std::io::Cursor;","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":73256,"byte_end":73280,"line_start":961,"line_end":961,"column_start":5,"column_end":29}},{"value":"/ use libflate::gzip::Decoder;","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":73285,"byte_end":73317,"line_start":962,"line_end":962,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":73322,"byte_end":73325,"line_start":963,"line_end":963,"column_start":5,"column_end":8}},{"value":"/ let encoded_data = [31, 139, 8, 0, 123, 0, 0, 0, 0, 3, 1, 12, 0, 243, 255,","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":73330,"byte_end":73408,"line_start":964,"line_end":964,"column_start":5,"column_end":83}},{"value":"/                     72, 101, 108, 108, 111, 32, 87, 111, 114, 108, 100, 33,","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":73413,"byte_end":73492,"line_start":965,"line_end":965,"column_start":5,"column_end":84}},{"value":"/                     163, 28, 41, 28, 12, 0, 0, 0];","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":73497,"byte_end":73551,"line_start":966,"line_end":966,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":73556,"byte_end":73559,"line_start":967,"line_end":967,"column_start":5,"column_end":8}},{"value":"/ let decoder = Decoder::new(Cursor::new(&encoded_data[..])).unwrap();","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":73564,"byte_end":73636,"line_start":968,"line_end":968,"column_start":5,"column_end":77}},{"value":"/ assert_eq!(decoder.into_inner().into_inner(), &encoded_data[..]);","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":73641,"byte_end":73710,"line_start":969,"line_end":969,"column_start":5,"column_end":74}},{"value":"/ ```","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":73715,"byte_end":73722,"line_start":970,"line_end":970,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":1198},"span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":75494,"byte_end":75506,"line_start":1029,"line_end":1029,"column_start":12,"column_end":24},"name":"MultiDecoder","qualname":"::gzip::MultiDecoder","value":"MultiDecoder {  }","parent":null,"children":[{"krate":0,"index":1200},{"krate":0,"index":1201}],"decl_id":null,"docs":" A decoder that decodes all members in a GZIP stream.\n","sig":null,"attributes":[{"value":"/ A decoder that decodes all members in a GZIP stream.","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":75409,"byte_end":75465,"line_start":1027,"line_end":1027,"column_start":1,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":461},"span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":76675,"byte_end":76678,"line_start":1062,"line_end":1062,"column_start":12,"column_end":15},"name":"new","qualname":"<MultiDecoder<R>>::new","value":"pub fn new(R) -> io::Result<Self>","parent":null,"children":[],"decl_id":null,"docs":" Makes a new decoder instance.","sig":null,"attributes":[{"value":"/ Makes a new decoder instance.","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":75607,"byte_end":75640,"line_start":1037,"line_end":1037,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":75645,"byte_end":75648,"line_start":1038,"line_end":1038,"column_start":5,"column_end":8}},{"value":"/ `inner` is to be decoded GZIP stream.","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":75653,"byte_end":75694,"line_start":1039,"line_end":1039,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":75699,"byte_end":75702,"line_start":1040,"line_end":1040,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":75707,"byte_end":75721,"line_start":1041,"line_end":1041,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":75726,"byte_end":75733,"line_start":1042,"line_end":1042,"column_start":5,"column_end":12}},{"value":"/ use std::io::Read;","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":75738,"byte_end":75760,"line_start":1043,"line_end":1043,"column_start":5,"column_end":27}},{"value":"/ use libflate::gzip::MultiDecoder;","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":75765,"byte_end":75802,"line_start":1044,"line_end":1044,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":75807,"byte_end":75810,"line_start":1045,"line_end":1045,"column_start":5,"column_end":8}},{"value":"/ let mut encoded_data = Vec::new();","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":75815,"byte_end":75853,"line_start":1046,"line_end":1046,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":75858,"byte_end":75861,"line_start":1047,"line_end":1047,"column_start":5,"column_end":8}},{"value":"/ // Add a member (a GZIP binary that represents \"Hello \")","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":75866,"byte_end":75926,"line_start":1048,"line_end":1048,"column_start":5,"column_end":65}},{"value":"/ encoded_data.extend(&[31, 139, 8, 0, 51, 206, 75, 90, 0, 3, 5, 128, 49, 9, 0, 0, 0, 194, 170, 24,","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":75931,"byte_end":76032,"line_start":1049,"line_end":1049,"column_start":5,"column_end":106}},{"value":"/                       199, 34, 126, 3, 251, 127, 163, 131, 71, 192, 252, 45, 234, 6, 0, 0, 0][..]);","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":76037,"byte_end":76140,"line_start":1050,"line_end":1050,"column_start":5,"column_end":108}},{"value":"/","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":76145,"byte_end":76148,"line_start":1051,"line_end":1051,"column_start":5,"column_end":8}},{"value":"/ // Add another member (a GZIP binary that represents \"World!\")","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":76153,"byte_end":76219,"line_start":1052,"line_end":1052,"column_start":5,"column_end":71}},{"value":"/ encoded_data.extend(&[31, 139, 8, 0, 227, 207, 75, 90, 0, 3, 5, 128, 49, 9, 0, 0, 0, 194, 178, 152,","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":76224,"byte_end":76327,"line_start":1053,"line_end":1053,"column_start":5,"column_end":108}},{"value":"/                       202, 2, 158, 130, 96, 255, 99, 120, 111, 4, 222, 157, 40, 118, 6, 0, 0, 0][..]);","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":76332,"byte_end":76438,"line_start":1054,"line_end":1054,"column_start":5,"column_end":111}},{"value":"/","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":76443,"byte_end":76446,"line_start":1055,"line_end":1055,"column_start":5,"column_end":8}},{"value":"/ let mut decoder = MultiDecoder::new(&encoded_data[..]).unwrap();","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":76451,"byte_end":76519,"line_start":1056,"line_end":1056,"column_start":5,"column_end":73}},{"value":"/ let mut buf = Vec::new();","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":76524,"byte_end":76553,"line_start":1057,"line_end":1057,"column_start":5,"column_end":34}},{"value":"/ decoder.read_to_end(&mut buf).unwrap();","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":76558,"byte_end":76601,"line_start":1058,"line_end":1058,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":76606,"byte_end":76609,"line_start":1059,"line_end":1059,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(buf, b\"Hello World!\");","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":76614,"byte_end":76651,"line_start":1060,"line_end":1060,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":76656,"byte_end":76663,"line_start":1061,"line_end":1061,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":462},"span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":77387,"byte_end":77393,"line_start":1083,"line_end":1083,"column_start":12,"column_end":18},"name":"header","qualname":"<MultiDecoder<R>>::header","value":"pub fn header(&Self) -> &Header","parent":null,"children":[],"decl_id":null,"docs":" Returns the header of the current member in the GZIP stream.","sig":null,"attributes":[{"value":"/ Returns the header of the current member in the GZIP stream.","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":76848,"byte_end":76912,"line_start":1070,"line_end":1070,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":76917,"byte_end":76920,"line_start":1071,"line_end":1071,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":76925,"byte_end":76939,"line_start":1072,"line_end":1072,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":76944,"byte_end":76951,"line_start":1073,"line_end":1073,"column_start":5,"column_end":12}},{"value":"/ use libflate::gzip::{MultiDecoder, Os};","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":76956,"byte_end":76999,"line_start":1074,"line_end":1074,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":77004,"byte_end":77007,"line_start":1075,"line_end":1075,"column_start":5,"column_end":8}},{"value":"/ let encoded_data = [31, 139, 8, 0, 123, 0, 0, 0, 0, 3, 1, 12, 0, 243, 255,","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":77012,"byte_end":77090,"line_start":1076,"line_end":1076,"column_start":5,"column_end":83}},{"value":"/                     72, 101, 108, 108, 111, 32, 87, 111, 114, 108, 100, 33,","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":77095,"byte_end":77174,"line_start":1077,"line_end":1077,"column_start":5,"column_end":84}},{"value":"/                     163, 28, 41, 28, 12, 0, 0, 0];","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":77179,"byte_end":77233,"line_start":1078,"line_end":1078,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":77238,"byte_end":77241,"line_start":1079,"line_end":1079,"column_start":5,"column_end":8}},{"value":"/ let decoder = MultiDecoder::new(&encoded_data[..]).unwrap();","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":77246,"byte_end":77310,"line_start":1080,"line_end":1080,"column_start":5,"column_end":69}},{"value":"/ assert_eq!(decoder.header().os(), Os::Unix);","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":77315,"byte_end":77363,"line_start":1081,"line_end":1081,"column_start":5,"column_end":53}},{"value":"/ ```","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":77368,"byte_end":77375,"line_start":1082,"line_end":1082,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":463},"span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":77523,"byte_end":77535,"line_start":1088,"line_end":1088,"column_start":12,"column_end":24},"name":"as_inner_ref","qualname":"<MultiDecoder<R>>::as_inner_ref","value":"pub fn as_inner_ref(&Self) -> &R","parent":null,"children":[],"decl_id":null,"docs":" Returns the immutable reference to the inner stream.\n","sig":null,"attributes":[{"value":"/ Returns the immutable reference to the inner stream.","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":77455,"byte_end":77511,"line_start":1087,"line_end":1087,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":464},"span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":77664,"byte_end":77676,"line_start":1093,"line_end":1093,"column_start":12,"column_end":24},"name":"as_inner_mut","qualname":"<MultiDecoder<R>>::as_inner_mut","value":"pub fn as_inner_mut(&mut Self) -> &mut R","parent":null,"children":[],"decl_id":null,"docs":" Returns the mutable reference to the inner stream.\n","sig":null,"attributes":[{"value":"/ Returns the mutable reference to the inner stream.","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":77598,"byte_end":77652,"line_start":1092,"line_end":1092,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":465},"span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":78344,"byte_end":78354,"line_start":1111,"line_end":1111,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<MultiDecoder<R>>::into_inner","value":"pub fn into_inner(Self) -> R","parent":null,"children":[],"decl_id":null,"docs":" Unwraps this `MultiDecoder`, returning the underlying reader.","sig":null,"attributes":[{"value":"/ Unwraps this `MultiDecoder`, returning the underlying reader.","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":77747,"byte_end":77812,"line_start":1097,"line_end":1097,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":77817,"byte_end":77820,"line_start":1098,"line_end":1098,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":77825,"byte_end":77839,"line_start":1099,"line_end":1099,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":77844,"byte_end":77851,"line_start":1100,"line_end":1100,"column_start":5,"column_end":12}},{"value":"/ use std::io::Cursor;","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":77856,"byte_end":77880,"line_start":1101,"line_end":1101,"column_start":5,"column_end":29}},{"value":"/ use libflate::gzip::MultiDecoder;","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":77885,"byte_end":77922,"line_start":1102,"line_end":1102,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":77927,"byte_end":77930,"line_start":1103,"line_end":1103,"column_start":5,"column_end":8}},{"value":"/ let encoded_data = [31, 139, 8, 0, 123, 0, 0, 0, 0, 3, 1, 12, 0, 243, 255,","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":77935,"byte_end":78013,"line_start":1104,"line_end":1104,"column_start":5,"column_end":83}},{"value":"/                     72, 101, 108, 108, 111, 32, 87, 111, 114, 108, 100, 33,","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":78018,"byte_end":78097,"line_start":1105,"line_end":1105,"column_start":5,"column_end":84}},{"value":"/                     163, 28, 41, 28, 12, 0, 0, 0];","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":78102,"byte_end":78156,"line_start":1106,"line_end":1106,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":78161,"byte_end":78164,"line_start":1107,"line_end":1107,"column_start":5,"column_end":8}},{"value":"/ let decoder = MultiDecoder::new(Cursor::new(&encoded_data[..])).unwrap();","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":78169,"byte_end":78246,"line_start":1108,"line_end":1108,"column_start":5,"column_end":82}},{"value":"/ assert_eq!(decoder.into_inner().into_inner(), &encoded_data[..]);","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":78251,"byte_end":78320,"line_start":1109,"line_end":1109,"column_start":5,"column_end":74}},{"value":"/ ```","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":78325,"byte_end":78332,"line_start":1110,"line_end":1110,"column_start":5,"column_end":12}}]},{"kind":"Mod","id":{"krate":0,"index":469},"span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/lz77.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"lz77","qualname":"::lz77","value":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/lz77.rs","parent":null,"children":[{"krate":0,"index":470}],"decl_id":null,"docs":" The interface and implementations of LZ77 compression algorithm.","sig":null,"attributes":[{"value":"/ The interface and implementations of LZ77 compression algorithm.","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/lz77.rs","byte_start":84059,"byte_end":84127,"line_start":1,"line_end":1,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/lz77.rs","byte_start":84128,"byte_end":84131,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ LZ77 is a compression algorithm used in [DEFLATE](https://tools.ietf.org/html/rfc1951).","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/lz77.rs","byte_start":84132,"byte_end":84223,"line_start":3,"line_end":3,"column_start":1,"column_end":92}}]},{"kind":"Mod","id":{"krate":0,"index":471},"span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/non_blocking/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"non_blocking","qualname":"::non_blocking","value":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/non_blocking/mod.rs","parent":null,"children":[{"krate":0,"index":472},{"krate":0,"index":526},{"krate":0,"index":559},{"krate":0,"index":589}],"decl_id":null,"docs":" Implementations that can handle non-blocking I/O.","sig":null,"attributes":[{"value":"/ Implementations that can handle non-blocking I/O.","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/non_blocking/mod.rs","byte_start":84861,"byte_end":84914,"line_start":1,"line_end":1,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/non_blocking/mod.rs","byte_start":84915,"byte_end":84918,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ The implementations in this module can handle non-blocking","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/non_blocking/mod.rs","byte_start":84919,"byte_end":84981,"line_start":3,"line_end":3,"column_start":1,"column_end":63}},{"value":"/ `Reader`s and `Writer`s which will return `ErrorKind::WouldBlock` error","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/non_blocking/mod.rs","byte_start":84982,"byte_end":85057,"line_start":4,"line_end":4,"column_start":1,"column_end":76}},{"value":"/ when I/O operations would block.","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/non_blocking/mod.rs","byte_start":85058,"byte_end":85094,"line_start":5,"line_end":5,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/non_blocking/mod.rs","byte_start":85095,"byte_end":85098,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ If inner `Reader`s and `Writer`s return `ErrorKind::WouldBlock` error,","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/non_blocking/mod.rs","byte_start":85099,"byte_end":85173,"line_start":7,"line_end":7,"column_start":1,"column_end":75}},{"value":"/ `Decoder`s and `Encoder`s in this module will also return `ErrorKind::WouldBlock`.","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/non_blocking/mod.rs","byte_start":85174,"byte_end":85260,"line_start":8,"line_end":8,"column_start":1,"column_end":87}},{"value":"/","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/non_blocking/mod.rs","byte_start":85261,"byte_end":85264,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ If retrying the operation after the inner I/O become available, it will proceed successfully.","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/non_blocking/mod.rs","byte_start":85265,"byte_end":85362,"line_start":10,"line_end":10,"column_start":1,"column_end":98}},{"value":"/","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/non_blocking/mod.rs","byte_start":85363,"byte_end":85366,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ # NOTICE","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/non_blocking/mod.rs","byte_start":85367,"byte_end":85379,"line_start":12,"line_end":12,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/non_blocking/mod.rs","byte_start":85380,"byte_end":85383,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ There is some performance penalty for non-blocking implementations","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/non_blocking/mod.rs","byte_start":85384,"byte_end":85454,"line_start":14,"line_end":14,"column_start":1,"column_end":71}},{"value":"/ against those that do not consider nonblocking I / O.","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/non_blocking/mod.rs","byte_start":85455,"byte_end":85512,"line_start":15,"line_end":15,"column_start":1,"column_end":58}},{"value":"/ So, it is recommended to use the latter if you are not need to handle non-blocking I/O.","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/non_blocking/mod.rs","byte_start":85513,"byte_end":85604,"line_start":16,"line_end":16,"column_start":1,"column_end":92}}]},{"kind":"Mod","id":{"krate":0,"index":472},"span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/non_blocking/deflate/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"deflate","qualname":"::non_blocking::deflate","value":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/non_blocking/deflate/mod.rs","parent":null,"children":[{"krate":0,"index":473},{"krate":0,"index":476}],"decl_id":null,"docs":" The decoder of the DEFLATE format and algorithm.","sig":null,"attributes":[{"value":"/ The decoder of the DEFLATE format and algorithm.","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/non_blocking/deflate/mod.rs","byte_start":85669,"byte_end":85721,"line_start":1,"line_end":1,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/non_blocking/deflate/mod.rs","byte_start":85722,"byte_end":85725,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ The DEFLATE is defined in [RFC-1951](https://tools.ietf.org/html/rfc1951).","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/non_blocking/deflate/mod.rs","byte_start":85726,"byte_end":85804,"line_start":3,"line_end":3,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/non_blocking/deflate/mod.rs","byte_start":85805,"byte_end":85808,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/non_blocking/deflate/mod.rs","byte_start":85809,"byte_end":85823,"line_start":5,"line_end":5,"column_start":1,"column_end":15}},{"value":"/ ```","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/non_blocking/deflate/mod.rs","byte_start":85824,"byte_end":85831,"line_start":6,"line_end":6,"column_start":1,"column_end":8}},{"value":"/ use std::io::{self, Read};","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/non_blocking/deflate/mod.rs","byte_start":85832,"byte_end":85862,"line_start":7,"line_end":7,"column_start":1,"column_end":31}},{"value":"/ use libflate::deflate::Encoder;","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/non_blocking/deflate/mod.rs","byte_start":85863,"byte_end":85898,"line_start":8,"line_end":8,"column_start":1,"column_end":36}},{"value":"/ use libflate::non_blocking::deflate::Decoder;","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/non_blocking/deflate/mod.rs","byte_start":85899,"byte_end":85948,"line_start":9,"line_end":9,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/non_blocking/deflate/mod.rs","byte_start":85949,"byte_end":85952,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ // Encoding","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/non_blocking/deflate/mod.rs","byte_start":85953,"byte_end":85968,"line_start":11,"line_end":11,"column_start":1,"column_end":16}},{"value":"/ let mut encoder = Encoder::new(Vec::new());","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/non_blocking/deflate/mod.rs","byte_start":85969,"byte_end":86016,"line_start":12,"line_end":12,"column_start":1,"column_end":48}},{"value":"/ io::copy(&mut &b\"Hello World!\"[..], &mut encoder).unwrap();","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/non_blocking/deflate/mod.rs","byte_start":86017,"byte_end":86080,"line_start":13,"line_end":13,"column_start":1,"column_end":64}},{"value":"/ let encoded_data = encoder.finish().into_result().unwrap();","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/non_blocking/deflate/mod.rs","byte_start":86081,"byte_end":86144,"line_start":14,"line_end":14,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/non_blocking/deflate/mod.rs","byte_start":86145,"byte_end":86148,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ // Decoding","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/non_blocking/deflate/mod.rs","byte_start":86149,"byte_end":86164,"line_start":16,"line_end":16,"column_start":1,"column_end":16}},{"value":"/ let mut decoder = Decoder::new(&encoded_data[..]);","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/non_blocking/deflate/mod.rs","byte_start":86165,"byte_end":86219,"line_start":17,"line_end":17,"column_start":1,"column_end":55}},{"value":"/ let mut decoded_data = Vec::new();","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/non_blocking/deflate/mod.rs","byte_start":86220,"byte_end":86258,"line_start":18,"line_end":18,"column_start":1,"column_end":39}},{"value":"/ decoder.read_to_end(&mut decoded_data).unwrap();","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/non_blocking/deflate/mod.rs","byte_start":86259,"byte_end":86311,"line_start":19,"line_end":19,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/non_blocking/deflate/mod.rs","byte_start":86312,"byte_end":86315,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(decoded_data, b\"Hello World!\");","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/non_blocking/deflate/mod.rs","byte_start":86316,"byte_end":86362,"line_start":21,"line_end":21,"column_start":1,"column_end":47}},{"value":"/ ```","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/non_blocking/deflate/mod.rs","byte_start":86363,"byte_end":86370,"line_start":22,"line_end":22,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":1205},"span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/non_blocking/deflate/decode.rs","byte_start":86673,"byte_end":86680,"line_start":10,"line_end":10,"column_start":12,"column_end":19},"name":"Decoder","qualname":"::non_blocking::deflate::decode::Decoder","value":"Decoder {  }","parent":null,"children":[{"krate":0,"index":1207},{"krate":0,"index":1208},{"krate":0,"index":1209},{"krate":0,"index":1210}],"decl_id":null,"docs":" DEFLATE decoder which supports non-blocking I/O.\n","sig":null,"attributes":[{"value":"/ DEFLATE decoder which supports non-blocking I/O.","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/non_blocking/deflate/decode.rs","byte_start":86592,"byte_end":86644,"line_start":8,"line_end":8,"column_start":1,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":501},"span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/non_blocking/deflate/decode.rs","byte_start":87366,"byte_end":87369,"line_start":33,"line_end":33,"column_start":12,"column_end":15},"name":"new","qualname":"<Decoder<R>>::new","value":"pub fn new(R) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Makes a new decoder instance.","sig":null,"attributes":[{"value":"/ Makes a new decoder instance.","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/non_blocking/deflate/decode.rs","byte_start":86835,"byte_end":86868,"line_start":17,"line_end":17,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/non_blocking/deflate/decode.rs","byte_start":86873,"byte_end":86876,"line_start":18,"line_end":18,"column_start":5,"column_end":8}},{"value":"/ `inner` is to be decoded DEFLATE stream.","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/non_blocking/deflate/decode.rs","byte_start":86881,"byte_end":86925,"line_start":19,"line_end":19,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/non_blocking/deflate/decode.rs","byte_start":86930,"byte_end":86933,"line_start":20,"line_end":20,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/non_blocking/deflate/decode.rs","byte_start":86938,"byte_end":86952,"line_start":21,"line_end":21,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/non_blocking/deflate/decode.rs","byte_start":86957,"byte_end":86964,"line_start":22,"line_end":22,"column_start":5,"column_end":12}},{"value":"/ use std::io::{Cursor, Read};","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/non_blocking/deflate/decode.rs","byte_start":86969,"byte_end":87001,"line_start":23,"line_end":23,"column_start":5,"column_end":37}},{"value":"/ use libflate::non_blocking::deflate::Decoder;","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/non_blocking/deflate/decode.rs","byte_start":87006,"byte_end":87055,"line_start":24,"line_end":24,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/non_blocking/deflate/decode.rs","byte_start":87060,"byte_end":87063,"line_start":25,"line_end":25,"column_start":5,"column_end":8}},{"value":"/ let encoded_data = [243, 72, 205, 201, 201, 87, 8, 207, 47, 202, 73, 81, 4, 0];","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/non_blocking/deflate/decode.rs","byte_start":87068,"byte_end":87151,"line_start":26,"line_end":26,"column_start":5,"column_end":88}},{"value":"/ let mut decoder = Decoder::new(&encoded_data[..]);","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/non_blocking/deflate/decode.rs","byte_start":87156,"byte_end":87210,"line_start":27,"line_end":27,"column_start":5,"column_end":59}},{"value":"/ let mut buf = Vec::new();","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/non_blocking/deflate/decode.rs","byte_start":87215,"byte_end":87244,"line_start":28,"line_end":28,"column_start":5,"column_end":34}},{"value":"/ decoder.read_to_end(&mut buf).unwrap();","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/non_blocking/deflate/decode.rs","byte_start":87249,"byte_end":87292,"line_start":29,"line_end":29,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/non_blocking/deflate/decode.rs","byte_start":87297,"byte_end":87300,"line_start":30,"line_end":30,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(buf, b\"Hello World!\");","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/non_blocking/deflate/decode.rs","byte_start":87305,"byte_end":87342,"line_start":31,"line_end":31,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/non_blocking/deflate/decode.rs","byte_start":87347,"byte_end":87354,"line_start":32,"line_end":32,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":502},"span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/non_blocking/deflate/decode.rs","byte_start":87679,"byte_end":87691,"line_start":43,"line_end":43,"column_start":12,"column_end":24},"name":"as_inner_ref","qualname":"<Decoder<R>>::as_inner_ref","value":"pub fn as_inner_ref(&Self) -> &R","parent":null,"children":[],"decl_id":null,"docs":" Returns the immutable reference to the inner stream.\n","sig":null,"attributes":[{"value":"/ Returns the immutable reference to the inner stream.","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/non_blocking/deflate/decode.rs","byte_start":87611,"byte_end":87667,"line_start":42,"line_end":42,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":503},"span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/non_blocking/deflate/decode.rs","byte_start":87823,"byte_end":87835,"line_start":48,"line_end":48,"column_start":12,"column_end":24},"name":"as_inner_mut","qualname":"<Decoder<R>>::as_inner_mut","value":"pub fn as_inner_mut(&mut Self) -> &mut R","parent":null,"children":[],"decl_id":null,"docs":" Returns the mutable reference to the inner stream.\n","sig":null,"attributes":[{"value":"/ Returns the mutable reference to the inner stream.","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/non_blocking/deflate/decode.rs","byte_start":87757,"byte_end":87811,"line_start":47,"line_end":47,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":504},"span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/non_blocking/deflate/decode.rs","byte_start":88345,"byte_end":88355,"line_start":63,"line_end":63,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Decoder<R>>::into_inner","value":"pub fn into_inner(Self) -> R","parent":null,"children":[],"decl_id":null,"docs":" Unwraps this `Decoder`, returning the underlying reader.","sig":null,"attributes":[{"value":"/ Unwraps this `Decoder`, returning the underlying reader.","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/non_blocking/deflate/decode.rs","byte_start":87909,"byte_end":87969,"line_start":52,"line_end":52,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/non_blocking/deflate/decode.rs","byte_start":87974,"byte_end":87977,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/non_blocking/deflate/decode.rs","byte_start":87982,"byte_end":87996,"line_start":54,"line_end":54,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/non_blocking/deflate/decode.rs","byte_start":88001,"byte_end":88008,"line_start":55,"line_end":55,"column_start":5,"column_end":12}},{"value":"/ use std::io::Cursor;","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/non_blocking/deflate/decode.rs","byte_start":88013,"byte_end":88037,"line_start":56,"line_end":56,"column_start":5,"column_end":29}},{"value":"/ use libflate::non_blocking::deflate::Decoder;","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/non_blocking/deflate/decode.rs","byte_start":88042,"byte_end":88091,"line_start":57,"line_end":57,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/non_blocking/deflate/decode.rs","byte_start":88096,"byte_end":88099,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ let encoded_data = [243, 72, 205, 201, 201, 87, 8, 207, 47, 202, 73, 81, 4, 0];","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/non_blocking/deflate/decode.rs","byte_start":88104,"byte_end":88187,"line_start":59,"line_end":59,"column_start":5,"column_end":88}},{"value":"/ let decoder = Decoder::new(Cursor::new(&encoded_data));","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/non_blocking/deflate/decode.rs","byte_start":88192,"byte_end":88251,"line_start":60,"line_end":60,"column_start":5,"column_end":64}},{"value":"/ assert_eq!(decoder.into_inner().into_inner(), &encoded_data);","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/non_blocking/deflate/decode.rs","byte_start":88256,"byte_end":88321,"line_start":61,"line_end":61,"column_start":5,"column_end":70}},{"value":"/ ```","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/non_blocking/deflate/decode.rs","byte_start":88326,"byte_end":88333,"line_start":62,"line_end":62,"column_start":5,"column_end":12}}]},{"kind":"Mod","id":{"krate":0,"index":526},"span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/non_blocking/gzip.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"gzip","qualname":"::non_blocking::gzip","value":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/non_blocking/gzip.rs","parent":null,"children":[{"krate":0,"index":527},{"krate":0,"index":530},{"krate":0,"index":531},{"krate":0,"index":534},{"krate":0,"index":537},{"krate":0,"index":540},{"krate":0,"index":541},{"krate":0,"index":544},{"krate":0,"index":1235},{"krate":0,"index":1241},{"krate":0,"index":547},{"krate":0,"index":555}],"decl_id":null,"docs":" The encoder and decoder of the GZIP format.","sig":null,"attributes":[{"value":"/ The encoder and decoder of the GZIP format.","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/non_blocking/gzip.rs","byte_start":96802,"byte_end":96849,"line_start":1,"line_end":1,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/non_blocking/gzip.rs","byte_start":96850,"byte_end":96853,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ The GZIP format is defined in [RFC-1952](https://tools.ietf.org/html/rfc1952).","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/non_blocking/gzip.rs","byte_start":96854,"byte_end":96936,"line_start":3,"line_end":3,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/non_blocking/gzip.rs","byte_start":96937,"byte_end":96940,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/non_blocking/gzip.rs","byte_start":96941,"byte_end":96955,"line_start":5,"line_end":5,"column_start":1,"column_end":15}},{"value":"/ ```","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/non_blocking/gzip.rs","byte_start":96956,"byte_end":96963,"line_start":6,"line_end":6,"column_start":1,"column_end":8}},{"value":"/ use std::io::{self, Read};","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/non_blocking/gzip.rs","byte_start":96964,"byte_end":96994,"line_start":7,"line_end":7,"column_start":1,"column_end":31}},{"value":"/ use libflate::gzip::Encoder;","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/non_blocking/gzip.rs","byte_start":96995,"byte_end":97027,"line_start":8,"line_end":8,"column_start":1,"column_end":33}},{"value":"/ use libflate::non_blocking::gzip::Decoder;","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/non_blocking/gzip.rs","byte_start":97028,"byte_end":97074,"line_start":9,"line_end":9,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/non_blocking/gzip.rs","byte_start":97075,"byte_end":97078,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ // Encoding","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/non_blocking/gzip.rs","byte_start":97079,"byte_end":97094,"line_start":11,"line_end":11,"column_start":1,"column_end":16}},{"value":"/ let mut encoder = Encoder::new(Vec::new()).unwrap();","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/non_blocking/gzip.rs","byte_start":97095,"byte_end":97151,"line_start":12,"line_end":12,"column_start":1,"column_end":57}},{"value":"/ io::copy(&mut &b\"Hello World!\"[..], &mut encoder).unwrap();","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/non_blocking/gzip.rs","byte_start":97152,"byte_end":97215,"line_start":13,"line_end":13,"column_start":1,"column_end":64}},{"value":"/ let encoded_data = encoder.finish().into_result().unwrap();","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/non_blocking/gzip.rs","byte_start":97216,"byte_end":97279,"line_start":14,"line_end":14,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/non_blocking/gzip.rs","byte_start":97280,"byte_end":97283,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ // Decoding","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/non_blocking/gzip.rs","byte_start":97284,"byte_end":97299,"line_start":16,"line_end":16,"column_start":1,"column_end":16}},{"value":"/ let mut decoder = Decoder::new(&encoded_data[..]);","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/non_blocking/gzip.rs","byte_start":97300,"byte_end":97354,"line_start":17,"line_end":17,"column_start":1,"column_end":55}},{"value":"/ let mut decoded_data = Vec::new();","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/non_blocking/gzip.rs","byte_start":97355,"byte_end":97393,"line_start":18,"line_end":18,"column_start":1,"column_end":39}},{"value":"/ decoder.read_to_end(&mut decoded_data).unwrap();","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/non_blocking/gzip.rs","byte_start":97394,"byte_end":97446,"line_start":19,"line_end":19,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/non_blocking/gzip.rs","byte_start":97447,"byte_end":97450,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(decoded_data, b\"Hello World!\");","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/non_blocking/gzip.rs","byte_start":97451,"byte_end":97497,"line_start":21,"line_end":21,"column_start":1,"column_end":47}},{"value":"/ ```","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/non_blocking/gzip.rs","byte_start":97498,"byte_end":97505,"line_start":22,"line_end":22,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":1235},"span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/non_blocking/gzip.rs","byte_start":97703,"byte_end":97710,"line_start":30,"line_end":30,"column_start":12,"column_end":19},"name":"Decoder","qualname":"::non_blocking::gzip::Decoder","value":"Decoder {  }","parent":null,"children":[{"krate":0,"index":1237},{"krate":0,"index":1238},{"krate":0,"index":1239},{"krate":0,"index":1240}],"decl_id":null,"docs":" GZIP decoder which supports non-blocking I/O.\n","sig":null,"attributes":[{"value":"/ GZIP decoder which supports non-blocking I/O.","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/non_blocking/gzip.rs","byte_start":97625,"byte_end":97674,"line_start":28,"line_end":28,"column_start":1,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":549},"span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/non_blocking/gzip.rs","byte_start":98514,"byte_end":98517,"line_start":56,"line_end":56,"column_start":12,"column_end":15},"name":"new","qualname":"<Decoder<R>>::new","value":"pub fn new(R) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Makes a new decoder instance.","sig":null,"attributes":[{"value":"/ Makes a new decoder instance.","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/non_blocking/gzip.rs","byte_start":97853,"byte_end":97886,"line_start":37,"line_end":37,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/non_blocking/gzip.rs","byte_start":97891,"byte_end":97894,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ `inner` is to be decoded GZIP stream.","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/non_blocking/gzip.rs","byte_start":97899,"byte_end":97940,"line_start":39,"line_end":39,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/non_blocking/gzip.rs","byte_start":97945,"byte_end":97948,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/non_blocking/gzip.rs","byte_start":97953,"byte_end":97967,"line_start":41,"line_end":41,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/non_blocking/gzip.rs","byte_start":97972,"byte_end":97979,"line_start":42,"line_end":42,"column_start":5,"column_end":12}},{"value":"/ use std::io::Read;","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/non_blocking/gzip.rs","byte_start":97984,"byte_end":98006,"line_start":43,"line_end":43,"column_start":5,"column_end":27}},{"value":"/ use libflate::non_blocking::gzip::Decoder;","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/non_blocking/gzip.rs","byte_start":98011,"byte_end":98057,"line_start":44,"line_end":44,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/non_blocking/gzip.rs","byte_start":98062,"byte_end":98065,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ let encoded_data = [31, 139, 8, 0, 123, 0, 0, 0, 0, 3, 1, 12, 0, 243, 255,","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/non_blocking/gzip.rs","byte_start":98070,"byte_end":98148,"line_start":46,"line_end":46,"column_start":5,"column_end":83}},{"value":"/                     72, 101, 108, 108, 111, 32, 87, 111, 114, 108, 100, 33,","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/non_blocking/gzip.rs","byte_start":98153,"byte_end":98232,"line_start":47,"line_end":47,"column_start":5,"column_end":84}},{"value":"/                     163, 28, 41, 28, 12, 0, 0, 0];","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/non_blocking/gzip.rs","byte_start":98237,"byte_end":98291,"line_start":48,"line_end":48,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/non_blocking/gzip.rs","byte_start":98296,"byte_end":98299,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ let mut decoder = Decoder::new(&encoded_data[..]);","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/non_blocking/gzip.rs","byte_start":98304,"byte_end":98358,"line_start":50,"line_end":50,"column_start":5,"column_end":59}},{"value":"/ let mut buf = Vec::new();","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/non_blocking/gzip.rs","byte_start":98363,"byte_end":98392,"line_start":51,"line_end":51,"column_start":5,"column_end":34}},{"value":"/ decoder.read_to_end(&mut buf).unwrap();","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/non_blocking/gzip.rs","byte_start":98397,"byte_end":98440,"line_start":52,"line_end":52,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/non_blocking/gzip.rs","byte_start":98445,"byte_end":98448,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(buf, b\"Hello World!\");","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/non_blocking/gzip.rs","byte_start":98453,"byte_end":98490,"line_start":54,"line_end":54,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/non_blocking/gzip.rs","byte_start":98495,"byte_end":98502,"line_start":55,"line_end":55,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":550},"span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/non_blocking/gzip.rs","byte_start":99271,"byte_end":99277,"line_start":79,"line_end":79,"column_start":12,"column_end":18},"name":"header","qualname":"<Decoder<R>>::header","value":"pub fn header(&mut Self) -> io::Result<&Header>","parent":null,"children":[],"decl_id":null,"docs":" Returns the header of the GZIP stream.","sig":null,"attributes":[{"value":"/ Returns the header of the GZIP stream.","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/non_blocking/gzip.rs","byte_start":98720,"byte_end":98762,"line_start":65,"line_end":65,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/non_blocking/gzip.rs","byte_start":98767,"byte_end":98770,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/non_blocking/gzip.rs","byte_start":98775,"byte_end":98789,"line_start":67,"line_end":67,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/non_blocking/gzip.rs","byte_start":98794,"byte_end":98801,"line_start":68,"line_end":68,"column_start":5,"column_end":12}},{"value":"/ use libflate::gzip::Os;","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/non_blocking/gzip.rs","byte_start":98806,"byte_end":98833,"line_start":69,"line_end":69,"column_start":5,"column_end":32}},{"value":"/ use libflate::non_blocking::gzip::Decoder;","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/non_blocking/gzip.rs","byte_start":98838,"byte_end":98884,"line_start":70,"line_end":70,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/non_blocking/gzip.rs","byte_start":98889,"byte_end":98892,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ let encoded_data = [31, 139, 8, 0, 123, 0, 0, 0, 0, 3, 1, 12, 0, 243, 255,","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/non_blocking/gzip.rs","byte_start":98897,"byte_end":98975,"line_start":72,"line_end":72,"column_start":5,"column_end":83}},{"value":"/                     72, 101, 108, 108, 111, 32, 87, 111, 114, 108, 100, 33,","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/non_blocking/gzip.rs","byte_start":98980,"byte_end":99059,"line_start":73,"line_end":73,"column_start":5,"column_end":84}},{"value":"/                     163, 28, 41, 28, 12, 0, 0, 0];","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/non_blocking/gzip.rs","byte_start":99064,"byte_end":99118,"line_start":74,"line_end":74,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/non_blocking/gzip.rs","byte_start":99123,"byte_end":99126,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ let mut decoder = Decoder::new(&encoded_data[..]);","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/non_blocking/gzip.rs","byte_start":99131,"byte_end":99185,"line_start":76,"line_end":76,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(decoder.header().unwrap().os(), Os::Unix);","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/non_blocking/gzip.rs","byte_start":99190,"byte_end":99247,"line_start":77,"line_end":77,"column_start":5,"column_end":62}},{"value":"/ ```","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/non_blocking/gzip.rs","byte_start":99252,"byte_end":99259,"line_start":78,"line_end":78,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":552},"span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/non_blocking/gzip.rs","byte_start":99717,"byte_end":99729,"line_start":93,"line_end":93,"column_start":12,"column_end":24},"name":"as_inner_ref","qualname":"<Decoder<R>>::as_inner_ref","value":"pub fn as_inner_ref(&Self) -> &R","parent":null,"children":[],"decl_id":null,"docs":" Returns the immutable reference to the inner stream.\n","sig":null,"attributes":[{"value":"/ Returns the immutable reference to the inner stream.","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/non_blocking/gzip.rs","byte_start":99649,"byte_end":99705,"line_start":92,"line_end":92,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":553},"span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/non_blocking/gzip.rs","byte_start":99857,"byte_end":99869,"line_start":98,"line_end":98,"column_start":12,"column_end":24},"name":"as_inner_mut","qualname":"<Decoder<R>>::as_inner_mut","value":"pub fn as_inner_mut(&mut Self) -> &mut R","parent":null,"children":[],"decl_id":null,"docs":" Returns the mutable reference to the inner stream.\n","sig":null,"attributes":[{"value":"/ Returns the mutable reference to the inner stream.","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/non_blocking/gzip.rs","byte_start":99791,"byte_end":99845,"line_start":97,"line_end":97,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":554},"span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/non_blocking/gzip.rs","byte_start":100526,"byte_end":100536,"line_start":116,"line_end":116,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Decoder<R>>::into_inner","value":"pub fn into_inner(Self) -> R","parent":null,"children":[],"decl_id":null,"docs":" Unwraps this `Decoder`, returning the underlying reader.","sig":null,"attributes":[{"value":"/ Unwraps this `Decoder`, returning the underlying reader.","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/non_blocking/gzip.rs","byte_start":99939,"byte_end":99999,"line_start":102,"line_end":102,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/non_blocking/gzip.rs","byte_start":100004,"byte_end":100007,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/non_blocking/gzip.rs","byte_start":100012,"byte_end":100026,"line_start":104,"line_end":104,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/non_blocking/gzip.rs","byte_start":100031,"byte_end":100038,"line_start":105,"line_end":105,"column_start":5,"column_end":12}},{"value":"/ use std::io::Cursor;","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/non_blocking/gzip.rs","byte_start":100043,"byte_end":100067,"line_start":106,"line_end":106,"column_start":5,"column_end":29}},{"value":"/ use libflate::non_blocking::gzip::Decoder;","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/non_blocking/gzip.rs","byte_start":100072,"byte_end":100118,"line_start":107,"line_end":107,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/non_blocking/gzip.rs","byte_start":100123,"byte_end":100126,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/ let encoded_data = [31, 139, 8, 0, 123, 0, 0, 0, 0, 3, 1, 12, 0, 243, 255,","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/non_blocking/gzip.rs","byte_start":100131,"byte_end":100209,"line_start":109,"line_end":109,"column_start":5,"column_end":83}},{"value":"/                     72, 101, 108, 108, 111, 32, 87, 111, 114, 108, 100, 33,","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/non_blocking/gzip.rs","byte_start":100214,"byte_end":100293,"line_start":110,"line_end":110,"column_start":5,"column_end":84}},{"value":"/                     163, 28, 41, 28, 12, 0, 0, 0];","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/non_blocking/gzip.rs","byte_start":100298,"byte_end":100352,"line_start":111,"line_end":111,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/non_blocking/gzip.rs","byte_start":100357,"byte_end":100360,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ let decoder = Decoder::new(Cursor::new(&encoded_data[..]));","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/non_blocking/gzip.rs","byte_start":100365,"byte_end":100428,"line_start":113,"line_end":113,"column_start":5,"column_end":68}},{"value":"/ assert_eq!(decoder.into_inner().into_inner(), &encoded_data[..]);","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/non_blocking/gzip.rs","byte_start":100433,"byte_end":100502,"line_start":114,"line_end":114,"column_start":5,"column_end":74}},{"value":"/ ```","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/non_blocking/gzip.rs","byte_start":100507,"byte_end":100514,"line_start":115,"line_end":115,"column_start":5,"column_end":12}}]},{"kind":"Mod","id":{"krate":0,"index":559},"span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/non_blocking/zlib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"zlib","qualname":"::non_blocking::zlib","value":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/non_blocking/zlib.rs","parent":null,"children":[{"krate":0,"index":560},{"krate":0,"index":563},{"krate":0,"index":566},{"krate":0,"index":569},{"krate":0,"index":570},{"krate":0,"index":573},{"krate":0,"index":1244},{"krate":0,"index":1250},{"krate":0,"index":576},{"krate":0,"index":584}],"decl_id":null,"docs":" The encoder and decoder of the ZLIB format.","sig":null,"attributes":[{"value":"/ The encoder and decoder of the ZLIB format.","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/non_blocking/zlib.rs","byte_start":102875,"byte_end":102922,"line_start":1,"line_end":1,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/non_blocking/zlib.rs","byte_start":102923,"byte_end":102926,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ The ZLIB format is defined in [RFC-1950](https://tools.ietf.org/html/rfc1950).","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/non_blocking/zlib.rs","byte_start":102927,"byte_end":103009,"line_start":3,"line_end":3,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/non_blocking/zlib.rs","byte_start":103010,"byte_end":103013,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/non_blocking/zlib.rs","byte_start":103014,"byte_end":103028,"line_start":5,"line_end":5,"column_start":1,"column_end":15}},{"value":"/ ```","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/non_blocking/zlib.rs","byte_start":103029,"byte_end":103036,"line_start":6,"line_end":6,"column_start":1,"column_end":8}},{"value":"/ use std::io::{self, Read};","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/non_blocking/zlib.rs","byte_start":103037,"byte_end":103067,"line_start":7,"line_end":7,"column_start":1,"column_end":31}},{"value":"/ use libflate::zlib::Encoder;","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/non_blocking/zlib.rs","byte_start":103068,"byte_end":103100,"line_start":8,"line_end":8,"column_start":1,"column_end":33}},{"value":"/ use libflate::non_blocking::zlib::Decoder;","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/non_blocking/zlib.rs","byte_start":103101,"byte_end":103147,"line_start":9,"line_end":9,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/non_blocking/zlib.rs","byte_start":103148,"byte_end":103151,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ // Encoding","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/non_blocking/zlib.rs","byte_start":103152,"byte_end":103167,"line_start":11,"line_end":11,"column_start":1,"column_end":16}},{"value":"/ let mut encoder = Encoder::new(Vec::new()).unwrap();","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/non_blocking/zlib.rs","byte_start":103168,"byte_end":103224,"line_start":12,"line_end":12,"column_start":1,"column_end":57}},{"value":"/ io::copy(&mut &b\"Hello World!\"[..], &mut encoder).unwrap();","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/non_blocking/zlib.rs","byte_start":103225,"byte_end":103288,"line_start":13,"line_end":13,"column_start":1,"column_end":64}},{"value":"/ let encoded_data = encoder.finish().into_result().unwrap();","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/non_blocking/zlib.rs","byte_start":103289,"byte_end":103352,"line_start":14,"line_end":14,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/non_blocking/zlib.rs","byte_start":103353,"byte_end":103356,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ // Decoding","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/non_blocking/zlib.rs","byte_start":103357,"byte_end":103372,"line_start":16,"line_end":16,"column_start":1,"column_end":16}},{"value":"/ let mut decoder = Decoder::new(&encoded_data[..]);","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/non_blocking/zlib.rs","byte_start":103373,"byte_end":103427,"line_start":17,"line_end":17,"column_start":1,"column_end":55}},{"value":"/ let mut decoded_data = Vec::new();","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/non_blocking/zlib.rs","byte_start":103428,"byte_end":103466,"line_start":18,"line_end":18,"column_start":1,"column_end":39}},{"value":"/ decoder.read_to_end(&mut decoded_data).unwrap();","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/non_blocking/zlib.rs","byte_start":103467,"byte_end":103519,"line_start":19,"line_end":19,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/non_blocking/zlib.rs","byte_start":103520,"byte_end":103523,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(decoded_data, b\"Hello World!\");","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/non_blocking/zlib.rs","byte_start":103524,"byte_end":103570,"line_start":21,"line_end":21,"column_start":1,"column_end":47}},{"value":"/ ```","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/non_blocking/zlib.rs","byte_start":103571,"byte_end":103578,"line_start":22,"line_end":22,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":1244},"span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/non_blocking/zlib.rs","byte_start":103765,"byte_end":103772,"line_start":30,"line_end":30,"column_start":12,"column_end":19},"name":"Decoder","qualname":"::non_blocking::zlib::Decoder","value":"Decoder {  }","parent":null,"children":[{"krate":0,"index":1246},{"krate":0,"index":1247},{"krate":0,"index":1248},{"krate":0,"index":1249}],"decl_id":null,"docs":" ZLIB decoder which supports non-blocking I/O.\n","sig":null,"attributes":[{"value":"/ ZLIB decoder which supports non-blocking I/O.","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/non_blocking/zlib.rs","byte_start":103687,"byte_end":103736,"line_start":28,"line_end":28,"column_start":1,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":578},"span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/non_blocking/zlib.rs","byte_start":104495,"byte_end":104498,"line_start":55,"line_end":55,"column_start":12,"column_end":15},"name":"new","qualname":"<Decoder<R>>::new","value":"pub fn new(R) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Makes a new decoder instance.","sig":null,"attributes":[{"value":"/ Makes a new decoder instance.","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/non_blocking/zlib.rs","byte_start":103919,"byte_end":103952,"line_start":37,"line_end":37,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/non_blocking/zlib.rs","byte_start":103957,"byte_end":103960,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ `inner` is to be decoded ZLIB stream.","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/non_blocking/zlib.rs","byte_start":103965,"byte_end":104006,"line_start":39,"line_end":39,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/non_blocking/zlib.rs","byte_start":104011,"byte_end":104014,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/non_blocking/zlib.rs","byte_start":104019,"byte_end":104033,"line_start":41,"line_end":41,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/non_blocking/zlib.rs","byte_start":104038,"byte_end":104045,"line_start":42,"line_end":42,"column_start":5,"column_end":12}},{"value":"/ use std::io::Read;","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/non_blocking/zlib.rs","byte_start":104050,"byte_end":104072,"line_start":43,"line_end":43,"column_start":5,"column_end":27}},{"value":"/ use libflate::non_blocking::zlib::Decoder;","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/non_blocking/zlib.rs","byte_start":104077,"byte_end":104123,"line_start":44,"line_end":44,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/non_blocking/zlib.rs","byte_start":104128,"byte_end":104131,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ let encoded_data = [120, 156, 243, 72, 205, 201, 201, 87, 8, 207, 47,","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/non_blocking/zlib.rs","byte_start":104136,"byte_end":104209,"line_start":46,"line_end":46,"column_start":5,"column_end":78}},{"value":"/                     202, 73, 81, 4, 0, 28, 73, 4, 62];","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/non_blocking/zlib.rs","byte_start":104214,"byte_end":104272,"line_start":47,"line_end":47,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/non_blocking/zlib.rs","byte_start":104277,"byte_end":104280,"line_start":48,"line_end":48,"column_start":5,"column_end":8}},{"value":"/ let mut decoder = Decoder::new(&encoded_data[..]);","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/non_blocking/zlib.rs","byte_start":104285,"byte_end":104339,"line_start":49,"line_end":49,"column_start":5,"column_end":59}},{"value":"/ let mut buf = Vec::new();","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/non_blocking/zlib.rs","byte_start":104344,"byte_end":104373,"line_start":50,"line_end":50,"column_start":5,"column_end":34}},{"value":"/ decoder.read_to_end(&mut buf).unwrap();","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/non_blocking/zlib.rs","byte_start":104378,"byte_end":104421,"line_start":51,"line_end":51,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/non_blocking/zlib.rs","byte_start":104426,"byte_end":104429,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(buf, b\"Hello World!\");","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/non_blocking/zlib.rs","byte_start":104434,"byte_end":104471,"line_start":53,"line_end":53,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/non_blocking/zlib.rs","byte_start":104476,"byte_end":104483,"line_start":54,"line_end":54,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":579},"span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/non_blocking/zlib.rs","byte_start":105236,"byte_end":105242,"line_start":78,"line_end":78,"column_start":12,"column_end":18},"name":"header","qualname":"<Decoder<R>>::header","value":"pub fn header(&mut Self) -> io::Result<&Header>","parent":null,"children":[],"decl_id":null,"docs":" Returns the header of the ZLIB stream.","sig":null,"attributes":[{"value":"/ Returns the header of the ZLIB stream.","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/non_blocking/zlib.rs","byte_start":104705,"byte_end":104747,"line_start":64,"line_end":64,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/non_blocking/zlib.rs","byte_start":104752,"byte_end":104755,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/non_blocking/zlib.rs","byte_start":104760,"byte_end":104774,"line_start":66,"line_end":66,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/non_blocking/zlib.rs","byte_start":104779,"byte_end":104786,"line_start":67,"line_end":67,"column_start":5,"column_end":12}},{"value":"/ use libflate::zlib::CompressionLevel;","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/non_blocking/zlib.rs","byte_start":104791,"byte_end":104832,"line_start":68,"line_end":68,"column_start":5,"column_end":46}},{"value":"/ use libflate::non_blocking::zlib::Decoder;","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/non_blocking/zlib.rs","byte_start":104837,"byte_end":104883,"line_start":69,"line_end":69,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/non_blocking/zlib.rs","byte_start":104888,"byte_end":104891,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ let encoded_data = [120, 156, 243, 72, 205, 201, 201, 87, 8, 207, 47,","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/non_blocking/zlib.rs","byte_start":104896,"byte_end":104969,"line_start":71,"line_end":71,"column_start":5,"column_end":78}},{"value":"/                     202, 73, 81, 4, 0, 28, 73, 4, 62];","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/non_blocking/zlib.rs","byte_start":104974,"byte_end":105032,"line_start":72,"line_end":72,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/non_blocking/zlib.rs","byte_start":105037,"byte_end":105040,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ let mut decoder = Decoder::new(&encoded_data[..]);","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/non_blocking/zlib.rs","byte_start":105045,"byte_end":105099,"line_start":74,"line_end":74,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(decoder.header().unwrap().compression_level(),","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/non_blocking/zlib.rs","byte_start":105104,"byte_end":105165,"line_start":75,"line_end":75,"column_start":5,"column_end":66}},{"value":"/            CompressionLevel::Default);","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/non_blocking/zlib.rs","byte_start":105170,"byte_end":105212,"line_start":76,"line_end":76,"column_start":5,"column_end":47}},{"value":"/ ```","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/non_blocking/zlib.rs","byte_start":105217,"byte_end":105224,"line_start":77,"line_end":77,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":581},"span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/non_blocking/zlib.rs","byte_start":105682,"byte_end":105694,"line_start":92,"line_end":92,"column_start":12,"column_end":24},"name":"as_inner_ref","qualname":"<Decoder<R>>::as_inner_ref","value":"pub fn as_inner_ref(&Self) -> &R","parent":null,"children":[],"decl_id":null,"docs":" Returns the immutable reference to the inner stream.\n","sig":null,"attributes":[{"value":"/ Returns the immutable reference to the inner stream.","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/non_blocking/zlib.rs","byte_start":105614,"byte_end":105670,"line_start":91,"line_end":91,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":582},"span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/non_blocking/zlib.rs","byte_start":105822,"byte_end":105834,"line_start":97,"line_end":97,"column_start":12,"column_end":24},"name":"as_inner_mut","qualname":"<Decoder<R>>::as_inner_mut","value":"pub fn as_inner_mut(&mut Self) -> &mut R","parent":null,"children":[],"decl_id":null,"docs":" Returns the mutable reference to the inner stream.\n","sig":null,"attributes":[{"value":"/ Returns the mutable reference to the inner stream.","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/non_blocking/zlib.rs","byte_start":105756,"byte_end":105810,"line_start":96,"line_end":96,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":583},"span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/non_blocking/zlib.rs","byte_start":106398,"byte_end":106408,"line_start":114,"line_end":114,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Decoder<R>>::into_inner","value":"pub fn into_inner(Self) -> R","parent":null,"children":[],"decl_id":null,"docs":" Unwraps this `Decoder`, returning the underlying reader.","sig":null,"attributes":[{"value":"/ Unwraps this `Decoder`, returning the underlying reader.","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/non_blocking/zlib.rs","byte_start":105904,"byte_end":105964,"line_start":101,"line_end":101,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/non_blocking/zlib.rs","byte_start":105969,"byte_end":105972,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/non_blocking/zlib.rs","byte_start":105977,"byte_end":105991,"line_start":103,"line_end":103,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/non_blocking/zlib.rs","byte_start":105996,"byte_end":106003,"line_start":104,"line_end":104,"column_start":5,"column_end":12}},{"value":"/ use std::io::Cursor;","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/non_blocking/zlib.rs","byte_start":106008,"byte_end":106032,"line_start":105,"line_end":105,"column_start":5,"column_end":29}},{"value":"/ use libflate::non_blocking::zlib::Decoder;","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/non_blocking/zlib.rs","byte_start":106037,"byte_end":106083,"line_start":106,"line_end":106,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/non_blocking/zlib.rs","byte_start":106088,"byte_end":106091,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ let encoded_data = [120, 156, 243, 72, 205, 201, 201, 87, 8, 207, 47,","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/non_blocking/zlib.rs","byte_start":106096,"byte_end":106169,"line_start":108,"line_end":108,"column_start":5,"column_end":78}},{"value":"/                     202, 73, 81, 4, 0, 28, 73, 4, 62];","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/non_blocking/zlib.rs","byte_start":106174,"byte_end":106232,"line_start":109,"line_end":109,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/non_blocking/zlib.rs","byte_start":106237,"byte_end":106240,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ let decoder = Decoder::new(Cursor::new(&encoded_data));","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/non_blocking/zlib.rs","byte_start":106245,"byte_end":106304,"line_start":111,"line_end":111,"column_start":5,"column_end":64}},{"value":"/ assert_eq!(decoder.into_inner().into_inner(), &encoded_data);","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/non_blocking/zlib.rs","byte_start":106309,"byte_end":106374,"line_start":112,"line_end":112,"column_start":5,"column_end":70}},{"value":"/ ```","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/non_blocking/zlib.rs","byte_start":106379,"byte_end":106386,"line_start":113,"line_end":113,"column_start":5,"column_end":12}}]},{"kind":"Mod","id":{"krate":0,"index":626},"span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"zlib","qualname":"::zlib","value":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","parent":null,"children":[{"krate":0,"index":627},{"krate":0,"index":630},{"krate":0,"index":633},{"krate":0,"index":634},{"krate":0,"index":637},{"krate":0,"index":640},{"krate":0,"index":643},{"krate":0,"index":646},{"krate":0,"index":1269},{"krate":0,"index":1282},{"krate":0,"index":1284},{"krate":0,"index":1286},{"krate":0,"index":1288},{"krate":0,"index":1290},{"krate":0,"index":1291},{"krate":0,"index":1293},{"krate":0,"index":1294},{"krate":0,"index":1296},{"krate":0,"index":647},{"krate":0,"index":650},{"krate":0,"index":1299},{"krate":0,"index":1324},{"krate":0,"index":1326},{"krate":0,"index":1328},{"krate":0,"index":1330},{"krate":0,"index":1332},{"krate":0,"index":1333},{"krate":0,"index":1335},{"krate":0,"index":1336},{"krate":0,"index":1338},{"krate":0,"index":652},{"krate":0,"index":1341},{"krate":0,"index":1348},{"krate":0,"index":1350},{"krate":0,"index":1352},{"krate":0,"index":1353},{"krate":0,"index":1354},{"krate":0,"index":1356},{"krate":0,"index":1357},{"krate":0,"index":1359},{"krate":0,"index":1362},{"krate":0,"index":1364},{"krate":0,"index":659},{"krate":0,"index":1366},{"krate":0,"index":1369},{"krate":0,"index":1371},{"krate":0,"index":1373},{"krate":0,"index":1374},{"krate":0,"index":1377},{"krate":0,"index":1378},{"krate":0,"index":1380},{"krate":0,"index":661},{"krate":0,"index":1383},{"krate":0,"index":1389},{"krate":0,"index":673},{"krate":0,"index":680},{"krate":0,"index":1392},{"krate":0,"index":1397},{"krate":0,"index":684},{"krate":0,"index":686},{"krate":0,"index":688},{"krate":0,"index":1400},{"krate":0,"index":1407},{"krate":0,"index":695},{"krate":0,"index":698},{"krate":0,"index":708},{"krate":0,"index":713}],"decl_id":null,"docs":" The encoder and decoder of the ZLIB format.","sig":null,"attributes":[{"value":"/ The encoder and decoder of the ZLIB format.","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","byte_start":114394,"byte_end":114441,"line_start":1,"line_end":1,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","byte_start":114442,"byte_end":114445,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ The ZLIB format is defined in [RFC-1950](https://tools.ietf.org/html/rfc1950).","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","byte_start":114446,"byte_end":114528,"line_start":3,"line_end":3,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","byte_start":114529,"byte_end":114532,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","byte_start":114533,"byte_end":114547,"line_start":5,"line_end":5,"column_start":1,"column_end":15}},{"value":"/ ```","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","byte_start":114548,"byte_end":114555,"line_start":6,"line_end":6,"column_start":1,"column_end":8}},{"value":"/ use std::io::{self, Read};","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","byte_start":114556,"byte_end":114586,"line_start":7,"line_end":7,"column_start":1,"column_end":31}},{"value":"/ use libflate::zlib::{Encoder, Decoder};","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","byte_start":114587,"byte_end":114630,"line_start":8,"line_end":8,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","byte_start":114631,"byte_end":114634,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ // Encoding","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","byte_start":114635,"byte_end":114650,"line_start":10,"line_end":10,"column_start":1,"column_end":16}},{"value":"/ let mut encoder = Encoder::new(Vec::new()).unwrap();","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","byte_start":114651,"byte_end":114707,"line_start":11,"line_end":11,"column_start":1,"column_end":57}},{"value":"/ io::copy(&mut &b\"Hello World!\"[..], &mut encoder).unwrap();","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","byte_start":114708,"byte_end":114771,"line_start":12,"line_end":12,"column_start":1,"column_end":64}},{"value":"/ let encoded_data = encoder.finish().into_result().unwrap();","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","byte_start":114772,"byte_end":114835,"line_start":13,"line_end":13,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","byte_start":114836,"byte_end":114839,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ // Decoding","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","byte_start":114840,"byte_end":114855,"line_start":15,"line_end":15,"column_start":1,"column_end":16}},{"value":"/ let mut decoder = Decoder::new(&encoded_data[..]).unwrap();","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","byte_start":114856,"byte_end":114919,"line_start":16,"line_end":16,"column_start":1,"column_end":64}},{"value":"/ let mut decoded_data = Vec::new();","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","byte_start":114920,"byte_end":114958,"line_start":17,"line_end":17,"column_start":1,"column_end":39}},{"value":"/ decoder.read_to_end(&mut decoded_data).unwrap();","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","byte_start":114959,"byte_end":115011,"line_start":18,"line_end":18,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","byte_start":115012,"byte_end":115015,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(decoded_data, b\"Hello World!\");","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","byte_start":115016,"byte_end":115062,"line_start":20,"line_end":20,"column_start":1,"column_end":47}},{"value":"/ ```","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","byte_start":115063,"byte_end":115070,"line_start":21,"line_end":21,"column_start":1,"column_end":8}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1270},"span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","byte_start":115413,"byte_end":115420,"line_start":34,"line_end":34,"column_start":5,"column_end":12},"name":"Fastest","qualname":"::zlib::CompressionLevel::Fastest","value":"CompressionLevel::Fastest","parent":{"krate":0,"index":1269},"children":[],"decl_id":null,"docs":" Compressor used fastest algorithm.\n","sig":null,"attributes":[{"value":"/ Compressor used fastest algorithm.","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","byte_start":115370,"byte_end":115408,"line_start":33,"line_end":33,"column_start":5,"column_end":43}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1273},"span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","byte_start":115471,"byte_end":115475,"line_start":37,"line_end":37,"column_start":5,"column_end":9},"name":"Fast","qualname":"::zlib::CompressionLevel::Fast","value":"CompressionLevel::Fast","parent":{"krate":0,"index":1269},"children":[],"decl_id":null,"docs":" Compressor used fast algorithm.\n","sig":null,"attributes":[{"value":"/ Compressor used fast algorithm.","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","byte_start":115431,"byte_end":115466,"line_start":36,"line_end":36,"column_start":5,"column_end":40}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1276},"span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","byte_start":115529,"byte_end":115536,"line_start":40,"line_end":40,"column_start":5,"column_end":12},"name":"Default","qualname":"::zlib::CompressionLevel::Default","value":"CompressionLevel::Default","parent":{"krate":0,"index":1269},"children":[],"decl_id":null,"docs":" Compressor used default algorithm.\n","sig":null,"attributes":[{"value":"/ Compressor used default algorithm.","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","byte_start":115486,"byte_end":115524,"line_start":39,"line_end":39,"column_start":5,"column_end":43}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1279},"span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","byte_start":115611,"byte_end":115618,"line_start":43,"line_end":43,"column_start":5,"column_end":12},"name":"Slowest","qualname":"::zlib::CompressionLevel::Slowest","value":"CompressionLevel::Slowest","parent":{"krate":0,"index":1269},"children":[],"decl_id":null,"docs":" Compressor used maximum compression, slowest algorithm.\n","sig":null,"attributes":[{"value":"/ Compressor used maximum compression, slowest algorithm.","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","byte_start":115547,"byte_end":115606,"line_start":42,"line_end":42,"column_start":5,"column_end":64}}]},{"kind":"Enum","id":{"krate":0,"index":1269},"span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","byte_start":115347,"byte_end":115363,"line_start":32,"line_end":32,"column_start":10,"column_end":26},"name":"CompressionLevel","qualname":"::zlib::CompressionLevel","value":"pub enum CompressionLevel { Fastest = , Fast = , Default = , Slowest = , }","parent":null,"children":[{"krate":0,"index":1270},{"krate":0,"index":1273},{"krate":0,"index":1276},{"krate":0,"index":1279}],"decl_id":null,"docs":" Compression levels defined by the ZLIB format.\n","sig":null,"attributes":[{"value":"/ Compression levels defined by the ZLIB format.","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","byte_start":115225,"byte_end":115275,"line_start":30,"line_end":30,"column_start":1,"column_end":51}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1300},"span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","byte_start":116707,"byte_end":116711,"line_start":76,"line_end":76,"column_start":5,"column_end":9},"name":"B256","qualname":"::zlib::Lz77WindowSize::B256","value":"Lz77WindowSize::B256","parent":{"krate":0,"index":1299},"children":[],"decl_id":null,"docs":" 256 bytes\n","sig":null,"attributes":[{"value":"/ 256 bytes","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","byte_start":116689,"byte_end":116702,"line_start":75,"line_end":75,"column_start":5,"column_end":18}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1303},"span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","byte_start":116740,"byte_end":116744,"line_start":79,"line_end":79,"column_start":5,"column_end":9},"name":"B512","qualname":"::zlib::Lz77WindowSize::B512","value":"Lz77WindowSize::B512","parent":{"krate":0,"index":1299},"children":[],"decl_id":null,"docs":" 512 btyes\n","sig":null,"attributes":[{"value":"/ 512 btyes","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","byte_start":116722,"byte_end":116735,"line_start":78,"line_end":78,"column_start":5,"column_end":18}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1306},"span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","byte_start":116774,"byte_end":116777,"line_start":82,"line_end":82,"column_start":5,"column_end":8},"name":"KB1","qualname":"::zlib::Lz77WindowSize::KB1","value":"Lz77WindowSize::KB1","parent":{"krate":0,"index":1299},"children":[],"decl_id":null,"docs":" 1 kilobyte\n","sig":null,"attributes":[{"value":"/ 1 kilobyte","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","byte_start":116755,"byte_end":116769,"line_start":81,"line_end":81,"column_start":5,"column_end":19}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1309},"span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","byte_start":116808,"byte_end":116811,"line_start":85,"line_end":85,"column_start":5,"column_end":8},"name":"KB2","qualname":"::zlib::Lz77WindowSize::KB2","value":"Lz77WindowSize::KB2","parent":{"krate":0,"index":1299},"children":[],"decl_id":null,"docs":" 2 kilobytes\n","sig":null,"attributes":[{"value":"/ 2 kilobytes","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","byte_start":116788,"byte_end":116803,"line_start":84,"line_end":84,"column_start":5,"column_end":20}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1312},"span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","byte_start":116842,"byte_end":116845,"line_start":88,"line_end":88,"column_start":5,"column_end":8},"name":"KB4","qualname":"::zlib::Lz77WindowSize::KB4","value":"Lz77WindowSize::KB4","parent":{"krate":0,"index":1299},"children":[],"decl_id":null,"docs":" 4 kitobytes\n","sig":null,"attributes":[{"value":"/ 4 kitobytes","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","byte_start":116822,"byte_end":116837,"line_start":87,"line_end":87,"column_start":5,"column_end":20}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1315},"span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","byte_start":116876,"byte_end":116879,"line_start":91,"line_end":91,"column_start":5,"column_end":8},"name":"KB8","qualname":"::zlib::Lz77WindowSize::KB8","value":"Lz77WindowSize::KB8","parent":{"krate":0,"index":1299},"children":[],"decl_id":null,"docs":" 8 kitobytes\n","sig":null,"attributes":[{"value":"/ 8 kitobytes","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","byte_start":116856,"byte_end":116871,"line_start":90,"line_end":90,"column_start":5,"column_end":20}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1318},"span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","byte_start":116911,"byte_end":116915,"line_start":94,"line_end":94,"column_start":5,"column_end":9},"name":"KB16","qualname":"::zlib::Lz77WindowSize::KB16","value":"Lz77WindowSize::KB16","parent":{"krate":0,"index":1299},"children":[],"decl_id":null,"docs":" 16 kitobytes\n","sig":null,"attributes":[{"value":"/ 16 kitobytes","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","byte_start":116890,"byte_end":116906,"line_start":93,"line_end":93,"column_start":5,"column_end":21}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1321},"span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","byte_start":116947,"byte_end":116951,"line_start":97,"line_end":97,"column_start":5,"column_end":9},"name":"KB32","qualname":"::zlib::Lz77WindowSize::KB32","value":"Lz77WindowSize::KB32","parent":{"krate":0,"index":1299},"children":[],"decl_id":null,"docs":" 32 kitobytes\n","sig":null,"attributes":[{"value":"/ 32 kitobytes","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","byte_start":116926,"byte_end":116942,"line_start":96,"line_end":96,"column_start":5,"column_end":21}}]},{"kind":"Enum","id":{"krate":0,"index":1299},"span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","byte_start":116668,"byte_end":116682,"line_start":74,"line_end":74,"column_start":10,"column_end":24},"name":"Lz77WindowSize","qualname":"::zlib::Lz77WindowSize","value":"pub enum Lz77WindowSize {\n    B256 = ,\n    B512 = ,\n    KB1 = ,\n    KB2 = ,\n    KB4 = ,\n    KB8 = ,\n    KB16 = ,\n    KB32 = ,\n}","parent":null,"children":[{"krate":0,"index":1300},{"krate":0,"index":1303},{"krate":0,"index":1306},{"krate":0,"index":1309},{"krate":0,"index":1312},{"krate":0,"index":1315},{"krate":0,"index":1318},{"krate":0,"index":1321}],"decl_id":null,"docs":" LZ77 Window sizes defined by the ZLIB format.\n","sig":null,"attributes":[{"value":"/ LZ77 Window sizes defined by the ZLIB format.","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","byte_start":116420,"byte_end":116469,"line_start":70,"line_end":70,"column_start":1,"column_end":50}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","byte_start":116637,"byte_end":116658,"line_start":73,"line_end":73,"column_start":1,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":655},"span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","byte_start":118154,"byte_end":118162,"line_start":132,"line_end":132,"column_start":12,"column_end":20},"name":"from_u16","qualname":"<Lz77WindowSize>::from_u16","value":"pub fn from_u16(u16) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Converts from `u16` to Lz77WindowSize`.","sig":null,"attributes":[{"value":"/ Converts from `u16` to Lz77WindowSize`.","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","byte_start":117530,"byte_end":117573,"line_start":117,"line_end":117,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","byte_start":117578,"byte_end":117581,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ Fractions are rounded to next upper window size.","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","byte_start":117586,"byte_end":117638,"line_start":119,"line_end":119,"column_start":5,"column_end":57}},{"value":"/ If `size` exceeds maximum window size,","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","byte_start":117643,"byte_end":117685,"line_start":120,"line_end":120,"column_start":5,"column_end":47}},{"value":"/ `lz77::MAX_WINDOW_SIZE` will be used instead.","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","byte_start":117690,"byte_end":117739,"line_start":121,"line_end":121,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","byte_start":117744,"byte_end":117747,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","byte_start":117752,"byte_end":117766,"line_start":123,"line_end":123,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","byte_start":117771,"byte_end":117778,"line_start":124,"line_end":124,"column_start":5,"column_end":12}},{"value":"/ use libflate::zlib::Lz77WindowSize;","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","byte_start":117783,"byte_end":117822,"line_start":125,"line_end":125,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","byte_start":117827,"byte_end":117830,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Lz77WindowSize::from_u16(15000), Lz77WindowSize::KB16);","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","byte_start":117835,"byte_end":117905,"line_start":127,"line_end":127,"column_start":5,"column_end":75}},{"value":"/ assert_eq!(Lz77WindowSize::from_u16(16384), Lz77WindowSize::KB16);","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","byte_start":117910,"byte_end":117980,"line_start":128,"line_end":128,"column_start":5,"column_end":75}},{"value":"/ assert_eq!(Lz77WindowSize::from_u16(16385), Lz77WindowSize::KB32);","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","byte_start":117985,"byte_end":118055,"line_start":129,"line_end":129,"column_start":5,"column_end":75}},{"value":"/ assert_eq!(Lz77WindowSize::from_u16(40000), Lz77WindowSize::KB32);","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","byte_start":118060,"byte_end":118130,"line_start":130,"line_end":130,"column_start":5,"column_end":75}},{"value":"/ ```","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","byte_start":118135,"byte_end":118142,"line_start":131,"line_end":131,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":657},"span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","byte_start":118828,"byte_end":118834,"line_start":161,"line_end":161,"column_start":12,"column_end":18},"name":"to_u16","qualname":"<Lz77WindowSize>::to_u16","value":"pub fn to_u16(&Self) -> u16","parent":null,"children":[],"decl_id":null,"docs":" Converts from `Lz77WindowSize` to `u16`.","sig":null,"attributes":[{"value":"/ Converts from `Lz77WindowSize` to `u16`.","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","byte_start":118608,"byte_end":118652,"line_start":153,"line_end":153,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","byte_start":118657,"byte_end":118660,"line_start":154,"line_end":154,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","byte_start":118665,"byte_end":118679,"line_start":155,"line_end":155,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","byte_start":118684,"byte_end":118691,"line_start":156,"line_end":156,"column_start":5,"column_end":12}},{"value":"/ use libflate::zlib::Lz77WindowSize;","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","byte_start":118696,"byte_end":118735,"line_start":157,"line_end":157,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","byte_start":118740,"byte_end":118743,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Lz77WindowSize::KB16.to_u16(), 16384u16);","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","byte_start":118748,"byte_end":118804,"line_start":159,"line_end":159,"column_start":5,"column_end":61}},{"value":"/ ```","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","byte_start":118809,"byte_end":118816,"line_start":160,"line_end":160,"column_start":5,"column_end":12}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1342},"span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","byte_start":119723,"byte_end":119727,"line_start":190,"line_end":190,"column_start":5,"column_end":9},"name":"None","qualname":"::zlib::FlushMode::None","value":"FlushMode::None","parent":{"krate":0,"index":1341},"children":[],"decl_id":null,"docs":" `Z_NO_FLUSH` (default).","sig":null,"attributes":[{"value":"/ `Z_NO_FLUSH` (default).","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","byte_start":119518,"byte_end":119545,"line_start":186,"line_end":186,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","byte_start":119550,"byte_end":119553,"line_start":187,"line_end":187,"column_start":5,"column_end":8}},{"value":"/ Note that when this parameter is specified,","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","byte_start":119558,"byte_end":119605,"line_start":188,"line_end":188,"column_start":5,"column_end":52}},{"value":"/ no `zlib` specific processing will not be executed but ordinal DEFLATE layer flushing will be performed.","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","byte_start":119610,"byte_end":119718,"line_start":189,"line_end":189,"column_start":5,"column_end":113}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1345},"span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","byte_start":119762,"byte_end":119766,"line_start":193,"line_end":193,"column_start":5,"column_end":9},"name":"Sync","qualname":"::zlib::FlushMode::Sync","value":"FlushMode::Sync","parent":{"krate":0,"index":1341},"children":[],"decl_id":null,"docs":" `Z_SYNC_FLUSH`.\n","sig":null,"attributes":[{"value":"/ `Z_SYNC_FLUSH`.","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","byte_start":119738,"byte_end":119757,"line_start":192,"line_end":192,"column_start":5,"column_end":24}}]},{"kind":"Enum","id":{"krate":0,"index":1341},"span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","byte_start":119502,"byte_end":119511,"line_start":185,"line_end":185,"column_start":10,"column_end":19},"name":"FlushMode","qualname":"::zlib::FlushMode","value":"pub enum FlushMode { None = , Sync = , }","parent":null,"children":[{"krate":0,"index":1342},{"krate":0,"index":1345}],"decl_id":null,"docs":" [zlib] library specific parameter for defining behavior when `Write::flush` method is called.","sig":null,"attributes":[{"value":"/ [zlib] library specific parameter for defining behavior when `Write::flush` method is called.","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","byte_start":119135,"byte_end":119232,"line_start":176,"line_end":176,"column_start":1,"column_end":98}},{"value":"/","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","byte_start":119233,"byte_end":119236,"line_start":177,"line_end":177,"column_start":1,"column_end":4}},{"value":"/ # References","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","byte_start":119237,"byte_end":119253,"line_start":178,"line_end":178,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","byte_start":119254,"byte_end":119257,"line_start":179,"line_end":179,"column_start":1,"column_end":4}},{"value":"/ - [Zlib Manual](https://www.zlib.net/manual.html)","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","byte_start":119258,"byte_end":119311,"line_start":180,"line_end":180,"column_start":1,"column_end":54}},{"value":"/ - [Zlib Flush Modes](https://www.bolet.org/~pornin/deflate-flush.html)","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","byte_start":119312,"byte_end":119386,"line_start":181,"line_end":181,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","byte_start":119387,"byte_end":119390,"line_start":182,"line_end":182,"column_start":1,"column_end":4}},{"value":"/ [zlib]: https://www.zlib.net/","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","byte_start":119391,"byte_end":119424,"line_start":183,"line_end":183,"column_start":1,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":1366},"span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","byte_start":119936,"byte_end":119942,"line_start":203,"line_end":203,"column_start":12,"column_end":18},"name":"Header","qualname":"::zlib::Header","value":"Header {  }","parent":null,"children":[{"krate":0,"index":1367},{"krate":0,"index":1368}],"decl_id":null,"docs":" ZLIB header.\n","sig":null,"attributes":[{"value":"/ ZLIB header.","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","byte_start":119863,"byte_end":119879,"line_start":201,"line_end":201,"column_start":1,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":662},"span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","byte_start":120105,"byte_end":120116,"line_start":209,"line_end":209,"column_start":12,"column_end":23},"name":"window_size","qualname":"<Header>::window_size","value":"pub fn window_size(&Self) -> Lz77WindowSize","parent":null,"children":[],"decl_id":null,"docs":" Returns the LZ77 window size stored in the header.\n","sig":null,"attributes":[{"value":"/ Returns the LZ77 window size stored in the header.","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","byte_start":120039,"byte_end":120093,"line_start":208,"line_end":208,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":663},"span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","byte_start":120254,"byte_end":120271,"line_start":213,"line_end":213,"column_start":12,"column_end":29},"name":"compression_level","qualname":"<Header>::compression_level","value":"pub fn compression_level(&Self) -> CompressionLevel","parent":null,"children":[],"decl_id":null,"docs":" Returns the compression level stored in the header.\n","sig":null,"attributes":[{"value":"/ Returns the compression level stored in the header.","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","byte_start":120187,"byte_end":120242,"line_start":212,"line_end":212,"column_start":5,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":1383},"span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","byte_start":122742,"byte_end":122749,"line_start":289,"line_end":289,"column_start":12,"column_end":19},"name":"Decoder","qualname":"::zlib::Decoder","value":"Decoder {  }","parent":null,"children":[{"krate":0,"index":1385},{"krate":0,"index":1386},{"krate":0,"index":1387},{"krate":0,"index":1388}],"decl_id":null,"docs":" ZLIB decoder.\n","sig":null,"attributes":[{"value":"/ ZLIB decoder.","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","byte_start":122696,"byte_end":122713,"line_start":287,"line_end":287,"column_start":1,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":675},"span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","byte_start":123476,"byte_end":123479,"line_start":317,"line_end":317,"column_start":12,"column_end":15},"name":"new","qualname":"<Decoder<R>>::new","value":"pub fn new(R) -> io::Result<Self>","parent":null,"children":[],"decl_id":null,"docs":" Makes a new decoder instance.","sig":null,"attributes":[{"value":"/ Makes a new decoder instance.","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","byte_start":122905,"byte_end":122938,"line_start":299,"line_end":299,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","byte_start":122943,"byte_end":122946,"line_start":300,"line_end":300,"column_start":5,"column_end":8}},{"value":"/ `inner` is to be decoded ZLIB stream.","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","byte_start":122951,"byte_end":122992,"line_start":301,"line_end":301,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","byte_start":122997,"byte_end":123000,"line_start":302,"line_end":302,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","byte_start":123005,"byte_end":123019,"line_start":303,"line_end":303,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","byte_start":123024,"byte_end":123031,"line_start":304,"line_end":304,"column_start":5,"column_end":12}},{"value":"/ use std::io::Read;","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","byte_start":123036,"byte_end":123058,"line_start":305,"line_end":305,"column_start":5,"column_end":27}},{"value":"/ use libflate::zlib::Decoder;","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","byte_start":123063,"byte_end":123095,"line_start":306,"line_end":306,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","byte_start":123100,"byte_end":123103,"line_start":307,"line_end":307,"column_start":5,"column_end":8}},{"value":"/ let encoded_data = [120, 156, 243, 72, 205, 201, 201, 87, 8, 207, 47,","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","byte_start":123108,"byte_end":123181,"line_start":308,"line_end":308,"column_start":5,"column_end":78}},{"value":"/                     202, 73, 81, 4, 0, 28, 73, 4, 62];","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","byte_start":123186,"byte_end":123244,"line_start":309,"line_end":309,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","byte_start":123249,"byte_end":123252,"line_start":310,"line_end":310,"column_start":5,"column_end":8}},{"value":"/ let mut decoder = Decoder::new(&encoded_data[..]).unwrap();","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","byte_start":123257,"byte_end":123320,"line_start":311,"line_end":311,"column_start":5,"column_end":68}},{"value":"/ let mut buf = Vec::new();","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","byte_start":123325,"byte_end":123354,"line_start":312,"line_end":312,"column_start":5,"column_end":34}},{"value":"/ decoder.read_to_end(&mut buf).unwrap();","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","byte_start":123359,"byte_end":123402,"line_start":313,"line_end":313,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","byte_start":123407,"byte_end":123410,"line_start":314,"line_end":314,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(buf, b\"Hello World!\");","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","byte_start":123415,"byte_end":123452,"line_start":315,"line_end":315,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","byte_start":123457,"byte_end":123464,"line_start":316,"line_end":316,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":676},"span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","byte_start":124240,"byte_end":124246,"line_start":340,"line_end":340,"column_start":12,"column_end":18},"name":"header","qualname":"<Decoder<R>>::header","value":"pub fn header(&Self) -> &Header","parent":null,"children":[],"decl_id":null,"docs":" Returns the header of the ZLIB stream.","sig":null,"attributes":[{"value":"/ Returns the header of the ZLIB stream.","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","byte_start":123753,"byte_end":123795,"line_start":327,"line_end":327,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","byte_start":123800,"byte_end":123803,"line_start":328,"line_end":328,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","byte_start":123808,"byte_end":123822,"line_start":329,"line_end":329,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","byte_start":123827,"byte_end":123834,"line_start":330,"line_end":330,"column_start":5,"column_end":12}},{"value":"/ use libflate::zlib::{Decoder, CompressionLevel};","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","byte_start":123839,"byte_end":123891,"line_start":331,"line_end":331,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","byte_start":123896,"byte_end":123899,"line_start":332,"line_end":332,"column_start":5,"column_end":8}},{"value":"/ let encoded_data = [120, 156, 243, 72, 205, 201, 201, 87, 8, 207, 47,","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","byte_start":123904,"byte_end":123977,"line_start":333,"line_end":333,"column_start":5,"column_end":78}},{"value":"/                     202, 73, 81, 4, 0, 28, 73, 4, 62];","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","byte_start":123982,"byte_end":124040,"line_start":334,"line_end":334,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","byte_start":124045,"byte_end":124048,"line_start":335,"line_end":335,"column_start":5,"column_end":8}},{"value":"/ let decoder = Decoder::new(&encoded_data[..]).unwrap();","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","byte_start":124053,"byte_end":124112,"line_start":336,"line_end":336,"column_start":5,"column_end":64}},{"value":"/ assert_eq!(decoder.header().compression_level(),","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","byte_start":124117,"byte_end":124169,"line_start":337,"line_end":337,"column_start":5,"column_end":57}},{"value":"/            CompressionLevel::Default);","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","byte_start":124174,"byte_end":124216,"line_start":338,"line_end":338,"column_start":5,"column_end":47}},{"value":"/ ```","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","byte_start":124221,"byte_end":124228,"line_start":339,"line_end":339,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":677},"span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","byte_start":124367,"byte_end":124379,"line_start":345,"line_end":345,"column_start":12,"column_end":24},"name":"as_inner_ref","qualname":"<Decoder<R>>::as_inner_ref","value":"pub fn as_inner_ref(&Self) -> &R","parent":null,"children":[],"decl_id":null,"docs":" Returns the immutable reference to the inner stream.\n","sig":null,"attributes":[{"value":"/ Returns the immutable reference to the inner stream.","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","byte_start":124299,"byte_end":124355,"line_start":344,"line_end":344,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":678},"span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","byte_start":124507,"byte_end":124519,"line_start":350,"line_end":350,"column_start":12,"column_end":24},"name":"as_inner_mut","qualname":"<Decoder<R>>::as_inner_mut","value":"pub fn as_inner_mut(&mut Self) -> &mut R","parent":null,"children":[],"decl_id":null,"docs":" Returns the mutable reference to the inner stream.\n","sig":null,"attributes":[{"value":"/ Returns the mutable reference to the inner stream.","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","byte_start":124441,"byte_end":124495,"line_start":349,"line_end":349,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":679},"span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","byte_start":125078,"byte_end":125088,"line_start":367,"line_end":367,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Decoder<R>>::into_inner","value":"pub fn into_inner(Self) -> R","parent":null,"children":[],"decl_id":null,"docs":" Unwraps this `Decoder`, returning the underlying reader.","sig":null,"attributes":[{"value":"/ Unwraps this `Decoder`, returning the underlying reader.","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","byte_start":124589,"byte_end":124649,"line_start":354,"line_end":354,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","byte_start":124654,"byte_end":124657,"line_start":355,"line_end":355,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","byte_start":124662,"byte_end":124676,"line_start":356,"line_end":356,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","byte_start":124681,"byte_end":124688,"line_start":357,"line_end":357,"column_start":5,"column_end":12}},{"value":"/ use std::io::Cursor;","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","byte_start":124693,"byte_end":124717,"line_start":358,"line_end":358,"column_start":5,"column_end":29}},{"value":"/ use libflate::zlib::Decoder;","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","byte_start":124722,"byte_end":124754,"line_start":359,"line_end":359,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","byte_start":124759,"byte_end":124762,"line_start":360,"line_end":360,"column_start":5,"column_end":8}},{"value":"/ let encoded_data = [120, 156, 243, 72, 205, 201, 201, 87, 8, 207, 47,","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","byte_start":124767,"byte_end":124840,"line_start":361,"line_end":361,"column_start":5,"column_end":78}},{"value":"/                     202, 73, 81, 4, 0, 28, 73, 4, 62];","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","byte_start":124845,"byte_end":124903,"line_start":362,"line_end":362,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","byte_start":124908,"byte_end":124911,"line_start":363,"line_end":363,"column_start":5,"column_end":8}},{"value":"/ let decoder = Decoder::new(Cursor::new(&encoded_data)).unwrap();","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","byte_start":124916,"byte_end":124984,"line_start":364,"line_end":364,"column_start":5,"column_end":73}},{"value":"/ assert_eq!(decoder.into_inner().into_inner(), &encoded_data);","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","byte_start":124989,"byte_end":125054,"line_start":365,"line_end":365,"column_start":5,"column_end":70}},{"value":"/ ```","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","byte_start":125059,"byte_end":125066,"line_start":366,"line_end":366,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":1392},"span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","byte_start":126497,"byte_end":126510,"line_start":412,"line_end":412,"column_start":12,"column_end":25},"name":"EncodeOptions","qualname":"::zlib::EncodeOptions","value":"EncodeOptions {  }","parent":null,"children":[{"krate":0,"index":1394},{"krate":0,"index":1395},{"krate":0,"index":1396}],"decl_id":null,"docs":" Options for a ZLIB encoder.\n","sig":null,"attributes":[{"value":"/ Options for a ZLIB encoder.","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","byte_start":126437,"byte_end":126468,"line_start":410,"line_end":410,"column_start":1,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":687},"span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","byte_start":127243,"byte_end":127246,"line_start":439,"line_end":439,"column_start":12,"column_end":15},"name":"new","qualname":"<EncodeOptions<lz77::DefaultLz77Encoder>>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Makes a default instance.","sig":null,"attributes":[{"value":"/ Makes a default instance.","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","byte_start":126970,"byte_end":126999,"line_start":430,"line_end":430,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","byte_start":127004,"byte_end":127007,"line_start":431,"line_end":431,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","byte_start":127012,"byte_end":127026,"line_start":432,"line_end":432,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","byte_start":127031,"byte_end":127038,"line_start":433,"line_end":433,"column_start":5,"column_end":12}},{"value":"/ use libflate::zlib::{Encoder, EncodeOptions};","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","byte_start":127043,"byte_end":127092,"line_start":434,"line_end":434,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","byte_start":127097,"byte_end":127100,"line_start":435,"line_end":435,"column_start":5,"column_end":8}},{"value":"/ let options = EncodeOptions::new();","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","byte_start":127105,"byte_end":127144,"line_start":436,"line_end":436,"column_start":5,"column_end":44}},{"value":"/ let encoder = Encoder::with_options(Vec::new(), options).unwrap();","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","byte_start":127149,"byte_end":127219,"line_start":437,"line_end":437,"column_start":5,"column_end":75}},{"value":"/ ```","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","byte_start":127224,"byte_end":127231,"line_start":438,"line_end":438,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":690},"span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","byte_start":127734,"byte_end":127743,"line_start":457,"line_end":457,"column_start":12,"column_end":21},"name":"with_lz77","qualname":"<EncodeOptions<E>>::with_lz77","value":"pub fn with_lz77(E) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Specifies the LZ77 encoder used to compress input data.","sig":null,"attributes":[{"value":"/ Specifies the LZ77 encoder used to compress input data.","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","byte_start":127353,"byte_end":127412,"line_start":447,"line_end":447,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","byte_start":127417,"byte_end":127420,"line_start":448,"line_end":448,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","byte_start":127425,"byte_end":127438,"line_start":449,"line_end":449,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","byte_start":127443,"byte_end":127450,"line_start":450,"line_end":450,"column_start":5,"column_end":12}},{"value":"/ use libflate::lz77::DefaultLz77Encoder;","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","byte_start":127455,"byte_end":127498,"line_start":451,"line_end":451,"column_start":5,"column_end":48}},{"value":"/ use libflate::zlib::{Encoder, EncodeOptions};","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","byte_start":127503,"byte_end":127552,"line_start":452,"line_end":452,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","byte_start":127557,"byte_end":127560,"line_start":453,"line_end":453,"column_start":5,"column_end":8}},{"value":"/ let options = EncodeOptions::with_lz77(DefaultLz77Encoder::new());","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","byte_start":127565,"byte_end":127635,"line_start":454,"line_end":454,"column_start":5,"column_end":75}},{"value":"/ let encoder = Encoder::with_options(Vec::new(), options).unwrap();","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","byte_start":127640,"byte_end":127710,"line_start":455,"line_end":455,"column_start":5,"column_end":75}},{"value":"/ ```","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","byte_start":127715,"byte_end":127722,"line_start":456,"line_end":456,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":691},"span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","byte_start":128295,"byte_end":128309,"line_start":475,"line_end":475,"column_start":12,"column_end":26},"name":"no_compression","qualname":"<EncodeOptions<E>>::no_compression","value":"pub fn no_compression(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Disables LZ77 compression.","sig":null,"attributes":[{"value":"/ Disables LZ77 compression.","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","byte_start":127957,"byte_end":127987,"line_start":465,"line_end":465,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","byte_start":127992,"byte_end":127995,"line_start":466,"line_end":466,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","byte_start":128000,"byte_end":128013,"line_start":467,"line_end":467,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","byte_start":128018,"byte_end":128025,"line_start":468,"line_end":468,"column_start":5,"column_end":12}},{"value":"/ use libflate::lz77::DefaultLz77Encoder;","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","byte_start":128030,"byte_end":128073,"line_start":469,"line_end":469,"column_start":5,"column_end":48}},{"value":"/ use libflate::zlib::{Encoder, EncodeOptions};","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","byte_start":128078,"byte_end":128127,"line_start":470,"line_end":470,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","byte_start":128132,"byte_end":128135,"line_start":471,"line_end":471,"column_start":5,"column_end":8}},{"value":"/ let options = EncodeOptions::new().no_compression();","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","byte_start":128140,"byte_end":128196,"line_start":472,"line_end":472,"column_start":5,"column_end":61}},{"value":"/ let encoder = Encoder::with_options(Vec::new(), options).unwrap();","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","byte_start":128201,"byte_end":128271,"line_start":473,"line_end":473,"column_start":5,"column_end":75}},{"value":"/ ```","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","byte_start":128276,"byte_end":128283,"line_start":474,"line_end":474,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":692},"span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","byte_start":128863,"byte_end":128873,"line_start":492,"line_end":492,"column_start":12,"column_end":22},"name":"block_size","qualname":"<EncodeOptions<E>>::block_size","value":"pub fn block_size(Self, usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Specifies the hint of the size of a DEFLATE block.","sig":null,"attributes":[{"value":"/ Specifies the hint of the size of a DEFLATE block.","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","byte_start":128475,"byte_end":128529,"line_start":481,"line_end":481,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","byte_start":128534,"byte_end":128537,"line_start":482,"line_end":482,"column_start":5,"column_end":8}},{"value":"/ The default value is `deflate::DEFAULT_BLOCK_SIZE`.","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","byte_start":128542,"byte_end":128597,"line_start":483,"line_end":483,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","byte_start":128602,"byte_end":128605,"line_start":484,"line_end":484,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","byte_start":128610,"byte_end":128623,"line_start":485,"line_end":485,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","byte_start":128628,"byte_end":128635,"line_start":486,"line_end":486,"column_start":5,"column_end":12}},{"value":"/ use libflate::zlib::{Encoder, EncodeOptions};","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","byte_start":128640,"byte_end":128689,"line_start":487,"line_end":487,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","byte_start":128694,"byte_end":128697,"line_start":488,"line_end":488,"column_start":5,"column_end":8}},{"value":"/ let options = EncodeOptions::new().block_size(512 * 1024);","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","byte_start":128702,"byte_end":128764,"line_start":489,"line_end":489,"column_start":5,"column_end":67}},{"value":"/ let encoder = Encoder::with_options(Vec::new(), options).unwrap();","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","byte_start":128769,"byte_end":128839,"line_start":490,"line_end":490,"column_start":5,"column_end":75}},{"value":"/ ```","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","byte_start":128844,"byte_end":128851,"line_start":491,"line_end":491,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":693},"span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","byte_start":129301,"byte_end":129320,"line_start":506,"line_end":506,"column_start":12,"column_end":31},"name":"fixed_huffman_codes","qualname":"<EncodeOptions<E>>::fixed_huffman_codes","value":"pub fn fixed_huffman_codes(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Specifies to compress with fixed huffman codes.","sig":null,"attributes":[{"value":"/ Specifies to compress with fixed huffman codes.","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","byte_start":128985,"byte_end":129036,"line_start":497,"line_end":497,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","byte_start":129041,"byte_end":129044,"line_start":498,"line_end":498,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","byte_start":129049,"byte_end":129062,"line_start":499,"line_end":499,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","byte_start":129067,"byte_end":129074,"line_start":500,"line_end":500,"column_start":5,"column_end":12}},{"value":"/ use libflate::zlib::{Encoder, EncodeOptions};","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","byte_start":129079,"byte_end":129128,"line_start":501,"line_end":501,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","byte_start":129133,"byte_end":129136,"line_start":502,"line_end":502,"column_start":5,"column_end":8}},{"value":"/ let options = EncodeOptions::new().fixed_huffman_codes();","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","byte_start":129141,"byte_end":129202,"line_start":503,"line_end":503,"column_start":5,"column_end":66}},{"value":"/ let encoder = Encoder::with_options(Vec::new(), options).unwrap();","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","byte_start":129207,"byte_end":129277,"line_start":504,"line_end":504,"column_start":5,"column_end":75}},{"value":"/ ```","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","byte_start":129282,"byte_end":129289,"line_start":505,"line_end":505,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":694},"span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","byte_start":129461,"byte_end":129471,"line_start":512,"line_end":512,"column_start":12,"column_end":22},"name":"flush_mode","qualname":"<EncodeOptions<E>>::flush_mode","value":"pub fn flush_mode(Self, FlushMode) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Specifies flush mode.\n","sig":null,"attributes":[{"value":"/ Specifies flush mode.","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","byte_start":129424,"byte_end":129449,"line_start":511,"line_end":511,"column_start":5,"column_end":30}}]},{"kind":"Struct","id":{"krate":0,"index":1400},"span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","byte_start":129609,"byte_end":129616,"line_start":520,"line_end":520,"column_start":12,"column_end":19},"name":"Encoder","qualname":"::zlib::Encoder","value":"Encoder {  }","parent":null,"children":[{"krate":0,"index":1403},{"krate":0,"index":1404},{"krate":0,"index":1405},{"krate":0,"index":1406}],"decl_id":null,"docs":" ZLIB encoder.\n","sig":null,"attributes":[{"value":"/ ZLIB encoder.","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","byte_start":129563,"byte_end":129580,"line_start":518,"line_end":518,"column_start":1,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":697},"span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","byte_start":130439,"byte_end":130442,"line_start":546,"line_end":546,"column_start":12,"column_end":15},"name":"new","qualname":"<Encoder<W, lz77::DefaultLz77Encoder>>::new","value":"pub fn new(W) -> io::Result<Self>","parent":null,"children":[],"decl_id":null,"docs":" Makes a new encoder instance.","sig":null,"attributes":[{"value":"/ Makes a new encoder instance.","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","byte_start":129844,"byte_end":129877,"line_start":530,"line_end":530,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","byte_start":129882,"byte_end":129885,"line_start":531,"line_end":531,"column_start":5,"column_end":8}},{"value":"/ Encoded ZLIB stream is written to `inner`.","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","byte_start":129890,"byte_end":129936,"line_start":532,"line_end":532,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","byte_start":129941,"byte_end":129944,"line_start":533,"line_end":533,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","byte_start":129949,"byte_end":129963,"line_start":534,"line_end":534,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","byte_start":129968,"byte_end":129975,"line_start":535,"line_end":535,"column_start":5,"column_end":12}},{"value":"/ use std::io::Write;","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","byte_start":129980,"byte_end":130003,"line_start":536,"line_end":536,"column_start":5,"column_end":28}},{"value":"/ use libflate::zlib::Encoder;","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","byte_start":130008,"byte_end":130040,"line_start":537,"line_end":537,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","byte_start":130045,"byte_end":130048,"line_start":538,"line_end":538,"column_start":5,"column_end":8}},{"value":"/ let mut encoder = Encoder::new(Vec::new()).unwrap();","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","byte_start":130053,"byte_end":130109,"line_start":539,"line_end":539,"column_start":5,"column_end":61}},{"value":"/ encoder.write_all(b\"Hello World!\").unwrap();","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","byte_start":130114,"byte_end":130162,"line_start":540,"line_end":540,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","byte_start":130167,"byte_end":130170,"line_start":541,"line_end":541,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(encoder.finish().into_result().unwrap(),","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","byte_start":130175,"byte_end":130230,"line_start":542,"line_end":542,"column_start":5,"column_end":60}},{"value":"/            vec![120, 156, 5, 192, 49, 13, 0, 0, 8, 3, 65, 43, 224, 6, 7, 24, 128,","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","byte_start":130235,"byte_end":130320,"line_start":543,"line_end":543,"column_start":5,"column_end":90}},{"value":"/                 237, 147, 38, 245, 63, 244, 230, 65, 181, 50, 215, 1, 28, 73, 4, 62]);","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","byte_start":130325,"byte_end":130415,"line_start":544,"line_end":544,"column_start":5,"column_end":95}},{"value":"/ ```","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","byte_start":130420,"byte_end":130427,"line_start":545,"line_end":545,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":701},"span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","byte_start":131293,"byte_end":131305,"line_start":572,"line_end":572,"column_start":12,"column_end":24},"name":"with_options","qualname":"<Encoder<W, E>>::with_options","value":"pub fn with_options(W, EncodeOptions<E>) -> io::Result<Self>","parent":null,"children":[],"decl_id":null,"docs":" Makes a new encoder instance with specified options.","sig":null,"attributes":[{"value":"/ Makes a new encoder instance with specified options.","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","byte_start":130623,"byte_end":130679,"line_start":555,"line_end":555,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","byte_start":130684,"byte_end":130687,"line_start":556,"line_end":556,"column_start":5,"column_end":8}},{"value":"/ Encoded ZLIB stream is written to `inner`.","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","byte_start":130692,"byte_end":130738,"line_start":557,"line_end":557,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","byte_start":130743,"byte_end":130746,"line_start":558,"line_end":558,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","byte_start":130751,"byte_end":130765,"line_start":559,"line_end":559,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","byte_start":130770,"byte_end":130777,"line_start":560,"line_end":560,"column_start":5,"column_end":12}},{"value":"/ use std::io::Write;","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","byte_start":130782,"byte_end":130805,"line_start":561,"line_end":561,"column_start":5,"column_end":28}},{"value":"/ use libflate::zlib::{Encoder, EncodeOptions};","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","byte_start":130810,"byte_end":130859,"line_start":562,"line_end":562,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","byte_start":130864,"byte_end":130867,"line_start":563,"line_end":563,"column_start":5,"column_end":8}},{"value":"/ let options = EncodeOptions::new().no_compression();","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","byte_start":130872,"byte_end":130928,"line_start":564,"line_end":564,"column_start":5,"column_end":61}},{"value":"/ let mut encoder = Encoder::with_options(Vec::new(), options).unwrap();","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","byte_start":130933,"byte_end":131007,"line_start":565,"line_end":565,"column_start":5,"column_end":79}},{"value":"/ encoder.write_all(b\"Hello World!\").unwrap();","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","byte_start":131012,"byte_end":131060,"line_start":566,"line_end":566,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","byte_start":131065,"byte_end":131068,"line_start":567,"line_end":567,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(encoder.finish().into_result().unwrap(),","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","byte_start":131073,"byte_end":131128,"line_start":568,"line_end":568,"column_start":5,"column_end":60}},{"value":"/            [120, 1, 1, 12, 0, 243, 255, 72, 101, 108, 108, 111, 32, 87, 111,","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","byte_start":131133,"byte_end":131213,"line_start":569,"line_end":569,"column_start":5,"column_end":85}},{"value":"/             114, 108, 100, 33, 28, 73, 4, 62]);","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","byte_start":131218,"byte_end":131269,"line_start":570,"line_end":570,"column_start":5,"column_end":56}},{"value":"/ ```","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","byte_start":131274,"byte_end":131281,"line_start":571,"line_end":571,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":702},"span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","byte_start":131960,"byte_end":131966,"line_start":591,"line_end":591,"column_start":12,"column_end":18},"name":"header","qualname":"<Encoder<W, E>>::header","value":"pub fn header(&Self) -> &Header","parent":null,"children":[],"decl_id":null,"docs":" Returns the header of the ZLIB stream.","sig":null,"attributes":[{"value":"/ Returns the header of the ZLIB stream.","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","byte_start":131661,"byte_end":131703,"line_start":582,"line_end":582,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","byte_start":131708,"byte_end":131711,"line_start":583,"line_end":583,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","byte_start":131716,"byte_end":131730,"line_start":584,"line_end":584,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","byte_start":131735,"byte_end":131742,"line_start":585,"line_end":585,"column_start":5,"column_end":12}},{"value":"/ use libflate::zlib::{Encoder, Lz77WindowSize};","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","byte_start":131747,"byte_end":131797,"line_start":586,"line_end":586,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","byte_start":131802,"byte_end":131805,"line_start":587,"line_end":587,"column_start":5,"column_end":8}},{"value":"/ let encoder = Encoder::new(Vec::new()).unwrap();","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","byte_start":131810,"byte_end":131862,"line_start":588,"line_end":588,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(encoder.header().window_size(), Lz77WindowSize::KB32);","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","byte_start":131867,"byte_end":131936,"line_start":589,"line_end":589,"column_start":5,"column_end":74}},{"value":"/ ```","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","byte_start":131941,"byte_end":131948,"line_start":590,"line_end":590,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":703},"span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","byte_start":133144,"byte_end":133150,"line_start":625,"line_end":625,"column_start":12,"column_end":18},"name":"finish","qualname":"<Encoder<W, E>>::finish","value":"pub fn finish(Self) -> Finish<W, io::Error>","parent":null,"children":[],"decl_id":null,"docs":" Writes the ZLIB trailer and returns the inner stream.","sig":null,"attributes":[{"value":"/ Writes the ZLIB trailer and returns the inner stream.","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","byte_start":132019,"byte_end":132076,"line_start":595,"line_end":595,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","byte_start":132081,"byte_end":132084,"line_start":596,"line_end":596,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","byte_start":132089,"byte_end":132103,"line_start":597,"line_end":597,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","byte_start":132108,"byte_end":132115,"line_start":598,"line_end":598,"column_start":5,"column_end":12}},{"value":"/ use std::io::Write;","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","byte_start":132120,"byte_end":132143,"line_start":599,"line_end":599,"column_start":5,"column_end":28}},{"value":"/ use libflate::zlib::Encoder;","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","byte_start":132148,"byte_end":132180,"line_start":600,"line_end":600,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","byte_start":132185,"byte_end":132188,"line_start":601,"line_end":601,"column_start":5,"column_end":8}},{"value":"/ let mut encoder = Encoder::new(Vec::new()).unwrap();","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","byte_start":132193,"byte_end":132249,"line_start":602,"line_end":602,"column_start":5,"column_end":61}},{"value":"/ encoder.write_all(b\"Hello World!\").unwrap();","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","byte_start":132254,"byte_end":132302,"line_start":603,"line_end":603,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","byte_start":132307,"byte_end":132310,"line_start":604,"line_end":604,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(encoder.finish().into_result().unwrap(),","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","byte_start":132315,"byte_end":132370,"line_start":605,"line_end":605,"column_start":5,"column_end":60}},{"value":"/            vec![120, 156, 5, 192, 49, 13, 0, 0, 8, 3, 65, 43, 224, 6, 7, 24, 128,","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","byte_start":132375,"byte_end":132460,"line_start":606,"line_end":606,"column_start":5,"column_end":90}},{"value":"/                 237, 147, 38, 245, 63, 244, 230, 65, 181, 50, 215, 1, 28, 73, 4, 62]);","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","byte_start":132465,"byte_end":132555,"line_start":607,"line_end":607,"column_start":5,"column_end":95}},{"value":"/ ```","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","byte_start":132560,"byte_end":132567,"line_start":608,"line_end":608,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","byte_start":132572,"byte_end":132575,"line_start":609,"line_end":609,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","byte_start":132580,"byte_end":132590,"line_start":610,"line_end":610,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","byte_start":132595,"byte_end":132598,"line_start":611,"line_end":611,"column_start":5,"column_end":8}},{"value":"/ If you are not concerned the result of this encoding,","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","byte_start":132603,"byte_end":132660,"line_start":612,"line_end":612,"column_start":5,"column_end":62}},{"value":"/ it may be convenient to use `AutoFinishUnchecked` instead of the explicit invocation of this method.","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","byte_start":132665,"byte_end":132769,"line_start":613,"line_end":613,"column_start":5,"column_end":109}},{"value":"/","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","byte_start":132774,"byte_end":132777,"line_start":614,"line_end":614,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","byte_start":132782,"byte_end":132789,"line_start":615,"line_end":615,"column_start":5,"column_end":12}},{"value":"/ use std::io;","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","byte_start":132794,"byte_end":132810,"line_start":616,"line_end":616,"column_start":5,"column_end":21}},{"value":"/ use libflate::finish::AutoFinishUnchecked;","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","byte_start":132815,"byte_end":132861,"line_start":617,"line_end":617,"column_start":5,"column_end":51}},{"value":"/ use libflate::zlib::Encoder;","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","byte_start":132866,"byte_end":132898,"line_start":618,"line_end":618,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","byte_start":132903,"byte_end":132906,"line_start":619,"line_end":619,"column_start":5,"column_end":8}},{"value":"/ let plain = b\"Hello World!\";","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","byte_start":132911,"byte_end":132943,"line_start":620,"line_end":620,"column_start":5,"column_end":37}},{"value":"/ let mut buf = Vec::new();","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","byte_start":132948,"byte_end":132977,"line_start":621,"line_end":621,"column_start":5,"column_end":34}},{"value":"/ let mut encoder = AutoFinishUnchecked::new(Encoder::new(&mut buf).unwrap());","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","byte_start":132982,"byte_end":133062,"line_start":622,"line_end":622,"column_start":5,"column_end":85}},{"value":"/ io::copy(&mut &plain[..], &mut encoder).unwrap();","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","byte_start":133067,"byte_end":133120,"line_start":623,"line_end":623,"column_start":5,"column_end":58}},{"value":"/ ```","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","byte_start":133125,"byte_end":133132,"line_start":624,"line_end":624,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":705},"span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","byte_start":133560,"byte_end":133572,"line_start":637,"line_end":637,"column_start":12,"column_end":24},"name":"as_inner_ref","qualname":"<Encoder<W, E>>::as_inner_ref","value":"pub fn as_inner_ref(&Self) -> &W","parent":null,"children":[],"decl_id":null,"docs":" Returns the immutable reference to the inner stream.\n","sig":null,"attributes":[{"value":"/ Returns the immutable reference to the inner stream.","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","byte_start":133492,"byte_end":133548,"line_start":636,"line_end":636,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":706},"span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","byte_start":133700,"byte_end":133712,"line_start":642,"line_end":642,"column_start":12,"column_end":24},"name":"as_inner_mut","qualname":"<Encoder<W, E>>::as_inner_mut","value":"pub fn as_inner_mut(&mut Self) -> &mut W","parent":null,"children":[],"decl_id":null,"docs":" Returns the mutable reference to the inner stream.\n","sig":null,"attributes":[{"value":"/ Returns the mutable reference to the inner stream.","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","byte_start":133634,"byte_end":133688,"line_start":641,"line_end":641,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":707},"span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","byte_start":133848,"byte_end":133858,"line_start":647,"line_end":647,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Encoder<W, E>>::into_inner","value":"pub fn into_inner(Self) -> W","parent":null,"children":[],"decl_id":null,"docs":" Unwraps the `Encoder`, returning the inner stream.\n","sig":null,"attributes":[{"value":"/ Unwraps the `Encoder`, returning the inner stream.","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","byte_start":133782,"byte_end":133836,"line_start":646,"line_end":646,"column_start":5,"column_end":59}}]},{"kind":"Type","id":{"krate":0,"index":796},"span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/huffman.rs","byte_start":150008,"byte_end":150016,"line_start":31,"line_end":31,"column_start":10,"column_end":18},"name":"Instance","qualname":"::huffman::Builder::Instance","value":"type Instance;","parent":{"krate":0,"index":795},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/deflate/decode.rs","byte_start":2619,"byte_end":2626,"line_start":14,"line_end":14,"column_start":9,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":39},{"krate":0,"index":40},{"krate":0,"index":41},{"krate":0,"index":42},{"krate":0,"index":43},{"krate":0,"index":44},{"krate":0,"index":47}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/deflate/decode.rs","byte_start":6093,"byte_end":6100,"line_start":124,"line_end":124,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":51}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/deflate/encode.rs","byte_start":9867,"byte_end":9880,"line_start":21,"line_end":21,"column_start":18,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":81}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/deflate/encode.rs","byte_start":9969,"byte_end":9982,"line_start":26,"line_end":26,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":83}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/deflate/encode.rs","byte_start":10484,"byte_end":10497,"line_start":44,"line_end":44,"column_start":9,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":86},{"krate":0,"index":87},{"krate":0,"index":88},{"krate":0,"index":89},{"krate":0,"index":90},{"krate":0,"index":91}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Inherent","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/deflate/encode.rs","byte_start":12992,"byte_end":12999,"line_start":135,"line_end":135,"column_start":9,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":94}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/deflate/encode.rs","byte_start":13720,"byte_end":13727,"line_start":159,"line_end":159,"column_start":12,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":98},{"krate":0,"index":99},{"krate":0,"index":100},{"krate":0,"index":101},{"krate":0,"index":102},{"krate":0,"index":103}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/deflate/encode.rs","byte_start":16201,"byte_end":16208,"line_start":235,"line_end":235,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":107},{"krate":0,"index":108}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/deflate/encode.rs","byte_start":16574,"byte_end":16581,"line_start":249,"line_end":249,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":112}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Inherent","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/deflate/encode.rs","byte_start":16861,"byte_end":16866,"line_start":265,"line_end":265,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":116},{"krate":0,"index":117},{"krate":0,"index":119},{"krate":0,"index":121}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Inherent","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/deflate/encode.rs","byte_start":18107,"byte_end":18115,"line_start":311,"line_end":311,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":125},{"krate":0,"index":126},{"krate":0,"index":127},{"krate":0,"index":128}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Inherent","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/deflate/encode.rs","byte_start":19391,"byte_end":19397,"line_start":356,"line_end":356,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":131},{"krate":0,"index":132},{"krate":0,"index":133},{"krate":0,"index":134}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Inherent","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/deflate/encode.rs","byte_start":20281,"byte_end":20292,"line_start":391,"line_end":391,"column_start":12,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":139},{"krate":0,"index":140},{"krate":0,"index":141},{"krate":0,"index":142}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Inherent","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/deflate/symbol.rs","byte_start":24453,"byte_end":24459,"line_start":95,"line_end":95,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":180},{"krate":0,"index":181},{"krate":0,"index":182}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/deflate/symbol.rs","byte_start":26637,"byte_end":26643,"line_start":157,"line_end":157,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":184}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Inherent","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/deflate/symbol.rs","byte_start":26830,"byte_end":26837,"line_start":168,"line_end":168,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":186}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Inherent","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/deflate/symbol.rs","byte_start":27495,"byte_end":27502,"line_start":192,"line_end":192,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":189},{"krate":0,"index":191},{"krate":0,"index":193}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/deflate/symbol.rs","byte_start":29661,"byte_end":29678,"line_start":256,"line_end":256,"column_start":23,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":202},{"krate":0,"index":204},{"krate":0,"index":206}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/deflate/symbol.rs","byte_start":31758,"byte_end":31777,"line_start":318,"line_end":318,"column_start":23,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":210},{"krate":0,"index":213},{"krate":0,"index":218}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Inherent","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/finish.rs","byte_start":39893,"byte_end":39899,"line_start":14,"line_end":14,"column_start":12,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":249},{"krate":0,"index":250},{"krate":0,"index":251},{"krate":0,"index":252}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Inherent","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/finish.rs","byte_start":42421,"byte_end":42431,"line_start":101,"line_end":101,"column_start":19,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":255},{"krate":0,"index":256}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/finish.rs","byte_start":43137,"byte_end":43147,"line_start":125,"line_end":125,"column_start":28,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":259}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/finish.rs","byte_start":43367,"byte_end":43377,"line_start":134,"line_end":134,"column_start":29,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":262},{"krate":0,"index":263}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/finish.rs","byte_start":43532,"byte_end":43542,"line_start":140,"line_end":140,"column_start":32,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":266}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/finish.rs","byte_start":43693,"byte_end":43703,"line_start":145,"line_end":145,"column_start":37,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":269},{"krate":0,"index":270}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Inherent","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/finish.rs","byte_start":44246,"byte_end":44265,"line_start":163,"line_end":163,"column_start":19,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":273},{"krate":0,"index":274}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/finish.rs","byte_start":45016,"byte_end":45035,"line_start":187,"line_end":187,"column_start":28,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":277}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/finish.rs","byte_start":45199,"byte_end":45218,"line_start":194,"line_end":194,"column_start":29,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":280},{"krate":0,"index":281}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/finish.rs","byte_start":45373,"byte_end":45392,"line_start":200,"line_end":200,"column_start":32,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":284}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/finish.rs","byte_start":45543,"byte_end":45562,"line_start":205,"line_end":205,"column_start":37,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":287},{"krate":0,"index":288}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Inherent","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":47697,"byte_end":47713,"line_start":65,"line_end":65,"column_start":6,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":342},{"krate":0,"index":343}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":48152,"byte_end":48168,"line_start":81,"line_end":81,"column_start":39,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":345}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Inherent","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":48539,"byte_end":48546,"line_start":96,"line_end":96,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":347},{"krate":0,"index":348},{"krate":0,"index":351}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Inherent","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":49289,"byte_end":49302,"line_start":126,"line_end":126,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":354},{"krate":0,"index":356},{"krate":0,"index":357},{"krate":0,"index":358},{"krate":0,"index":359},{"krate":0,"index":360},{"krate":0,"index":361},{"krate":0,"index":362},{"krate":0,"index":363}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":53649,"byte_end":53662,"line_start":271,"line_end":271,"column_start":18,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":365}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Inherent","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":54010,"byte_end":54016,"line_start":289,"line_end":289,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":367},{"krate":0,"index":368},{"krate":0,"index":369},{"krate":0,"index":370},{"krate":0,"index":371},{"krate":0,"index":372},{"krate":0,"index":373},{"krate":0,"index":374},{"krate":0,"index":375},{"krate":0,"index":378},{"krate":0,"index":379},{"krate":0,"index":381}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Inherent","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":59157,"byte_end":59167,"line_start":457,"line_end":457,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":389},{"krate":0,"index":392}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Inherent","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":60322,"byte_end":60335,"line_start":497,"line_end":497,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":396},{"krate":0,"index":400},{"krate":0,"index":402}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Inherent","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":61783,"byte_end":61785,"line_start":581,"line_end":581,"column_start":6,"column_end":8},"value":"","parent":null,"children":[{"krate":0,"index":404},{"krate":0,"index":405}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":63276,"byte_end":63289,"line_start":633,"line_end":633,"column_start":18,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":407}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Inherent","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":63484,"byte_end":63497,"line_start":641,"line_end":641,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":409}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Inherent","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":63859,"byte_end":63872,"line_start":655,"line_end":655,"column_start":9,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":412},{"krate":0,"index":413},{"krate":0,"index":414},{"krate":0,"index":415},{"krate":0,"index":416}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Inherent","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":66751,"byte_end":66758,"line_start":747,"line_end":747,"column_start":9,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":426}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Inherent","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":67320,"byte_end":67327,"line_start":768,"line_end":768,"column_start":12,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":430},{"krate":0,"index":431},{"krate":0,"index":432},{"krate":0,"index":434},{"krate":0,"index":435},{"krate":0,"index":436}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":70685,"byte_end":70692,"line_start":869,"line_end":869,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":440},{"krate":0,"index":441}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":71122,"byte_end":71129,"line_start":884,"line_end":884,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":445}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Inherent","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":71451,"byte_end":71458,"line_start":902,"line_end":902,"column_start":9,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":449},{"krate":0,"index":450},{"krate":0,"index":451},{"krate":0,"index":452},{"krate":0,"index":453},{"krate":0,"index":454},{"krate":0,"index":455}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":74226,"byte_end":74233,"line_start":991,"line_end":991,"column_start":22,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":458}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Inherent","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":75562,"byte_end":75574,"line_start":1033,"line_end":1033,"column_start":9,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":461},{"krate":0,"index":462},{"krate":0,"index":463},{"krate":0,"index":464},{"krate":0,"index":465}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":78431,"byte_end":78443,"line_start":1115,"line_end":1115,"column_start":22,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":468}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Inherent","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/non_blocking/deflate/decode.rs","byte_start":86818,"byte_end":86825,"line_start":16,"line_end":16,"column_start":15,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":501},{"krate":0,"index":502},{"krate":0,"index":503},{"krate":0,"index":504},{"krate":0,"index":505}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/non_blocking/deflate/decode.rs","byte_start":88553,"byte_end":88560,"line_start":71,"line_end":71,"column_start":24,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":508}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Inherent","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/non_blocking/deflate/decode.rs","byte_start":92807,"byte_end":92819,"line_start":177,"line_end":177,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":515},{"krate":0,"index":516},{"krate":0,"index":517},{"krate":0,"index":519},{"krate":0,"index":520}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/non_blocking/deflate/decode.rs","byte_start":94337,"byte_end":94349,"line_start":229,"line_end":229,"column_start":15,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":525}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Inherent","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/non_blocking/gzip.rs","byte_start":97836,"byte_end":97843,"line_start":36,"line_end":36,"column_start":15,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":549},{"krate":0,"index":550},{"krate":0,"index":552},{"krate":0,"index":553},{"krate":0,"index":554}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/non_blocking/gzip.rs","byte_start":100614,"byte_end":100621,"line_start":120,"line_end":120,"column_start":24,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":557}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Inherent","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/non_blocking/zlib.rs","byte_start":103902,"byte_end":103909,"line_start":36,"line_end":36,"column_start":15,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":578},{"krate":0,"index":579},{"krate":0,"index":581},{"krate":0,"index":582},{"krate":0,"index":583}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/non_blocking/zlib.rs","byte_start":106486,"byte_end":106493,"line_start":118,"line_end":118,"column_start":24,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":586}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Inherent","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/non_blocking/transaction.rs","byte_start":111577,"byte_end":111599,"line_start":10,"line_end":10,"column_start":15,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":605},{"krate":0,"index":606},{"krate":0,"index":609},{"krate":0,"index":610},{"krate":0,"index":611}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Inherent","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/non_blocking/transaction.rs","byte_start":112671,"byte_end":112693,"line_start":45,"line_end":45,"column_start":9,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":614},{"krate":0,"index":615},{"krate":0,"index":616}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Inherent","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/non_blocking/transaction.rs","byte_start":113108,"byte_end":113127,"line_start":64,"line_end":64,"column_start":9,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":619},{"krate":0,"index":620},{"krate":0,"index":621},{"krate":0,"index":622}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/non_blocking/transaction.rs","byte_start":113763,"byte_end":113782,"line_start":90,"line_end":90,"column_start":24,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":625}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Inherent","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","byte_start":115631,"byte_end":115647,"line_start":45,"line_end":45,"column_start":6,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":648},{"krate":0,"index":649}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","byte_start":116031,"byte_end":116047,"line_start":59,"line_end":59,"column_start":39,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":651}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Inherent","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","byte_start":116964,"byte_end":116978,"line_start":99,"line_end":99,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":653},{"krate":0,"index":654},{"krate":0,"index":655},{"krate":0,"index":657}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","byte_start":119791,"byte_end":119800,"line_start":195,"line_end":195,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":660}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Inherent","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","byte_start":120026,"byte_end":120032,"line_start":207,"line_end":207,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":662},{"krate":0,"index":663},{"krate":0,"index":664},{"krate":0,"index":666},{"krate":0,"index":671}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Inherent","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","byte_start":122865,"byte_end":122872,"line_start":295,"line_end":295,"column_start":9,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":675},{"krate":0,"index":676},{"krate":0,"index":677},{"krate":0,"index":678},{"krate":0,"index":679}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","byte_start":125164,"byte_end":125171,"line_start":371,"line_end":371,"column_start":22,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":682}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","byte_start":126653,"byte_end":126666,"line_start":420,"line_end":420,"column_start":18,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":685}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Inherent","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","byte_start":126924,"byte_end":126937,"line_start":429,"line_end":429,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":687}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Inherent","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","byte_start":127299,"byte_end":127312,"line_start":443,"line_end":443,"column_start":9,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":690},{"krate":0,"index":691},{"krate":0,"index":692},{"krate":0,"index":693},{"krate":0,"index":694}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Inherent","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","byte_start":129777,"byte_end":129784,"line_start":526,"line_end":526,"column_start":9,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":697}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Inherent","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","byte_start":130554,"byte_end":130561,"line_start":550,"line_end":550,"column_start":12,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":701},{"krate":0,"index":702},{"krate":0,"index":703},{"krate":0,"index":705},{"krate":0,"index":706},{"krate":0,"index":707}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","byte_start":133938,"byte_end":133945,"line_start":651,"line_end":651,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":711},{"krate":0,"index":712}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","byte_start":134428,"byte_end":134435,"line_start":668,"line_end":668,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":716}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Inherent","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/bit.rs","byte_start":142660,"byte_end":142669,"line_start":9,"line_end":9,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":724},{"krate":0,"index":725},{"krate":0,"index":726},{"krate":0,"index":727},{"krate":0,"index":728}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Inherent","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/bit.rs","byte_start":143804,"byte_end":143813,"line_start":51,"line_end":51,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":731},{"krate":0,"index":732},{"krate":0,"index":733}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Inherent","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/bit.rs","byte_start":144162,"byte_end":144171,"line_start":70,"line_end":70,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":736},{"krate":0,"index":737},{"krate":0,"index":738},{"krate":0,"index":739},{"krate":0,"index":741},{"krate":0,"index":743},{"krate":0,"index":744},{"krate":0,"index":745},{"krate":0,"index":746},{"krate":0,"index":748},{"krate":0,"index":749}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Inherent","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/bit.rs","byte_start":146623,"byte_end":146632,"line_start":155,"line_end":155,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":752},{"krate":0,"index":753},{"krate":0,"index":754},{"krate":0,"index":755}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Inherent","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/checksum.rs","byte_start":148249,"byte_end":148256,"line_start":5,"line_end":5,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":767},{"krate":0,"index":768},{"krate":0,"index":769}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/checksum.rs","byte_start":148498,"byte_end":148505,"line_start":16,"line_end":16,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":771}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Inherent","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/checksum.rs","byte_start":148650,"byte_end":148655,"line_start":23,"line_end":23,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":776},{"krate":0,"index":777},{"krate":0,"index":778}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/checksum.rs","byte_start":148903,"byte_end":148908,"line_start":34,"line_end":34,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":780}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Inherent","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/huffman.rs","byte_start":149593,"byte_end":149597,"line_start":13,"line_end":13,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":793},{"krate":0,"index":794}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Inherent","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/huffman.rs","byte_start":151032,"byte_end":151046,"line_start":63,"line_end":63,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":809},{"krate":0,"index":810},{"krate":0,"index":811}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/huffman.rs","byte_start":151935,"byte_end":151949,"line_start":93,"line_end":93,"column_start":18,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":813},{"krate":0,"index":814},{"krate":0,"index":815}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Inherent","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/huffman.rs","byte_start":153428,"byte_end":153435,"line_start":137,"line_end":137,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":817},{"krate":0,"index":818},{"krate":0,"index":820}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Inherent","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/huffman.rs","byte_start":154636,"byte_end":154650,"line_start":182,"line_end":182,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":823},{"krate":0,"index":824},{"krate":0,"index":827}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/huffman.rs","byte_start":155597,"byte_end":155611,"line_start":208,"line_end":208,"column_start":18,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":829},{"krate":0,"index":830},{"krate":0,"index":831}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Inherent","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/huffman.rs","byte_start":156033,"byte_end":156040,"line_start":224,"line_end":224,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":833},{"krate":0,"index":835},{"krate":0,"index":836}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Inherent","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/huffman.rs","byte_start":157725,"byte_end":157729,"line_start":281,"line_end":281,"column_start":10,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":854},{"krate":0,"index":855},{"krate":0,"index":856}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/lib.rs","byte_start":568,"byte_end":575,"line_start":21,"line_end":21,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":8}},{"kind":"Mod","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/lib.rs","byte_start":585,"byte_end":591,"line_start":22,"line_end":22,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":231}},{"kind":"Mod","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/lib.rs","byte_start":601,"byte_end":605,"line_start":23,"line_end":23,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":291}},{"kind":"Mod","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/lib.rs","byte_start":615,"byte_end":619,"line_start":24,"line_end":24,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":469}},{"kind":"Mod","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/lib.rs","byte_start":629,"byte_end":641,"line_start":25,"line_end":25,"column_start":9,"column_end":21},"ref_id":{"krate":0,"index":471}},{"kind":"Mod","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/non_blocking/mod.rs","byte_start":85613,"byte_end":85620,"line_start":17,"line_end":17,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":472}},{"kind":"Mod","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/non_blocking/mod.rs","byte_start":85630,"byte_end":85634,"line_start":18,"line_end":18,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":526}},{"kind":"Mod","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/non_blocking/mod.rs","byte_start":85644,"byte_end":85648,"line_start":19,"line_end":19,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":559}},{"kind":"Mod","span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/lib.rs","byte_start":651,"byte_end":655,"line_start":26,"line_end":26,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":626}}],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/deflate/decode.rs","byte_start":2619,"byte_end":2626,"line_start":14,"line_end":14,"column_start":9,"column_end":16},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":868},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/deflate/decode.rs","byte_start":6093,"byte_end":6100,"line_start":124,"line_end":124,"column_start":18,"column_end":25},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":868},"to":{"krate":1,"index":4311}},{"span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/deflate/encode.rs","byte_start":9867,"byte_end":9880,"line_start":21,"line_end":21,"column_start":18,"column_end":31},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":876},"to":{"krate":2,"index":2858}},{"span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/deflate/encode.rs","byte_start":9969,"byte_end":9982,"line_start":26,"line_end":26,"column_start":6,"column_end":19},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":876},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/deflate/encode.rs","byte_start":10484,"byte_end":10497,"line_start":44,"line_end":44,"column_start":9,"column_end":22},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":876},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/deflate/encode.rs","byte_start":12992,"byte_end":12999,"line_start":135,"line_end":135,"column_start":9,"column_end":16},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":902},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/deflate/encode.rs","byte_start":13720,"byte_end":13727,"line_start":159,"line_end":159,"column_start":12,"column_end":19},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":902},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/deflate/encode.rs","byte_start":16201,"byte_end":16208,"line_start":235,"line_end":235,"column_start":26,"column_end":33},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":902},"to":{"krate":1,"index":4372}},{"span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/deflate/encode.rs","byte_start":16574,"byte_end":16581,"line_start":249,"line_end":249,"column_start":25,"column_end":32},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":902},"to":{"krate":0,"index":289}},{"span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/deflate/encode.rs","byte_start":16861,"byte_end":16866,"line_start":265,"line_end":265,"column_start":9,"column_end":14},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":911},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/deflate/encode.rs","byte_start":18107,"byte_end":18115,"line_start":311,"line_end":311,"column_start":9,"column_end":17},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":919},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/deflate/encode.rs","byte_start":19391,"byte_end":19397,"line_start":356,"line_end":356,"column_start":6,"column_end":12},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":933},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/deflate/encode.rs","byte_start":20281,"byte_end":20292,"line_start":391,"line_end":391,"column_start":12,"column_end":23},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":937},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/deflate/symbol.rs","byte_start":24453,"byte_end":24459,"line_start":95,"line_end":95,"column_start":6,"column_end":12},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":948},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/deflate/symbol.rs","byte_start":26637,"byte_end":26643,"line_start":157,"line_end":157,"column_start":27,"column_end":33},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":948},"to":{"krate":2,"index":2786}},{"span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/deflate/symbol.rs","byte_start":26830,"byte_end":26837,"line_start":168,"line_end":168,"column_start":6,"column_end":13},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":963},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/deflate/symbol.rs","byte_start":27495,"byte_end":27502,"line_start":192,"line_end":192,"column_start":6,"column_end":13},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":968},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/deflate/symbol.rs","byte_start":29661,"byte_end":29678,"line_start":256,"line_end":256,"column_start":23,"column_end":40},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":973},"to":{"krate":0,"index":195}},{"span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/deflate/symbol.rs","byte_start":31758,"byte_end":31777,"line_start":318,"line_end":318,"column_start":23,"column_end":42},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":977},"to":{"krate":0,"index":195}},{"span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/finish.rs","byte_start":39893,"byte_end":39899,"line_start":14,"line_end":14,"column_start":12,"column_end":18},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":996},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/finish.rs","byte_start":42421,"byte_end":42431,"line_start":101,"line_end":101,"column_start":19,"column_end":29},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":1041},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/finish.rs","byte_start":43137,"byte_end":43147,"line_start":125,"line_end":125,"column_start":28,"column_end":38},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":1041},"to":{"krate":2,"index":3115}},{"span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/finish.rs","byte_start":43367,"byte_end":43377,"line_start":134,"line_end":134,"column_start":29,"column_end":39},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":1041},"to":{"krate":2,"index":3091}},{"span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/finish.rs","byte_start":43532,"byte_end":43542,"line_start":140,"line_end":140,"column_start":32,"column_end":42},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":1041},"to":{"krate":2,"index":3104}},{"span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/finish.rs","byte_start":43693,"byte_end":43703,"line_start":145,"line_end":145,"column_start":37,"column_end":47},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":1041},"to":{"krate":1,"index":4372}},{"span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/finish.rs","byte_start":44246,"byte_end":44265,"line_start":163,"line_end":163,"column_start":19,"column_end":38},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":1047},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/finish.rs","byte_start":45016,"byte_end":45035,"line_start":187,"line_end":187,"column_start":28,"column_end":47},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":1047},"to":{"krate":2,"index":3115}},{"span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/finish.rs","byte_start":45199,"byte_end":45218,"line_start":194,"line_end":194,"column_start":29,"column_end":48},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":1047},"to":{"krate":2,"index":3091}},{"span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/finish.rs","byte_start":45373,"byte_end":45392,"line_start":200,"line_end":200,"column_start":32,"column_end":51},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":1047},"to":{"krate":2,"index":3104}},{"span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/finish.rs","byte_start":45543,"byte_end":45562,"line_start":205,"line_end":205,"column_start":37,"column_end":56},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":1047},"to":{"krate":1,"index":4372}},{"span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":47697,"byte_end":47713,"line_start":65,"line_end":65,"column_start":6,"column_end":22},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":1053},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":48152,"byte_end":48168,"line_start":81,"line_end":81,"column_start":39,"column_end":55},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":1053},"to":{"krate":2,"index":2786}},{"span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":48539,"byte_end":48546,"line_start":96,"line_end":96,"column_start":6,"column_end":13},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":1073},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":49289,"byte_end":49302,"line_start":126,"line_end":126,"column_start":6,"column_end":19},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":1080},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":53649,"byte_end":53662,"line_start":271,"line_end":271,"column_start":18,"column_end":31},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":1080},"to":{"krate":2,"index":2858}},{"span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":54010,"byte_end":54016,"line_start":289,"line_end":289,"column_start":6,"column_end":12},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":1086},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":59157,"byte_end":59167,"line_start":457,"line_end":457,"column_start":6,"column_end":16},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":1099},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":60322,"byte_end":60335,"line_start":497,"line_end":497,"column_start":6,"column_end":19},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":1115},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":61783,"byte_end":61785,"line_start":581,"line_end":581,"column_start":6,"column_end":8},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":1134},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":63276,"byte_end":63289,"line_start":633,"line_end":633,"column_start":18,"column_end":31},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":1182},"to":{"krate":2,"index":2858}},{"span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":63484,"byte_end":63497,"line_start":641,"line_end":641,"column_start":6,"column_end":19},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":1182},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":63859,"byte_end":63872,"line_start":655,"line_end":655,"column_start":9,"column_end":22},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":1182},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":66751,"byte_end":66758,"line_start":747,"line_end":747,"column_start":9,"column_end":16},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":417},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":67320,"byte_end":67327,"line_start":768,"line_end":768,"column_start":12,"column_end":19},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":417},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":70685,"byte_end":70692,"line_start":869,"line_end":869,"column_start":26,"column_end":33},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":417},"to":{"krate":1,"index":4372}},{"span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":71122,"byte_end":71129,"line_start":884,"line_end":884,"column_start":25,"column_end":32},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":417},"to":{"krate":0,"index":289}},{"span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":71451,"byte_end":71458,"line_start":902,"line_end":902,"column_start":9,"column_end":16},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":1189},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":74226,"byte_end":74233,"line_start":991,"line_end":991,"column_start":22,"column_end":29},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":1189},"to":{"krate":1,"index":4311}},{"span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":75562,"byte_end":75574,"line_start":1033,"line_end":1033,"column_start":9,"column_end":21},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":1198},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/gzip.rs","byte_start":78431,"byte_end":78443,"line_start":1115,"line_end":1115,"column_start":22,"column_end":34},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":1198},"to":{"krate":1,"index":4311}},{"span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/non_blocking/deflate/decode.rs","byte_start":86818,"byte_end":86825,"line_start":16,"line_end":16,"column_start":15,"column_end":22},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":1205},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/non_blocking/deflate/decode.rs","byte_start":88553,"byte_end":88560,"line_start":71,"line_end":71,"column_start":24,"column_end":31},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":1205},"to":{"krate":1,"index":4311}},{"span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/non_blocking/deflate/decode.rs","byte_start":92807,"byte_end":92819,"line_start":177,"line_end":177,"column_start":6,"column_end":18},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":1230},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/non_blocking/deflate/decode.rs","byte_start":94337,"byte_end":94349,"line_start":229,"line_end":229,"column_start":15,"column_end":27},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":1230},"to":{"krate":1,"index":4311}},{"span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/non_blocking/gzip.rs","byte_start":97836,"byte_end":97843,"line_start":36,"line_end":36,"column_start":15,"column_end":22},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":1235},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/non_blocking/gzip.rs","byte_start":100614,"byte_end":100621,"line_start":120,"line_end":120,"column_start":24,"column_end":31},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":1235},"to":{"krate":1,"index":4311}},{"span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/non_blocking/zlib.rs","byte_start":103902,"byte_end":103909,"line_start":36,"line_end":36,"column_start":15,"column_end":22},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":1244},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/non_blocking/zlib.rs","byte_start":106486,"byte_end":106493,"line_start":118,"line_end":118,"column_start":24,"column_end":31},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":1244},"to":{"krate":1,"index":4311}},{"span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/non_blocking/transaction.rs","byte_start":111577,"byte_end":111599,"line_start":10,"line_end":10,"column_start":15,"column_end":37},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":1253},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/non_blocking/transaction.rs","byte_start":112671,"byte_end":112693,"line_start":45,"line_end":45,"column_start":9,"column_end":31},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":1253},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/non_blocking/transaction.rs","byte_start":113108,"byte_end":113127,"line_start":64,"line_end":64,"column_start":9,"column_end":28},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":1260},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/non_blocking/transaction.rs","byte_start":113763,"byte_end":113782,"line_start":90,"line_end":90,"column_start":24,"column_end":43},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":1260},"to":{"krate":1,"index":4311}},{"span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","byte_start":115631,"byte_end":115647,"line_start":45,"line_end":45,"column_start":6,"column_end":22},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":1269},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","byte_start":116031,"byte_end":116047,"line_start":59,"line_end":59,"column_start":39,"column_end":55},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":1269},"to":{"krate":2,"index":2786}},{"span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","byte_start":116964,"byte_end":116978,"line_start":99,"line_end":99,"column_start":6,"column_end":20},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":1299},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","byte_start":119791,"byte_end":119800,"line_start":195,"line_end":195,"column_start":18,"column_end":27},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":1341},"to":{"krate":2,"index":2858}},{"span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","byte_start":120026,"byte_end":120032,"line_start":207,"line_end":207,"column_start":6,"column_end":12},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":1366},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","byte_start":122865,"byte_end":122872,"line_start":295,"line_end":295,"column_start":9,"column_end":16},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":1383},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","byte_start":125164,"byte_end":125171,"line_start":371,"line_end":371,"column_start":22,"column_end":29},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":1383},"to":{"krate":1,"index":4311}},{"span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","byte_start":126653,"byte_end":126666,"line_start":420,"line_end":420,"column_start":18,"column_end":31},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":1392},"to":{"krate":2,"index":2858}},{"span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","byte_start":126924,"byte_end":126937,"line_start":429,"line_end":429,"column_start":6,"column_end":19},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":1392},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","byte_start":127299,"byte_end":127312,"line_start":443,"line_end":443,"column_start":9,"column_end":22},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":1392},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","byte_start":129777,"byte_end":129784,"line_start":526,"line_end":526,"column_start":9,"column_end":16},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":1400},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","byte_start":130554,"byte_end":130561,"line_start":550,"line_end":550,"column_start":12,"column_end":19},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":1400},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","byte_start":133938,"byte_end":133945,"line_start":651,"line_end":651,"column_start":26,"column_end":33},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":1400},"to":{"krate":1,"index":4372}},{"span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/zlib.rs","byte_start":134428,"byte_end":134435,"line_start":668,"line_end":668,"column_start":25,"column_end":32},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":1400},"to":{"krate":0,"index":289}},{"span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/bit.rs","byte_start":142660,"byte_end":142669,"line_start":9,"line_end":9,"column_start":9,"column_end":18},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":1411},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/bit.rs","byte_start":143804,"byte_end":143813,"line_start":51,"line_end":51,"column_start":9,"column_end":18},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":1411},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/bit.rs","byte_start":144162,"byte_end":144171,"line_start":70,"line_end":70,"column_start":9,"column_end":18},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":1419},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/bit.rs","byte_start":146623,"byte_end":146632,"line_start":155,"line_end":155,"column_start":9,"column_end":18},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":1419},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/checksum.rs","byte_start":148249,"byte_end":148256,"line_start":5,"line_end":5,"column_start":6,"column_end":13},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":763},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/checksum.rs","byte_start":148498,"byte_end":148505,"line_start":16,"line_end":16,"column_start":21,"column_end":28},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":763},"to":{"krate":2,"index":8962}},{"span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/checksum.rs","byte_start":148650,"byte_end":148655,"line_start":23,"line_end":23,"column_start":6,"column_end":11},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":772},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/checksum.rs","byte_start":148903,"byte_end":148908,"line_start":34,"line_end":34,"column_start":21,"column_end":26},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":772},"to":{"krate":2,"index":8962}},{"span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/huffman.rs","byte_start":149593,"byte_end":149597,"line_start":13,"line_end":13,"column_start":6,"column_end":10},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":1436},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/huffman.rs","byte_start":149991,"byte_end":149996,"line_start":30,"line_end":30,"column_start":20,"column_end":25},"kind":"SuperTrait","from":{"krate":2,"index":2885},"to":{"krate":0,"index":795}},{"span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/huffman.rs","byte_start":151032,"byte_end":151046,"line_start":63,"line_end":63,"column_start":6,"column_end":20},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":803},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/huffman.rs","byte_start":151935,"byte_end":151949,"line_start":93,"line_end":93,"column_start":18,"column_end":32},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":803},"to":{"krate":0,"index":795}},{"span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/huffman.rs","byte_start":153428,"byte_end":153435,"line_start":137,"line_end":137,"column_start":6,"column_end":13},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":1450},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/huffman.rs","byte_start":154636,"byte_end":154650,"line_start":182,"line_end":182,"column_start":6,"column_end":20},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":1456},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/huffman.rs","byte_start":155597,"byte_end":155611,"line_start":208,"line_end":208,"column_start":18,"column_end":32},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":1456},"to":{"krate":0,"index":795}},{"span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/huffman.rs","byte_start":156033,"byte_end":156040,"line_start":224,"line_end":224,"column_start":6,"column_end":13},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":1460},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/jwen/.cargo/registry/src/github.com-1ecc6299db9ec823/libflate-1.1.1/src/huffman.rs","byte_start":157725,"byte_end":157729,"line_start":281,"line_end":281,"column_start":10,"column_end":14},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":1466},"to":{"krate":4294967295,"index":4294967295}}]}