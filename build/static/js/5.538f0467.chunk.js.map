{"version":3,"sources":["../node_modules/graphql/error/index.js","../node_modules/graphql/type/definition.js","../node_modules/graphql/jsutils/invariant.js","../node_modules/graphql/language/kinds.js","../node_modules/graphql/language/printer.js","../node_modules/graphql/type/schema.js","../node_modules/graphql/type/directives.js","../node_modules/graphql/utilities/typeFromAST.js","../node_modules/graphql/language/visitor.js","../node_modules/graphql/type/scalars.js","../node_modules/tslib/tslib.es6.js","../node_modules/graphql/jsutils/isNullish.js","../node_modules/graphql/type/introspection.js","../../src/storeUtils.ts","../../src/directives.ts","../../src/fragments.ts","../../src/util/assign.ts","../../src/getFromAST.ts","../../src/util/filterInPlace.ts","../../src/transform.ts","../../src/util/canUse.ts","../../src/util/cloneDeep.ts","../../src/util/environment.ts","../../src/util/errorHandling.ts","../../src/util/maybeDeepFreeze.ts","../../src/util/mergeDeep.ts","../../src/util/warnOnce.ts","../node_modules/graphql/index.js","../node_modules/iterall/index.mjs","../node_modules/graphql/jsutils/find.js","../node_modules/graphql/jsutils/keyMap.js","../../src/invariant.ts","../node_modules/graphql/error/GraphQLError.js","../node_modules/graphql/jsutils/isInvalid.js","../node_modules/graphql/utilities/valueFromAST.js","../node_modules/graphql/language/parser.js","../node_modules/graphql/utilities/typeComparators.js","../node_modules/graphql/utilities/isValidLiteralValue.js","../../src/linkUtils.ts","../../src/link.ts","../node_modules/graphql/language/location.js","../node_modules/graphql/language/lexer.js","../node_modules/graphql/utilities/assertValidName.js","../node_modules/graphql/utilities/astFromValue.js","../node_modules/graphql/utilities/TypeInfo.js","../node_modules/graphql/jsutils/suggestionList.js","../node_modules/graphql/jsutils/quotedOrList.js","../node_modules/graphql/execution/execute.js","../node_modules/graphql/execution/values.js","../node_modules/graphql/jsutils/keyValMap.js","../../../src/definitions/index.js","../../src/zenObservable.ts","../node_modules/graphql-tag/node_modules/tslib/tslib.es6.js","../../src/index.ts","../node_modules/graphql/language/source.js","../node_modules/graphql/validation/validate.js","../node_modules/graphql/validation/specifiedRules.js","../node_modules/graphql/validation/rules/UniqueOperationNames.js","../node_modules/graphql/validation/rules/LoneAnonymousOperation.js","../node_modules/graphql/validation/rules/SingleFieldSubscriptions.js","../node_modules/graphql/validation/rules/KnownTypeNames.js","../node_modules/graphql/validation/rules/FragmentsOnCompositeTypes.js","../node_modules/graphql/validation/rules/VariablesAreInputTypes.js","../node_modules/graphql/validation/rules/ScalarLeafs.js","../node_modules/graphql/validation/rules/FieldsOnCorrectType.js","../node_modules/graphql/validation/rules/UniqueFragmentNames.js","../node_modules/graphql/validation/rules/KnownFragmentNames.js","../node_modules/graphql/validation/rules/NoUnusedFragments.js","../node_modules/graphql/validation/rules/PossibleFragmentSpreads.js","../node_modules/graphql/validation/rules/NoFragmentCycles.js","../node_modules/graphql/validation/rules/UniqueVariableNames.js","../node_modules/graphql/validation/rules/NoUndefinedVariables.js","../node_modules/graphql/validation/rules/NoUnusedVariables.js","../node_modules/graphql/validation/rules/KnownDirectives.js","../node_modules/graphql/validation/rules/UniqueDirectivesPerLocation.js","../node_modules/graphql/validation/rules/KnownArgumentNames.js","../node_modules/graphql/validation/rules/UniqueArgumentNames.js","../node_modules/graphql/validation/rules/ArgumentsOfCorrectType.js","../node_modules/graphql/validation/rules/ProvidedNonNullArguments.js","../node_modules/graphql/validation/rules/DefaultValuesOfCorrectType.js","../node_modules/graphql/validation/rules/VariablesInAllowedPosition.js","../node_modules/graphql/validation/rules/OverlappingFieldsCanBeMerged.js","../node_modules/graphql/validation/rules/UniqueInputFieldNames.js","../node_modules/graphql/utilities/isValidJSValue.js","../node_modules/graphql/utilities/buildASTSchema.js","../../src/index.js","../../src/core/networkStatus.ts","../../src/util/Observable.ts","../../src/util/arrays.ts","../../src/errors/ApolloError.ts","../../src/core/types.ts","../../src/core/ObservableQuery.ts","../../src/data/mutations.ts","../../src/data/queries.ts","../../src/core/LocalState.ts","../../src/util/capitalizeFirstLetter.ts","../../src/util/observables.ts","../../src/core/QueryManager.ts","../../src/data/store.ts","../../src/ApolloClient.ts","../../src/version.ts","../node_modules/symbol-observable/es/index.js","../../src/equality.ts","../../src/utils.ts","../../src/types/Cache.ts","../../src/cache.ts","../../src/slot.ts","../../src/context.ts","../../src/entry.ts","../../src/key-trie.ts","../../src/fragmentMatcher.ts","../../src/depTrackingCache.ts","../../src/readFromStore.ts","../../src/objectCache.ts","../../src/writeToStore.ts","../../src/inMemoryCache.ts","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js","../node_modules/graphql/graphql.js","../node_modules/graphql/error/syntaxError.js","../node_modules/graphql/error/locatedError.js","../node_modules/graphql/error/formatError.js","../node_modules/graphql/type/index.js","../node_modules/graphql/language/index.js","../node_modules/graphql/execution/index.js","../node_modules/graphql/subscription/index.js","../node_modules/graphql/subscription/subscribe.js","../node_modules/graphql/subscription/mapAsyncIterator.js","../node_modules/graphql/validation/index.js","../node_modules/graphql/utilities/index.js","../node_modules/graphql/utilities/introspectionQuery.js","../node_modules/graphql/utilities/getOperationAST.js","../node_modules/graphql/utilities/buildClientSchema.js","../node_modules/graphql/utilities/extendSchema.js","../node_modules/graphql/utilities/schemaPrinter.js","../node_modules/graphql/utilities/concatAST.js","../node_modules/graphql/utilities/separateOperations.js","../node_modules/graphql/utilities/findBreakingChanges.js","../node_modules/graphql/utilities/findDeprecatedUsages.js","../../../src/definitions/init.js","../../../src/definitions/graphql.js","../node_modules/pluralize/pluralize.js","../node_modules/webpack/buildin/harmony-module.js","../node_modules/symbol-observable/es/ponyfill.js","../node_modules/zen-observable/index.js","../node_modules/zen-observable/lib/Observable.js","../node_modules/fast-json-stable-stringify/index.js","../node_modules/ra-data-graphql/esm/introspection.js","../node_modules/ra-data-graphql/esm/index.js","../node_modules/ra-data-graphql-simple/esm/buildQuery.js","../node_modules/ra-data-graphql/esm/buildApolloClient.js","../node_modules/ra-data-graphql/esm/constants.js","../node_modules/ra-data-graphql-simple/esm/getFinalType.js","../node_modules/ra-data-graphql-simple/esm/isList.js","../node_modules/ra-data-graphql-simple/esm/buildVariables.js","../node_modules/ra-data-graphql-simple/esm/isRequired.js","../node_modules/ra-data-graphql-simple/esm/buildGqlQuery.js","../node_modules/ra-data-graphql-simple/esm/getResponseParser.js","../node_modules/ra-data-graphql-simple/esm/index.js","../../src/httpLink.ts"],"names":["Object","defineProperty","exports","value","_GraphQLError","require","enumerable","get","GraphQLError","_syntaxError","syntaxError","_locatedError","locatedError","_formatError","formatError","GraphQLNonNull","GraphQLList","GraphQLInputObjectType","GraphQLEnumType","GraphQLUnionType","GraphQLInterfaceType","GraphQLObjectType","GraphQLScalarType","undefined","_typeof","Symbol","iterator","obj","constructor","prototype","_extends","assign","target","i","arguments","length","source","key","hasOwnProperty","call","isType","assertType","type","_invariant2","default","String","isInputType","assertInputType","isOutputType","assertOutputType","isLeafType","assertLeafType","isCompositeType","assertCompositeType","isAbstractType","assertAbstractType","getNullableType","ofType","isNamedType","assertNamedType","getNamedType","unmodifiedType","_interopRequireDefault","_isNullish2","Kind","__esModule","newObj","_interopRequireWildcard","_assertValidName","_classCallCheck","instance","Constructor","TypeError","resolveThunk","thunk","config","this","assertValidName","name","description","astNode","serialize","parseValue","parseLiteral","_scalarConfig","serializer","isValidValue","parser","isValidLiteral","valueNode","toString","toJSON","inspect","isIntrospection","extensionASTNodes","isTypeOf","_typeConfig","getFields","_fields","defineFieldMap","fields","getInterfaces","_interfaces","interfacesThunk","interfaces","Array","isArray","implementedTypeNames","create","forEach","iface","resolveType","defineInterfaces","fieldsThunk","fieldMap","isPlainObj","fieldNames","keys","resultFieldMap","fieldName","fieldConfig","resolver","field","isDeprecated","Boolean","deprecationReason","resolve","argsConfig","args","map","argName","arg","defaultValue","getTypes","_types","unionType","typesThunk","types","includedTypeNames","objType","defineTypes","_values","valueMap","valueNames","valueName","indexOf","defineEnumValues","values","_enumConfig","getValues","getValue","_getNameLookup","enumValue","_getValueLookup","kind","ENUM","_valueLookup","lookup","Map","set","_nameLookup","_defineFieldMap","_this","condition","message","Error","NAME","DOCUMENT","OPERATION_DEFINITION","VARIABLE_DEFINITION","VARIABLE","SELECTION_SET","FIELD","ARGUMENT","FRAGMENT_SPREAD","INLINE_FRAGMENT","FRAGMENT_DEFINITION","INT","FLOAT","STRING","BOOLEAN","NULL","LIST","OBJECT","OBJECT_FIELD","DIRECTIVE","NAMED_TYPE","LIST_TYPE","NON_NULL_TYPE","SCHEMA_DEFINITION","OPERATION_TYPE_DEFINITION","SCALAR_TYPE_DEFINITION","OBJECT_TYPE_DEFINITION","FIELD_DEFINITION","INPUT_VALUE_DEFINITION","INTERFACE_TYPE_DEFINITION","UNION_TYPE_DEFINITION","ENUM_TYPE_DEFINITION","ENUM_VALUE_DEFINITION","INPUT_OBJECT_TYPE_DEFINITION","TYPE_EXTENSION_DEFINITION","DIRECTIVE_DEFINITION","print","ast","_visitor","visit","leave","printDocASTReducer","Name","node","Variable","Document","join","definitions","OperationDefinition","op","operation","varDefs","wrap","variableDefinitions","directives","selectionSet","VariableDefinition","_ref","variable","SelectionSet","_ref2","block","selections","Field","_ref3","alias","Argument","_ref4","FragmentSpread","_ref5","InlineFragment","_ref6","typeCondition","FragmentDefinition","_ref7","IntValue","_ref8","FloatValue","_ref9","StringValue","_ref10","JSON","stringify","BooleanValue","_ref11","NullValue","EnumValue","_ref12","ListValue","_ref13","ObjectValue","_ref14","ObjectField","_ref15","Directive","_ref16","NamedType","_ref17","ListType","_ref18","NonNullType","_ref19","SchemaDefinition","_ref20","operationTypes","OperationTypeDefinition","_ref21","ScalarTypeDefinition","_ref22","ObjectTypeDefinition","_ref23","FieldDefinition","_ref24","InputValueDefinition","_ref25","InterfaceTypeDefinition","_ref26","UnionTypeDefinition","_ref27","EnumTypeDefinition","_ref28","EnumValueDefinition","_ref29","InputObjectTypeDefinition","_ref30","TypeExtensionDefinition","_ref31","definition","DirectiveDefinition","_ref32","locations","maybeArray","separator","filter","x","array","maybeString","replace","start","end","GraphQLSchema","_definition","_directives","_introspection","_find2","_typeComparators","query","_queryType","mutation","_mutationType","subscription","_subscriptionType","every","directive","GraphQLDirective","specifiedDirectives","initialTypes","getQueryType","getMutationType","getSubscriptionType","__Schema","concat","_typeMap","reduce","typeMapReducer","_implementations","typeName","impls","push","schema","object","objectFieldMap","ifaceFieldMap","objectField","ifaceField","isTypeSubTypeOf","ifaceArg","objectArg","isEqualType","assertObjectImplementsInterface","getTypeMap","getType","getPossibleTypes","abstractType","isPossibleType","possibleType","possibleTypeMap","_possibleTypeMap","possibleTypes","getDirectives","getDirective","reducedMap","fieldArgTypes","_fieldMap","GraphQLDeprecatedDirective","DEFAULT_DEPRECATION_REASON","GraphQLSkipDirective","GraphQLIncludeDirective","DirectiveLocation","_scalars","_invariant","QUERY","MUTATION","SUBSCRIPTION","SCHEMA","SCALAR","ARGUMENT_DEFINITION","INTERFACE","UNION","ENUM_VALUE","INPUT_OBJECT","INPUT_FIELD_DEFINITION","if","GraphQLBoolean","reason","GraphQLString","typeFromAST","typeNode","innerType","root","visitor","keyMap","visitorKeys","QueryDocumentKeys","stack","inArray","index","edits","parent","path","ancestors","newRoot","isLeaving","isEdited","pop","slice","clone","k","editOffset","ii","editKey","editValue","splice","prev","result","isNode","visitFn","getVisitFn","BREAK","visitInParallel","visitors","skipping","enter","fn","apply","visitWithTypeInfo","typeInfo","maybeNode","kindVisitor","kindSpecificVisitor","specificVisitor","specificKindVisitor","GraphQLID","GraphQLFloat","GraphQLInt","coerceInt","num","Number","int","Math","floor","parseInt","coerceFloat","parseFloat","extendStatics","d","b","setPrototypeOf","__proto__","p","__extends","__","__assign","t","s","n","__rest","e","getOwnPropertySymbols","propertyIsEnumerable","__awaiter","thisArg","_arguments","P","generator","Promise","reject","fulfilled","step","next","rejected","done","then","__generator","body","f","y","g","_","label","sent","trys","ops","verb","v","__spreadArrays","il","r","a","j","jl","TypeNameMetaFieldDef","TypeMetaFieldDef","SchemaMetaFieldDef","__TypeKind","TypeKind","__EnumValue","__InputValue","__Field","__Type","__DirectiveLocation","__Directive","_isInvalid","_isInvalid2","_astFromValue","_printer","typeMap","queryType","mutationType","subscriptionType","onOperation","onFragment","onField","NON_NULL","includeDeprecated","context","enumValues","inputFields","inputVal","astFromValue","parentType","valueToObjectRepresentation","argObj","variables","isIntValue","isFloatValue","isBooleanValue","isStringValue","isObjectValue","isVariable","variableValue","isListValue","listValue","nestedArgArrayObj","isEnumValue","isNullValue","storeKeyNameFromField","directivesObj","getStoreKeyName","KNOWN_DIRECTIVES","filterKeys","sort","completeFieldName","stringifiedArgs","argumentsObjectFromField","resultKeyNameFromField","isField","selection","isInlineFragment","isIdValue","idObject","generated","toIdValue","idConfig","id","typename","isJsonValue","jsonObject","getDirectiveInfoFromField","shouldInclude","isInclusionDirective","directiveArguments","ifArgument","ifValue","evaledValue","hasDirectives","names","doc","getDirectiveNames","some","hasClientExports","document","getFragmentQueryDocument","fragmentName","actualFragmentName","fragments","sources","checkDocument","operations","getOperationDefinition","getOperationName","getFragmentDefinitions","getQueryDefinition","queryDef","getMainDefinition","queryDoc","fragmentDefinition","createFragmentMap","symTable","fragment","getDefaultValues","defaultValues","defaultValueObj","filterInPlace","test","elem","TYPENAME_FIELD","nullIfDocIsEmpty","isEmpty","fragmentDef","getFragmentDefinition","getDirectiveMatcher","dir","removeDirectivesFromDocument","variablesInUse","variablesToRemove","fragmentSpreadsInUse","fragmentSpreadsToRemove","modifiedDoc","_key","remove","getAllFragmentSpreadsFromSelectionSet","allFragments","frag","argMatcher","argument","aConfig","getArgumentMatcher","varDef","argConfig","removeArgumentsFromDocument","fs","def","removeFragmentSpreadFromDocument","addTypenameToDocument","lastIndexOf","connectionRemoveConfig","willRemove","removeConnectionDirectiveFromDocument","buildQueryFromSelectionSet","removeClientSetsFromDocument","canUseWeakMap","WeakMap","navigator","product","cloneDeep","cloneDeepHelper","val","seen","has","child","getPrototypeOf","isEnv","env","process","isProduction","isTest","tryFunctionOrLogError","console","error","graphQLResultHasError","errors","maybeDeepFreeze","deepFreeze","o","freeze","getOwnPropertyNames","prop","isFrozen","mergeDeep","mergeDeepArray","count","pastCopies","shallowCopyForMerge","mergeHelper","isObject","isExtensible","sourceKey","sourceValue","targetValue","_graphql","graphql","_type","_language","Source","getLocation","parse","parseType","TokenKind","_execution","execute","defaultFieldResolver","responsePathAsArray","getDirectiveValues","_subscription","subscribe","createSourceEventStream","_validation","validate","ValidationContext","specifiedRules","ArgumentsOfCorrectTypeRule","DefaultValuesOfCorrectTypeRule","FieldsOnCorrectTypeRule","FragmentsOnCompositeTypesRule","KnownArgumentNamesRule","KnownDirectivesRule","KnownFragmentNamesRule","KnownTypeNamesRule","LoneAnonymousOperationRule","NoFragmentCyclesRule","NoUndefinedVariablesRule","NoUnusedFragmentsRule","NoUnusedVariablesRule","OverlappingFieldsCanBeMergedRule","PossibleFragmentSpreadsRule","ProvidedNonNullArgumentsRule","ScalarLeafsRule","SingleFieldSubscriptionsRule","UniqueArgumentNamesRule","UniqueDirectivesPerLocationRule","UniqueFragmentNamesRule","UniqueInputFieldNamesRule","UniqueOperationNamesRule","UniqueVariableNamesRule","VariablesAreInputTypesRule","VariablesInAllowedPositionRule","_error","_utilities","introspectionQuery","getOperationAST","buildClientSchema","buildASTSchema","buildSchema","extendSchema","printSchema","printIntrospectionSchema","printType","valueFromAST","TypeInfo","isValidJSValue","isValidLiteralValue","concatAST","separateOperations","doTypesOverlap","findBreakingChanges","BreakingChangeType","DangerousChangeType","findDeprecatedUsages","SYMBOL","SYMBOL_ITERATOR","$$iterator","isIterable","getIteratorMethod","isArrayLike","isCollection","getIterator","iterable","method","createIterator","collection","ArrayLikeIterator","_o","_i","callback","SYMBOL_ASYNC_ITERATOR","asyncIterator","$$asyncIterator","isAsyncIterable","getAsyncIteratorMethod","getAsyncIterator","asyncIterable","createAsyncIterator","AsyncFromSyncIterator","unwrapAsyncFromSync","forAwaitEach","catch","return","throw","list","predicate","keyFn","item","genericMessage","framesToPop","InvariantError","invariant","wrapConsoleMethod","warn","processStub","Function","atLeastWeTried","_location","nodes","positions","originalError","_source","loc","_positions","_locations","_source2","pos","defineProperties","writable","configurable","captureStackTrace","variableName","itemType","coercedValues","itemNodes","isMissingVariable","itemValue","coercedValue","coercedObj","fieldNodes","_keyMap2","fieldNode","fieldValue","parsed","options","sourceObj","lexer","token","expect","_lexer","SOF","parseDefinition","skip","EOF","_kinds","parseDocument","createLexer","parseValueLiteral","parseTypeReference","parseConstValue","parseNamedType","parseName","peek","BRACE_L","parseOperationDefinition","expectKeyword","parseFragmentName","parseDirectives","parseSelectionSet","parseFragmentDefinition","many","parseOperationTypeDefinition","BRACE_R","parseSchemaDefinition","parseScalarTypeDefinition","parseObjectTypeDefinition","any","parseFieldDefinition","parseInterfaceTypeDefinition","EQUALS","PIPE","members","parseUnionMembers","parseUnionTypeDefinition","parseEnumValueDefinition","parseEnumTypeDefinition","parseInputValueDef","parseInputObjectTypeDefinition","parseTypeExtensionDefinition","AT","parseArgumentDefs","parseDirectiveLocations","parseDirectiveDefinition","unexpected","parseTypeSystemDefinition","parseOperationType","parseVariableDefinitions","operationToken","PAREN_L","parseVariableDefinition","PAREN_R","parseVariable","COLON","DOLLAR","parseSelection","SPREAD","advance","parseFragment","nameOrAlias","parseArguments","parseField","parseArgument","isConst","BRACKET_L","parseValueValue","BRACKET_R","parseList","parseObjectField","parseObject","parseDirective","BANG","parseImplementsInterfaces","startToken","noLocation","Loc","lastToken","endToken","match","getTokenDesc","atToken","openKind","parseFn","closeKind","typeA","typeB","maybeSubType","superType","_typeB","acc","providedFieldNode","fieldNodeMap","link","isTerminating","request","toPromise","observable","completed","data","makePromise","fromPromise","promise","observer","complete","bind","fromError","errorValue","createOperation","starting","operationName","getKey","passthrough","forward","of","toLink","handler","ApolloLink","empty","from","links","split","left","right","leftLink","rightLink","first","second","firstLink","nextLink","transformedOperation","extensions","transformOperation","OPERATION_FIELDS","validateOperation","position","lineRegexp","line","column","exec","startOfFileToken","Tok","lineStart","advanceLexer","readToken","COMMENT","charCodeAt","printCharCode","code","isNaN","fromCharCode","toUpperCase","bodyLength","startPosition","positionAfterWhitespace","col","readComment","readName","firstCode","isFloat","readDigits","readNumber","chunkStart","charCode","c","char2hex","readString","unexpectedCharacterMessage","hasWarnedAboutDunder","noNameWarning","formatWarning","NAME_RX","ERROR_PREFIX_RX","GRAPHQL_NO_NAME_WARNING","formatted","errorString","trim","_value","astValue","_iterall","valuesNodes","itemNode","fieldType","serialized","stringNum","_typeFromAST","_find","getFieldDefFn","_schema","_typeStack","_parentTypeStack","_inputTypeStack","_fieldDefStack","_directive","_argument","_enumValue","_getFieldDef","getFieldDef","getParentType","getInputType","getArgument","getEnumValue","namedType","fieldDef","typeConditionAST","outputType","inputType","argDef","argType","fieldOrDirective","listType","objectType","inputField","enumType","lexicalDistance","aLength","bLength","cost","min","input","optionsByDistance","oLength","inputThreshold","distance","threshold","max","items","selected","quoted","argsOrSchema","rootValue","contextValue","variableValues","fieldResolver","executeImpl","addPath","assertValidExecutionArguments","buildExecutionContext","getOperationRootType","collectFields","buildResolveInfo","resolveFieldValueOrError","exeContext","prevPromise","responseName","results","fieldPath","resolveField","getPromise","resolvedResult","executeFieldsSerially","executeFields","executeOperation","flattened","curr","reverse","rawVariableValues","getVariableValues","containsPromise","finalResults","valuesAndPromises","all","resolvedObject","promiseForObject","runtimeType","visitedFragmentNames","shouldIncludeNode","_name","doesFragmentConditionMatch","fragName","include","typeConditionNode","conditionalType","resolveFn","info","completeValueCatchingError","returnType","getArgumentValues","completeValueWithLocatedError","completeValue","resolved","completedResults","completedItem","completeListValue","serializedResult","completeLeafValue","promisedIsTypeOfResults","isTypeOfResult","isTypeOfResults","defaultResolveTypeFn","resolvedRuntimeType","completeObjectValue","ensureValidRuntimeType","completeAbstractValue","runtimeTypeOrName","invalidReturnTypeError","collectAndExecuteSubfields","subFieldNodes","property","varDefNodes","inputs","varDefNode","varName","varType","_valueFromAST","_isValidJSValue","coerceValue","directiveDef","directiveNode","_isValidLiteralValue","argDefs","argNodes","argNodeMap","argumentNode","valueIter","valFn","aliases","builder","BUILDER_KEYS","NODE_FIELDS","ALIAS_KEYS","chain","assertEach","assertOneOf","vals","assertNodeType","assertNodeOrValueType","assertValueType","assertArrayOf","cb","fns","Observable","locationOffset","rules","documentAST","rule","getErrors","visitUsingRules","_TypeInfo","_specifiedRules","_ast","_typeInfo","_errors","_fragmentSpreads","_recursivelyReferencedFragments","_variableUsages","_recursiveVariableUsages","reportError","getSchema","getDocument","getFragment","_fragments","frags","statement","getFragmentSpreads","spreads","setsToVisit","getRecursivelyReferencedFragments","collectedNames","nodesToVisit","_node","getVariableUsages","usages","newUsages","getRecursiveVariableUsages","_UniqueOperationNames","_LoneAnonymousOperation","_SingleFieldSubscriptions","_KnownTypeNames","_FragmentsOnCompositeTypes","_VariablesAreInputTypes","_ScalarLeafs","_FieldsOnCorrectType","_UniqueFragmentNames","_KnownFragmentNames","_NoUnusedFragments","_PossibleFragmentSpreads","_NoFragmentCycles","_UniqueVariableNames","_NoUndefinedVariables","_NoUnusedVariables","_KnownDirectives","_UniqueDirectivesPerLocation","_KnownArgumentNames","_UniqueArgumentNames","_ArgumentsOfCorrectType","_ProvidedNonNullArguments","_DefaultValuesOfCorrectType","_VariablesInAllowedPosition","_OverlappingFieldsCanBeMerged","_UniqueInputFieldNames","UniqueOperationNames","LoneAnonymousOperation","SingleFieldSubscriptions","KnownTypeNames","FragmentsOnCompositeTypes","VariablesAreInputTypes","ScalarLeafs","FieldsOnCorrectType","UniqueFragmentNames","KnownFragmentNames","NoUnusedFragments","PossibleFragmentSpreads","NoFragmentCycles","UniqueVariableNames","NoUndefinedVariables","NoUnusedVariables","KnownDirectives","UniqueDirectivesPerLocation","KnownArgumentNames","UniqueArgumentNames","ArgumentsOfCorrectType","ProvidedNonNullArguments","DefaultValuesOfCorrectType","VariablesInAllowedPosition","OverlappingFieldsCanBeMerged","UniqueInputFieldNames","duplicateOperationNameMessage","knownOperationNames","anonOperationNotAloneMessage","operationCount","singleFieldOnlyMessage","unknownTypeMessage","_suggestionList2","_quotedOrList2","suggestedTypes","inlineFragmentOnNonCompositeErrorMessage","fragmentOnNonCompositeErrorMessage","nonInputTypeOnVarMessage","noSubselectionAllowedMessage","requiredSubselectionMessage","undefinedFieldMessage","suggestedTypeNames","suggestedObjectTypes","interfaceUsageCount","possibleInterface","getSuggestedTypeNames","suggestedFieldNames","possibleFieldNames","getSuggestedFieldNames","duplicateFragmentNameMessage","knownFragmentNames","unknownFragmentMessage","unusedFragMessage","operationDefs","fragmentDefs","fragmentNameUsed","typeIncompatibleSpreadMessage","typeIncompatibleAnonSpreadMessage","fragType","getFragmentType","cycleErrorMessage","visitedFrags","spreadPath","spreadPathIndexByName","detectCycleRecursive","spreadNodes","spreadNode","spreadName","cycleIndex","spreadFragment","cyclePath","spreadNames","duplicateVariableMessage","knownVariableNames","undefinedVarMessage","variableNameDefined","opName","unusedVariableMessage","variableDefs","variableNameUsed","variableDef","unknownDirectiveMessage","misplacedDirectiveMessage","candidateLocation","appliedTo","getDirectiveLocationForASTPath","directiveName","location","duplicateDirectiveMessage","knownDirectives","unknownArgMessage","unknownDirectiveArgMessage","argumentOf","suggestedArgs","duplicateArgMessage","knownArgNames","badValueMessage","verboseErrors","missingFieldArgMessage","missingDirectiveArgMessage","_keyMap","defaultForNonNullArgMessage","badValueForDefaultArgMessage","guessType","badVarPosMessage","varDefMap","effectiveType","expectedType","fieldsConflictMessage","comparedFragments","PairSet","cachedFieldsAndFragmentNames","conflicts","_getFieldsAndFragment","getFieldsAndFragmentNames","fragmentNames","conflict","findConflict","collectConflictsWithin","collectConflictsBetweenFieldsAndFragment","collectConflictsBetweenFragments","findConflictsWithinSelectionSet","_ref2$","fields1","fields2","reasonMessage","subreason","areMutuallyExclusive","_getReferencedFieldsA","getReferencedFieldsAndFragmentNames","fieldMap2","fragmentNames2","collectConflictsBetween","fragmentName1","fragmentName2","fragment1","fragment2","add","_getReferencedFieldsA2","fieldMap1","fragmentNames1","_getReferencedFieldsA3","parentFieldsAreMutuallyExclusive","field1","field2","parentType1","node1","def1","parentType2","node2","def2","type1","type2","name1","name2","arguments1","arguments2","argument1","value1","value2","argument2","sameArguments","doTypesConflict","selectionSet1","selectionSet2","allFields","subfieldConflicts","_getFieldsAndFragment2","_getFieldsAndFragment3","_j","findConflictsBetweenSubSelectionSets","cached","nodeAndDefs","_collectFieldsAndFragmentNames","inlineFragmentType","fragmentType","_data","_pairSetAdd","duplicateInputFieldMessage","knownNameStack","knownNames","providedField","newErrors","parseResult","getDeprecationReason","getDescription","_parser","_keyValMap2","schemaDef","typeDefs","nodeMap","directiveDefs","queryTypeName","mutationTypeName","subscriptionTypeName","operationType","Query","Mutation","Subscription","innerTypeMap","Int","Float","ID","typeDefNamed","makeInputValues","getObjectType","produceType","buildWrappedType","inputTypeNode","wrappedType","getNamedTypeNode","innerTypeDef","makeFieldDefMap","produceInterfaceType","makeImplementedInterfaces","makeTypeDef","cannotExecuteSchema","makeInterfaceDef","makeEnumDef","produceObjectType","makeUnionDef","makeScalarDef","makeInputObjectDef","makeSchemaDef","deprecated","comments","minSpaces","spaces","leadingSpaces","comment","str","is","opts","shallowEqual","actual","expected","registerType","_isType","TYPES","nodeType","aliasKeys","NetworkStatus","isNetworkRequestInFlight","networkStatus","LinkObservable","isNonEmptyArray","isApolloError","err","FetchType","graphQLErrors","networkError","errorMessage","extraInfo","graphQLError","generateErrorMessage","ApolloError","queryManager","shouldSubscribe","onSubscribe","observers","Set","subscriptions","isTornDown","queryId","generateQueryId","opDef","queryName","delete","size","removeQuery","setTimeout","unsubscribe","currentResult","getCurrentResult","lastResult","lastError","loading","storeValue","policy","partial","queryStoreValue","queryStore","fetchPolicy","isNetworkFetchPolicy","errorPolicy","ready","updateLastResult","stale","isDifferentFromLastResult","newResult","lastResultSnapshot","snapshot","getLastResult","getLastError","resetLastResults","resetQueryStoreErrors","refetch","fetchQuery","fetchMore","fetchMoreOptions","combinedOptions","qid","normal","fetchMoreResult","updateQuery","previousResult","stopQuery","subscribeToMore","startGraphQLSubscription","subscriptionData","previous","onError","setOptions","pollInterval","startPolling","stopPolling","setVariables","oldFetchPolicy","fetchResults","tryFetch","mapFn","dataStore","markUpdateQueryResult","broadcastQueries","stopPollingQuery","assertNotCacheFirstOrOnly","startPollingQuery","assumeImmutableResults","subObserver","_observer","defaultSubscriptionObserverErrorCallback","setUpQuery","tearDownQuery","addObservableQuery","iterateObserversSafely","observeQuery","transform","getLocalState","addExportedVariables","previousVariables","serverQuery","sub","clear","removeObservableQuery","observersWithMethod","obs","obsQuery","store","getStore","mutationId","initMutation","markMutationError","markMutationResult","reset","initQuery","previousQuery","cache","client","resolvers","fragmentMatcher","addResolvers","setFragmentMatcher","resolverGroup","setResolvers","getResolvers","runResolvers","remoteResult","onlyRunForcedResolvers","resolveDocument","localResult","getFragmentMatcher","clientQuery","prepareContext","getCacheKey","dataIdFromObject","buildRootValueFromCache","exportedVariables","shouldForceResolvers","forceResolvers","diff","returnPartialData","optimistic","mainDefinition","fragmentMap","definitionOperation","defaultOperationType","charAt","execContext","resolveSelectionSet","resultsToMerge","fieldResult","fragmentResult","aliasedFieldName","aliasUsed","defaultResult","resultPromise","resolverType","__typename","resolverMap","resolveSubSelectedArray","multiplex","inner","queryDeduplication","onBroadcast","ssrMode","clientAwareness","localState","mutationStore","MutationStore","QueryStore","idCounter","queries","fetchQueryRejectFns","transformCache","inFlightLinkObservables","pollingInfoByQueryId","LocalState","getCache","stop","_info","stopQueryNoBroadcast","mutate","optimisticResponse","updateQueries","refetchQueries","awaitRefetchQueries","update","setQuery","getVariables","generateUpdateQueriesInfo","ret","updateQueriesByName","observableQuery","updater","markMutationInit","updateWithProxyFn","self","storeResult","getObservableFromLink","markMutationComplete","refetchQueryPromises","refetchQuery","queryOptions","fetchType","fetchMoreForQueryId","metadata","needToFetch","isNetworkOnly","shouldFetch","requestId","cancel","updateQueryWatch","lastRequestId","invalidated","invalidate","storePreviousVariables","isPoll","poll","isRefetch","networkResult","fetchRequest","getQuery","markQueryError","markQueryResultClient","hasForcedResolvers","markQueryResult","newData","queryListenerForObserver","invoke","networkStatusChanged","shouldNotifyIfLoading","notifyOnNetworkStatusChange","hasGraphQLErrors","isMissing","errorStatusChanged","diffResult","resultFromStore","transformed","transformDocument","forLink","transformForLink","defaultVars","watchQuery","transformedOptions","ObservableQuery","watchedQuery","stopQueryInStore","stopQueryInStoreNoBroadcast","addQueryListener","listener","listeners","watch","clearStore","resetIds","resetStore","reFetchObservableQueries","includeStandby","observableQueryPromises","startQuery","makeObservable","markSubscriptionResult","getCurrentQueryResult","getQueryWithPreviousResult","queryIdOrObservable","foundObserveableQuery","deduplication","forceFetch","cleanup","activeNextCount","asyncMap","errorsFromStore","fqrfId","newInfo","newContext","checkInFlight","interval","clearTimeout","timeout","initialCache","ignoreErrors","writeWithErrors","write","dataId","recordOptimisticTransaction","orig","nextQueryResult","currentQueryResult","mutationResult","queryVariables","performTransaction","removeOptimistic","defaultOptions","resetStoreCallbacks","clearStoreCallbacks","ssrForceFetchDelay","connectToDevTools","version","DataStore","disableNetworkFetches","window","__APOLLO_CLIENT__","QueryManager","clientAwarenessName","clientAwarenessVersion","devToolsHookCb","action","state","mutations","dataWithOptimisticResults","extract","readQuery","readFragment","writeQuery","writeFragment","writeData","__actionHookForDevTools","__requestRaw","payload","initQueryManager","onResetStore","onClearStore","restore","serializedState","setLocalStateFragmentMatcher","global","module","ponyfill","previousComparisons","equal","check","aTag","bTag","previouslyCompared","aKeys","bKeys","keyCount","aIterator","entries","isMap","aKey","aValue","bSet","queryFromPojo","selectionSetFromObj","Cache","justTypenameQuery","currentContext","MISSING_VALUE","host","Slot","Date","now","random","hasValue","slots","withValue","saved","noContext","defaultDispose","dispose","newest","oldest","entry","getEntry","older","newer","clean","parentEntrySlot","reusableEmptyArray","emptySetPool","assert","optionalMessage","valueGet","parents","childValues","dirtyChildren","dirty","recomputing","Entry","recompute","mightBeDirty","reportDirtyChild","reportCleanChild","rememberParent","maybeReportOrphan","originalChildren","forgetChildren","recomputeNewValue","maybeUnsubscribe","setDirty","maybeSubscribe","reportClean","setClean","reallyRecompute","reportDirty","forgetChild","childValue","len","valueIs","removeDirtyChild","dc","reportOrphan","children","weakness","lookupArray","getChildTrie","isObjRef","weak","strong","KeyTrie","haveWarned","shouldWarn","answer","ensureReady","canBypassInit","idValue","isRootQuery","introspectionQueryResultData","possibleTypesMap","parseIntrospectionResult","isReady","implementingTypes","introspectionResultData","__schema","implementingType","hasOwn","depend","disposable","makeCacheKey","toObject","defaultNormalizedCacheFactory","seed","cacheKeyRoot","freezeResults","executeStoreQuery","executeSelectionSet","executeSubSelectedArray","readQueryFromStore","diffQueryAgainstStore","rootId","fragmentMatcherFunction","queryDefinition","cacheRedirects","execResult","hasMissingFields","missing","tolerable","finalResult","objectsToMerge","handleMissing","executeField","fragmentExecResult","readStoreResult","resultKey","storeKeyName","storeObj","json","readStoreResolver","combineExecResults","assertSelectionSetForIdValue","execResults","childResult","defaultFragmentMatcher","assertIdValue","ObjectCache","enhanceErrorWithDocument","enhancedError","writeQueryToStore","writeResultToStore","operationDefinition","writeSelectionSetToStore","processedData","resultFieldKey","writeFieldToStore","isDefered","isClient","matches","fakeContext","storeObject","storeFieldName","generatedId","processArrayValue","valueDataId","isGeneratedId","semanticId","isDataProcessed","escapedId","hadTypename","hasTypename","typenameChanged","mergeWithGenerated","generatedKey","realKey","real","madeChanges","realValue","newRealValue","itemDataId","defaultConfig","HeuristicFragmentMatcher","defaultDataIdFromObject","addTypename","resultCaching","_id","optimisticId","transaction","watches","typenameDocumentCache","silenceBroadcast","customResolvers","cacheResolvers","optimisticData","storeWriter","storeReader","maybeBroadcastWatch","read","broadcastWatches","evict","idToRemove","toReapply","removedCount","layer","_taggedTemplateLiteral","strings","raw","graphqlImpl","_validate","_execute","validationErrors","columnOffset","getColumnOffset","lineOffset","contextLine","prevLineNum","lineNum","nextLineNum","padLen","lines","whitespace","lpad","highlightSourceAtLocation","_subscribe","subscribeFieldResolver","subscribeImpl","_mapAsyncIterator2","$return","abruptClose","rethrow","mapResult","asyncMapValue","iteratorResult","_defineProperty","_introspectionQuery","_getOperationAST","_buildClientSchema","_buildASTSchema","_extendSchema","_schemaPrinter","_concatAST","_separateOperations","_findBreakingChanges","_findDeprecatedUsages","introspection","schemaIntrospection","typeIntrospectionMap","typeDefCache","typeRef","itemRef","nullableRef","nullableType","typeIntrospection","typeDef","scalarIntrospection","objectIntrospection","getInterfaceType","buildFieldDefMap","interfaceIntrospection","cannotExecuteClientSchema","unionIntrospection","enumIntrospection","valueIntrospection","inputObjectIntrospection","buildInputValueDefMap","buildType","getOutputType","fieldIntrospection","inputValueIntrospections","inputValue","buildInputValue","inputValueIntrospection","directiveIntrospection","typeDefinitionMap","typeExtensionsMap","directiveDefinitions","extendedTypeName","existingType","getTypeFromDef","existingMutationType","existingSubscriptionType","getTypeFromAST","existingDirectives","newDirectives","buildInputValues","getMergedDirectives","_getNamedType","getObjectTypeFromAST","getInterfaceTypeFromAST","cachedTypeDef","extension","interfaceName","extendImplementedInterfaces","extendFieldMap","extendObjectType","extendInterfaceType","extendUnionType","extendType","_typeDef","buildImplementedInterfaces","buildFieldMap","buildObjectType","cannotExecuteExtendedSchema","buildInterfaceType","buildUnionType","buildScalarType","buildEnumType","buildInputObjectType","newFieldMap","oldFieldMap","extendFieldType","buildOutputFieldType","buildInputFieldType","printFilteredSchema","isSpecDirective","isDefinedType","isIntrospectionType","isBuiltInScalar","directiveFilter","typeFilter","localeCompare","printSchemaDefinition","printDirective","isSchemaOfCommonNames","printDescription","printScalar","implementedInterfaces","printFields","printObject","printInterface","printUnion","printDeprecated","printEnum","printInputValue","printInputObject","printArgs","indentation","argDecl","fieldOrEnumVal","firstInBlock","sublines","breakLine","parts","RegExp","asts","batchDefinitions","depGraph","fromName","idx","toName","separatedDocumentASTs","dependencies","collectTransitiveDependencies","collected","immediateDeps","n1","n2","oldSchema","newSchema","findRemovedTypes","findTypesThatChangedKind","findFieldsThatChangedType","findTypesRemovedFromUnions","findValuesRemovedFromEnums","findArgChanges","breakingChanges","findInterfacesRemovedFromObjectTypes","findDangerousChanges","dangerousChanges","findFieldsThatChangedTypeOnInputObjectTypes","FIELD_CHANGED_KIND","FIELD_REMOVED","TYPE_CHANGED_KIND","TYPE_REMOVED","TYPE_REMOVED_FROM_UNION","VALUE_REMOVED_FROM_ENUM","ARG_REMOVED","ARG_CHANGED_KIND","NON_NULL_ARG_ADDED","NON_NULL_INPUT_FIELD_ADDED","INTERFACE_REMOVED_FROM_OBJECT","ARG_DEFAULT_VALUE_CHANGE","oldTypeMap","newTypeMap","oldType","newType","typeKindName","oldTypeFields","newTypeFields","oldArgDef","newArgDef","find","isChangeSafeForInputObjectFieldOrFieldArg","breakingFieldChanges","oldTypeFieldsDef","newTypeFieldsDef","oldFieldType","newFieldType","isChangeSafeForObjectOrInterfaceField","oldFieldTypeString","newFieldTypeString","findFieldsThatChangedTypeOnObjectOrInterfaceTypes","typesRemovedFromUnion","typeNamesInNewUnion","valuesRemovedFromEnums","valuesInNewEnum","oldInterfaces","newInterfaces","oldInterface","enumVal","params","optional","pluralize","define","pluralRules","singularRules","uncountables","irregularPlurals","irregularSingles","sanitizeRule","restoreCase","word","substr","toLowerCase","interpolate","sanitizeWord","replaceWord","replaceMap","keepMap","checkWord","bool","inclusive","singular","plural","isPlural","isSingular","addPluralRule","replacement","addSingularRule","addUncountableRule","addIrregularRule","single","originalModule","webpackPolyfill","l","symbolObservablePonyfill","_defineProperties","props","descriptor","_createClass","protoProps","staticProps","hasSymbols","hasSymbol","getSymbol","SymbolIterator","SymbolObservable","SymbolSpecies","getMethod","getSpecies","ctor","isObservable","hostReportError","log","enqueue","cleanupSubscription","_cleanup","closeSubscription","_queue","_state","notifySubscription","m","onNotify","queue","flushSubscription","subscriber","subscriptionObserver","SubscriptionObserver","_subscriber","_this2","_this3","_this4","C","hasSeed","_this5","_len","startNext","_this6","outer","completeIfDone","closed","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","_item","_len2","_key2","symbol","cmp","cycles","aobj","bobj","isFinite","out","seenIndex","templateObject_1","_a","buildVariablesImpl","buildGqlQueryImpl","getResponseParserImpl","QUERY_TYPES","GET_LIST","GET_MANY","GET_MANY_REFERENCE","GET_ONE","MUTATION_TYPES","CREATE","UPDATE","DELETE","UPDATE_MANY","DELETE_MANY","ALL_TYPES","__makeTemplateObject","cooked","INNER_QUERY_TYPES","resolveIntrospection","isResource","buildResource","filteredResources","resources","_b","gql","getIntrospectionQuery","includes","isResourceIncluded","exclude","isResourceExcluded","operationNames","aorFetchType","resource","getOptions","clientObject","clientOptions","buildQueryFactory","override","otherOptions","introspectionResults","buildQuery","raDataProvider","_c","merge","ApolloClient","uri","finalLink","finalCache","IntrospectionFragmentMatcher","HttpLink","InMemoryCache","buildApolloClient","overriddenBuildQuery","parseResponse_1","parseResponse","getQueryOperation","apolloQuery_1","response","apolloQuery","observeRequest","saga","getFinalType","isList","sanitizeValue","prepareParams","param","File","toISOString","realType","castType","buildGetListVariables","_d","_e","_f","_g","_h","ids","filterSome","type_1","resourceField_1","resourceField","type_2","isAList","pagination","page","perPage","sortField","sortOrder","order","isRequired","buildFragments","linkedType","gqlTypes","buildFields","startsWith","getArgType","required","buildArgs","validVariables","sanitizeResource","dataKey","preparedParams","buildCreateUpdateVariables","metaVariables","apolloArgs","buildApolloArgs","metaArgs","total","knownResources","resourceName","defaultBuildQuery","buildDataProvider","defaultDataProvider","otherParams_1","data_1","otherParams_2","fallbackHttpConfig","http","includeQuery","includeExtensions","headers","accept","throwServerError","statusCode","status","parseError","linkOptions","fetch","useGETForQueries","fetcher","linkConfig","requestOptions","fetchOptions","credentials","chosenURI","fallbackURI","contextURI","getContext","selectURI","clientAwarenessHeaders","controller","contextHeaders","contextConfig","fallbackConfig","configs","signal","AbortController","_controller","queryParams","addQueryParam","encodeURIComponent","serializedVariables","serializedExtensions","preFragment","fragmentStart","queryParamsPrefix","newURI","setContext","text","bodyText","abort"],"mappings":"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M/C,CACE,CAAC,MAAO,IACR,CAAC,SAAU,MACX,CAAC,gEAAiE,QAClE,CAAC,kCAAmC,OACpC,CAAC,QAAS,KACV,CAAC,uFAAwF,QACzF,CAAC,oBAAqB,QACtB,CAAC,aAAc,UACf,CAAC,sBAAuB,MACxB,CAAC,iFAAkF,MACnF,CAAC,qEAAsE,SACvE,CAAC,iCAAkC,MACnC,CAAC,oBAAqB,QACtB,CAAC,kGAAmG,QACpG,CAAC,yGAA0G,QAC3G,CAAC,8FAA+F,QAChG,CAAC,0BAA2B,OAC5B,CAAC,+BAAgC,QACjC,CAAC,sBAAuB,QACxB,CAAC,oBAAqB,UACtB,CAAC,eAAgB,MACjB,CAAC,YAAa,MACd,CAAC,QAAS,QACV3gC,SAAQ,SAAU2gC,GAClB,OAAOkgC,EAAU0B,gBAAgB5hC,EAAK,GAAIA,EAAK,OAMjD,CAEE,YACA,SACA,SACA,MACA,UACA,OACA,QACA,YACA,QACA,QACA,QACA,QACA,UACA,SACA,OACA,OACA,UACA,QACA,WACA,MACA,WACA,cACA,QACA,SACA,WACA,YACA,MACA,SACA,YACA,YACA,YACA,WACA,MACA,UACA,UACA,WACA,eACA,SACA,SACA,YACA,WACA,YACA,cACA,QACA,UACA,QACA,SACA,aACA,YACA,WACA,OACA,QACA,OACA,QACA,QACA,QACA,OACA,OACA,WACA,SACA,YACA,WACA,OACA,WACA,OACA,SACA,WACA,SACA,SACA,WACA,SACA,UACA,QACA,QACA,SACA,UACA,gBACA,QACA,OACA,SACA,UACA,UACA,aACA,WACA,MAEA,gBACA,SACA,SACA,YACA,WACA,QACA,WACA3gC,QAAQ6gE,EAAU2B,oBAEb3B,O,8evFxeT,WACA,WACA,cAO6B,WAPpB,WACT,WACA,cAKc,gBALL,gBAET,cAGS,MAHF,UACP,IAIA,cAGE,WAAY,sB,OACL,EAAO,QAAO,EAAO,MAAQ,IAAI,iBACjC,EAAO,OAAM,EAAO,KAAO,IAAI,WAAS,CAAE,IAAK,cACpD,YAAM,IAAO,KAEjB,OANU,OAMV,EARA,CAJA,QAMU,S,gCwFbVrZ,EAAOnuD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","file":"static/js/5.538f0467.chunk.js","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _GraphQLError = require('./GraphQLError');\n\nObject.defineProperty(exports, 'GraphQLError', {\n  enumerable: true,\n  get: function get() {\n    return _GraphQLError.GraphQLError;\n  }\n});\n\nvar _syntaxError = require('./syntaxError');\n\nObject.defineProperty(exports, 'syntaxError', {\n  enumerable: true,\n  get: function get() {\n    return _syntaxError.syntaxError;\n  }\n});\n\nvar _locatedError = require('./locatedError');\n\nObject.defineProperty(exports, 'locatedError', {\n  enumerable: true,\n  get: function get() {\n    return _locatedError.locatedError;\n  }\n});\n\nvar _formatError = require('./formatError');\n\nObject.defineProperty(exports, 'formatError', {\n  enumerable: true,\n  get: function get() {\n    return _formatError.formatError;\n  }\n});","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.GraphQLNonNull = exports.GraphQLList = exports.GraphQLInputObjectType = exports.GraphQLEnumType = exports.GraphQLUnionType = exports.GraphQLInterfaceType = exports.GraphQLObjectType = exports.GraphQLScalarType = undefined;\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nexports.isType = isType;\nexports.assertType = assertType;\nexports.isInputType = isInputType;\nexports.assertInputType = assertInputType;\nexports.isOutputType = isOutputType;\nexports.assertOutputType = assertOutputType;\nexports.isLeafType = isLeafType;\nexports.assertLeafType = assertLeafType;\nexports.isCompositeType = isCompositeType;\nexports.assertCompositeType = assertCompositeType;\nexports.isAbstractType = isAbstractType;\nexports.assertAbstractType = assertAbstractType;\nexports.getNullableType = getNullableType;\nexports.isNamedType = isNamedType;\nexports.assertNamedType = assertNamedType;\nexports.getNamedType = getNamedType;\n\nvar _invariant = require('../jsutils/invariant');\n\nvar _invariant2 = _interopRequireDefault(_invariant);\n\nvar _isNullish = require('../jsutils/isNullish');\n\nvar _isNullish2 = _interopRequireDefault(_isNullish);\n\nvar _kinds = require('../language/kinds');\n\nvar Kind = _interopRequireWildcard(_kinds);\n\nvar _assertValidName = require('../utilities/assertValidName');\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n/**\n *  Copyright (c) 2015, Facebook, Inc.\n *  All rights reserved.\n *\n *  This source code is licensed under the BSD-style license found in the\n *  LICENSE file in the root directory of this source tree. An additional grant\n *  of patent rights can be found in the PATENTS file in the same directory.\n */\n\n// Predicates & Assertions\n\n/**\n * These are all of the possible kinds of types.\n */\nfunction isType(type) {\n  return type instanceof GraphQLScalarType || type instanceof GraphQLObjectType || type instanceof GraphQLInterfaceType || type instanceof GraphQLUnionType || type instanceof GraphQLEnumType || type instanceof GraphQLInputObjectType || type instanceof GraphQLList || type instanceof GraphQLNonNull;\n}\n\nfunction assertType(type) {\n  !isType(type) ? (0, _invariant2.default)(0, 'Expected ' + String(type) + ' to be a GraphQL type.') : void 0;\n  return type;\n}\n\n/**\n * These types may be used as input types for arguments and directives.\n */\nfunction isInputType(type) {\n  return type instanceof GraphQLScalarType || type instanceof GraphQLEnumType || type instanceof GraphQLInputObjectType || type instanceof GraphQLNonNull && isInputType(type.ofType) || type instanceof GraphQLList && isInputType(type.ofType);\n}\n\nfunction assertInputType(type) {\n  !isInputType(type) ? (0, _invariant2.default)(0, 'Expected ' + String(type) + ' to be a GraphQL input type.') : void 0;\n  return type;\n}\n\n/**\n * These types may be used as output types as the result of fields.\n */\nfunction isOutputType(type) {\n  return type instanceof GraphQLScalarType || type instanceof GraphQLObjectType || type instanceof GraphQLInterfaceType || type instanceof GraphQLUnionType || type instanceof GraphQLEnumType || type instanceof GraphQLNonNull && isOutputType(type.ofType) || type instanceof GraphQLList && isOutputType(type.ofType);\n}\n\nfunction assertOutputType(type) {\n  !isOutputType(type) ? (0, _invariant2.default)(0, 'Expected ' + String(type) + ' to be a GraphQL output type.') : void 0;\n  return type;\n}\n\n/**\n * These types may describe types which may be leaf values.\n */\nfunction isLeafType(type) {\n  return type instanceof GraphQLScalarType || type instanceof GraphQLEnumType;\n}\n\nfunction assertLeafType(type) {\n  !isLeafType(type) ? (0, _invariant2.default)(0, 'Expected ' + String(type) + ' to be a GraphQL leaf type.') : void 0;\n  return type;\n}\n\n/**\n * These types may describe the parent context of a selection set.\n */\nfunction isCompositeType(type) {\n  return type instanceof GraphQLObjectType || type instanceof GraphQLInterfaceType || type instanceof GraphQLUnionType;\n}\n\nfunction assertCompositeType(type) {\n  !isCompositeType(type) ? (0, _invariant2.default)(0, 'Expected ' + String(type) + ' to be a GraphQL composite type.') : void 0;\n  return type;\n}\n\n/**\n * These types may describe the parent context of a selection set.\n */\nfunction isAbstractType(type) {\n  return type instanceof GraphQLInterfaceType || type instanceof GraphQLUnionType;\n}\n\nfunction assertAbstractType(type) {\n  !isAbstractType(type) ? (0, _invariant2.default)(0, 'Expected ' + String(type) + ' to be a GraphQL abstract type.') : void 0;\n  return type;\n}\n\n/**\n * These types can all accept null as a value.\n */\nfunction getNullableType(type) {\n  return type instanceof GraphQLNonNull ? type.ofType : type;\n}\n\n/**\n * These named types do not include modifiers like List or NonNull.\n */\nfunction isNamedType(type) {\n  return type instanceof GraphQLScalarType || type instanceof GraphQLObjectType || type instanceof GraphQLInterfaceType || type instanceof GraphQLUnionType || type instanceof GraphQLEnumType || type instanceof GraphQLInputObjectType;\n}\n\nfunction assertNamedType(type) {\n  !isNamedType(type) ? (0, _invariant2.default)(0, 'Expected ' + String(type) + ' to be a GraphQL named type.') : void 0;\n  return type;\n}\n\n/* eslint-disable no-redeclare */\nfunction getNamedType(type) {\n  /* eslint-enable no-redeclare */\n  if (type) {\n    var unmodifiedType = type;\n    while (unmodifiedType instanceof GraphQLList || unmodifiedType instanceof GraphQLNonNull) {\n      unmodifiedType = unmodifiedType.ofType;\n    }\n    return unmodifiedType;\n  }\n}\n\n/**\n * Used while defining GraphQL types to allow for circular references in\n * otherwise immutable type definitions.\n */\n\n\nfunction resolveThunk(thunk) {\n  return typeof thunk === 'function' ? thunk() : thunk;\n}\n\n/**\n * Scalar Type Definition\n *\n * The leaf values of any request and input values to arguments are\n * Scalars (or Enums) and are defined with a name and a series of functions\n * used to parse input from ast or variables and to ensure validity.\n *\n * Example:\n *\n *     const OddType = new GraphQLScalarType({\n *       name: 'Odd',\n *       serialize(value) {\n *         return value % 2 === 1 ? value : null;\n *       }\n *     });\n *\n */\n\nvar GraphQLScalarType = exports.GraphQLScalarType = function () {\n  function GraphQLScalarType(config) {\n    _classCallCheck(this, GraphQLScalarType);\n\n    (0, _assertValidName.assertValidName)(config.name);\n    this.name = config.name;\n    this.description = config.description;\n    this.astNode = config.astNode;\n    !(typeof config.serialize === 'function') ? (0, _invariant2.default)(0, this.name + ' must provide \"serialize\" function. If this custom Scalar ' + 'is also used as an input type, ensure \"parseValue\" and \"parseLiteral\" ' + 'functions are also provided.') : void 0;\n    if (config.parseValue || config.parseLiteral) {\n      !(typeof config.parseValue === 'function' && typeof config.parseLiteral === 'function') ? (0, _invariant2.default)(0, this.name + ' must provide both \"parseValue\" and \"parseLiteral\" ' + 'functions.') : void 0;\n    }\n    this._scalarConfig = config;\n  }\n\n  // Serializes an internal value to include in a response.\n\n\n  GraphQLScalarType.prototype.serialize = function serialize(value) {\n    var serializer = this._scalarConfig.serialize;\n    return serializer(value);\n  };\n\n  // Determines if an internal value is valid for this type.\n  // Equivalent to checking for if the parsedValue is nullish.\n\n\n  GraphQLScalarType.prototype.isValidValue = function isValidValue(value) {\n    return !(0, _isNullish2.default)(this.parseValue(value));\n  };\n\n  // Parses an externally provided value to use as an input.\n\n\n  GraphQLScalarType.prototype.parseValue = function parseValue(value) {\n    var parser = this._scalarConfig.parseValue;\n    return parser && !(0, _isNullish2.default)(value) ? parser(value) : undefined;\n  };\n\n  // Determines if an internal value is valid for this type.\n  // Equivalent to checking for if the parsedLiteral is nullish.\n\n\n  GraphQLScalarType.prototype.isValidLiteral = function isValidLiteral(valueNode) {\n    return !(0, _isNullish2.default)(this.parseLiteral(valueNode));\n  };\n\n  // Parses an externally provided literal value to use as an input.\n\n\n  GraphQLScalarType.prototype.parseLiteral = function parseLiteral(valueNode) {\n    var parser = this._scalarConfig.parseLiteral;\n    return parser ? parser(valueNode) : undefined;\n  };\n\n  GraphQLScalarType.prototype.toString = function toString() {\n    return this.name;\n  };\n\n  return GraphQLScalarType;\n}();\n\n// Also provide toJSON and inspect aliases for toString.\n\n\nGraphQLScalarType.prototype.toJSON = GraphQLScalarType.prototype.inspect = GraphQLScalarType.prototype.toString;\n\n/**\n * Object Type Definition\n *\n * Almost all of the GraphQL types you define will be object types. Object types\n * have a name, but most importantly describe their fields.\n *\n * Example:\n *\n *     const AddressType = new GraphQLObjectType({\n *       name: 'Address',\n *       fields: {\n *         street: { type: GraphQLString },\n *         number: { type: GraphQLInt },\n *         formatted: {\n *           type: GraphQLString,\n *           resolve(obj) {\n *             return obj.number + ' ' + obj.street\n *           }\n *         }\n *       }\n *     });\n *\n * When two types need to refer to each other, or a type needs to refer to\n * itself in a field, you can use a function expression (aka a closure or a\n * thunk) to supply the fields lazily.\n *\n * Example:\n *\n *     const PersonType = new GraphQLObjectType({\n *       name: 'Person',\n *       fields: () => ({\n *         name: { type: GraphQLString },\n *         bestFriend: { type: PersonType },\n *       })\n *     });\n *\n */\nvar GraphQLObjectType = exports.GraphQLObjectType = function () {\n  function GraphQLObjectType(config) {\n    _classCallCheck(this, GraphQLObjectType);\n\n    (0, _assertValidName.assertValidName)(config.name, config.isIntrospection);\n    this.name = config.name;\n    this.description = config.description;\n    this.astNode = config.astNode;\n    this.extensionASTNodes = config.extensionASTNodes || [];\n    if (config.isTypeOf) {\n      !(typeof config.isTypeOf === 'function') ? (0, _invariant2.default)(0, this.name + ' must provide \"isTypeOf\" as a function.') : void 0;\n    }\n    this.isTypeOf = config.isTypeOf;\n    this._typeConfig = config;\n  }\n\n  GraphQLObjectType.prototype.getFields = function getFields() {\n    return this._fields || (this._fields = defineFieldMap(this, this._typeConfig.fields));\n  };\n\n  GraphQLObjectType.prototype.getInterfaces = function getInterfaces() {\n    return this._interfaces || (this._interfaces = defineInterfaces(this, this._typeConfig.interfaces));\n  };\n\n  GraphQLObjectType.prototype.toString = function toString() {\n    return this.name;\n  };\n\n  return GraphQLObjectType;\n}();\n\n// Also provide toJSON and inspect aliases for toString.\n\n\nGraphQLObjectType.prototype.toJSON = GraphQLObjectType.prototype.inspect = GraphQLObjectType.prototype.toString;\n\nfunction defineInterfaces(type, interfacesThunk) {\n  var interfaces = resolveThunk(interfacesThunk);\n  if (!interfaces) {\n    return [];\n  }\n  !Array.isArray(interfaces) ? (0, _invariant2.default)(0, type.name + ' interfaces must be an Array or a function which returns ' + 'an Array.') : void 0;\n\n  var implementedTypeNames = Object.create(null);\n  interfaces.forEach(function (iface) {\n    !(iface instanceof GraphQLInterfaceType) ? (0, _invariant2.default)(0, type.name + ' may only implement Interface types, it cannot ' + ('implement: ' + String(iface) + '.')) : void 0;\n    !!implementedTypeNames[iface.name] ? (0, _invariant2.default)(0, type.name + ' may declare it implements ' + iface.name + ' only once.') : void 0;\n    implementedTypeNames[iface.name] = true;\n    if (typeof iface.resolveType !== 'function') {\n      !(typeof type.isTypeOf === 'function') ? (0, _invariant2.default)(0, 'Interface Type ' + iface.name + ' does not provide a \"resolveType\" ' + ('function and implementing Type ' + type.name + ' does not provide a ') + '\"isTypeOf\" function. There is no way to resolve this implementing ' + 'type during execution.') : void 0;\n    }\n  });\n  return interfaces;\n}\n\nfunction defineFieldMap(type, fieldsThunk) {\n  var fieldMap = resolveThunk(fieldsThunk);\n  !isPlainObj(fieldMap) ? (0, _invariant2.default)(0, type.name + ' fields must be an object with field names as keys or a ' + 'function which returns such an object.') : void 0;\n\n  var fieldNames = Object.keys(fieldMap);\n  !(fieldNames.length > 0) ? (0, _invariant2.default)(0, type.name + ' fields must be an object with field names as keys or a ' + 'function which returns such an object.') : void 0;\n\n  var resultFieldMap = Object.create(null);\n  fieldNames.forEach(function (fieldName) {\n    (0, _assertValidName.assertValidName)(fieldName);\n    var fieldConfig = fieldMap[fieldName];\n    !isPlainObj(fieldConfig) ? (0, _invariant2.default)(0, type.name + '.' + fieldName + ' field config must be an object') : void 0;\n    !!fieldConfig.hasOwnProperty('isDeprecated') ? (0, _invariant2.default)(0, type.name + '.' + fieldName + ' should provide \"deprecationReason\" instead ' + 'of \"isDeprecated\".') : void 0;\n    var field = _extends({}, fieldConfig, {\n      isDeprecated: Boolean(fieldConfig.deprecationReason),\n      name: fieldName\n    });\n    !isOutputType(field.type) ? (0, _invariant2.default)(0, type.name + '.' + fieldName + ' field type must be Output Type but ' + ('got: ' + String(field.type) + '.')) : void 0;\n    !isValidResolver(field.resolve) ? (0, _invariant2.default)(0, type.name + '.' + fieldName + ' field resolver must be a function if ' + ('provided, but got: ' + String(field.resolve) + '.')) : void 0;\n    var argsConfig = fieldConfig.args;\n    if (!argsConfig) {\n      field.args = [];\n    } else {\n      !isPlainObj(argsConfig) ? (0, _invariant2.default)(0, type.name + '.' + fieldName + ' args must be an object with argument ' + 'names as keys.') : void 0;\n      field.args = Object.keys(argsConfig).map(function (argName) {\n        (0, _assertValidName.assertValidName)(argName);\n        var arg = argsConfig[argName];\n        !isInputType(arg.type) ? (0, _invariant2.default)(0, type.name + '.' + fieldName + '(' + argName + ':) argument type must be ' + ('Input Type but got: ' + String(arg.type) + '.')) : void 0;\n        return {\n          name: argName,\n          description: arg.description === undefined ? null : arg.description,\n          type: arg.type,\n          defaultValue: arg.defaultValue,\n          astNode: arg.astNode\n        };\n      });\n    }\n    resultFieldMap[fieldName] = field;\n  });\n  return resultFieldMap;\n}\n\nfunction isPlainObj(obj) {\n  return obj && (typeof obj === 'undefined' ? 'undefined' : _typeof(obj)) === 'object' && !Array.isArray(obj);\n}\n\n// If a resolver is defined, it must be a function.\nfunction isValidResolver(resolver) {\n  return resolver == null || typeof resolver === 'function';\n}\n\n/**\n * Interface Type Definition\n *\n * When a field can return one of a heterogeneous set of types, a Interface type\n * is used to describe what types are possible, what fields are in common across\n * all types, as well as a function to determine which type is actually used\n * when the field is resolved.\n *\n * Example:\n *\n *     const EntityType = new GraphQLInterfaceType({\n *       name: 'Entity',\n *       fields: {\n *         name: { type: GraphQLString }\n *       }\n *     });\n *\n */\nvar GraphQLInterfaceType = exports.GraphQLInterfaceType = function () {\n  function GraphQLInterfaceType(config) {\n    _classCallCheck(this, GraphQLInterfaceType);\n\n    (0, _assertValidName.assertValidName)(config.name);\n    this.name = config.name;\n    this.description = config.description;\n    this.astNode = config.astNode;\n    if (config.resolveType) {\n      !(typeof config.resolveType === 'function') ? (0, _invariant2.default)(0, this.name + ' must provide \"resolveType\" as a function.') : void 0;\n    }\n    this.resolveType = config.resolveType;\n    this._typeConfig = config;\n  }\n\n  GraphQLInterfaceType.prototype.getFields = function getFields() {\n    return this._fields || (this._fields = defineFieldMap(this, this._typeConfig.fields));\n  };\n\n  GraphQLInterfaceType.prototype.toString = function toString() {\n    return this.name;\n  };\n\n  return GraphQLInterfaceType;\n}();\n\n// Also provide toJSON and inspect aliases for toString.\n\n\nGraphQLInterfaceType.prototype.toJSON = GraphQLInterfaceType.prototype.inspect = GraphQLInterfaceType.prototype.toString;\n\n/**\n * Union Type Definition\n *\n * When a field can return one of a heterogeneous set of types, a Union type\n * is used to describe what types are possible as well as providing a function\n * to determine which type is actually used when the field is resolved.\n *\n * Example:\n *\n *     const PetType = new GraphQLUnionType({\n *       name: 'Pet',\n *       types: [ DogType, CatType ],\n *       resolveType(value) {\n *         if (value instanceof Dog) {\n *           return DogType;\n *         }\n *         if (value instanceof Cat) {\n *           return CatType;\n *         }\n *       }\n *     });\n *\n */\nvar GraphQLUnionType = exports.GraphQLUnionType = function () {\n  function GraphQLUnionType(config) {\n    _classCallCheck(this, GraphQLUnionType);\n\n    (0, _assertValidName.assertValidName)(config.name);\n    this.name = config.name;\n    this.description = config.description;\n    this.astNode = config.astNode;\n    if (config.resolveType) {\n      !(typeof config.resolveType === 'function') ? (0, _invariant2.default)(0, this.name + ' must provide \"resolveType\" as a function.') : void 0;\n    }\n    this.resolveType = config.resolveType;\n    this._typeConfig = config;\n  }\n\n  GraphQLUnionType.prototype.getTypes = function getTypes() {\n    return this._types || (this._types = defineTypes(this, this._typeConfig.types));\n  };\n\n  GraphQLUnionType.prototype.toString = function toString() {\n    return this.name;\n  };\n\n  return GraphQLUnionType;\n}();\n\n// Also provide toJSON and inspect aliases for toString.\n\n\nGraphQLUnionType.prototype.toJSON = GraphQLUnionType.prototype.inspect = GraphQLUnionType.prototype.toString;\n\nfunction defineTypes(unionType, typesThunk) {\n  var types = resolveThunk(typesThunk);\n\n  !(Array.isArray(types) && types.length > 0) ? (0, _invariant2.default)(0, 'Must provide Array of types or a function which returns ' + ('such an array for Union ' + unionType.name + '.')) : void 0;\n  var includedTypeNames = Object.create(null);\n  types.forEach(function (objType) {\n    !(objType instanceof GraphQLObjectType) ? (0, _invariant2.default)(0, unionType.name + ' may only contain Object types, it cannot contain: ' + (String(objType) + '.')) : void 0;\n    !!includedTypeNames[objType.name] ? (0, _invariant2.default)(0, unionType.name + ' can include ' + objType.name + ' type only once.') : void 0;\n    includedTypeNames[objType.name] = true;\n    if (typeof unionType.resolveType !== 'function') {\n      !(typeof objType.isTypeOf === 'function') ? (0, _invariant2.default)(0, 'Union type \"' + unionType.name + '\" does not provide a \"resolveType\" ' + ('function and possible type \"' + objType.name + '\" does not provide an ') + '\"isTypeOf\" function. There is no way to resolve this possible type ' + 'during execution.') : void 0;\n    }\n  });\n\n  return types;\n}\n\n/**\n * Enum Type Definition\n *\n * Some leaf values of requests and input values are Enums. GraphQL serializes\n * Enum values as strings, however internally Enums can be represented by any\n * kind of type, often integers.\n *\n * Example:\n *\n *     const RGBType = new GraphQLEnumType({\n *       name: 'RGB',\n *       values: {\n *         RED: { value: 0 },\n *         GREEN: { value: 1 },\n *         BLUE: { value: 2 }\n *       }\n *     });\n *\n * Note: If a value is not provided in a definition, the name of the enum value\n * will be used as its internal value.\n */\nvar GraphQLEnumType /* <T> */ = exports.GraphQLEnumType = function () {\n  function GraphQLEnumType(config /* <T> */) {\n    _classCallCheck(this, GraphQLEnumType);\n\n    this.name = config.name;\n    (0, _assertValidName.assertValidName)(config.name, config.isIntrospection);\n    this.description = config.description;\n    this.astNode = config.astNode;\n    this._values = defineEnumValues(this, config.values);\n    this._enumConfig = config;\n  }\n\n  GraphQLEnumType.prototype.getValues = function getValues() {\n    return this._values;\n  };\n\n  GraphQLEnumType.prototype.getValue = function getValue(name) {\n    return this._getNameLookup()[name];\n  };\n\n  GraphQLEnumType.prototype.serialize = function serialize(value /* T */) {\n    var enumValue = this._getValueLookup().get(value);\n    return enumValue ? enumValue.name : null;\n  };\n\n  GraphQLEnumType.prototype.isValidValue = function isValidValue(value) {\n    return typeof value === 'string' && this._getNameLookup()[value] !== undefined;\n  };\n\n  GraphQLEnumType.prototype.parseValue = function parseValue(value) /* T */{\n    if (typeof value === 'string') {\n      var enumValue = this._getNameLookup()[value];\n      if (enumValue) {\n        return enumValue.value;\n      }\n    }\n  };\n\n  GraphQLEnumType.prototype.isValidLiteral = function isValidLiteral(valueNode) {\n    return valueNode.kind === Kind.ENUM && this._getNameLookup()[valueNode.value] !== undefined;\n  };\n\n  GraphQLEnumType.prototype.parseLiteral = function parseLiteral(valueNode) /* T */{\n    if (valueNode.kind === Kind.ENUM) {\n      var enumValue = this._getNameLookup()[valueNode.value];\n      if (enumValue) {\n        return enumValue.value;\n      }\n    }\n  };\n\n  GraphQLEnumType.prototype._getValueLookup = function _getValueLookup() {\n    if (!this._valueLookup) {\n      var lookup = new Map();\n      this.getValues().forEach(function (value) {\n        lookup.set(value.value, value);\n      });\n      this._valueLookup = lookup;\n    }\n    return this._valueLookup;\n  };\n\n  GraphQLEnumType.prototype._getNameLookup = function _getNameLookup() {\n    if (!this._nameLookup) {\n      var lookup = Object.create(null);\n      this.getValues().forEach(function (value) {\n        lookup[value.name] = value;\n      });\n      this._nameLookup = lookup;\n    }\n    return this._nameLookup;\n  };\n\n  GraphQLEnumType.prototype.toString = function toString() {\n    return this.name;\n  };\n\n  return GraphQLEnumType;\n}();\n\n// Also provide toJSON and inspect aliases for toString.\n\n\nGraphQLEnumType.prototype.toJSON = GraphQLEnumType.prototype.inspect = GraphQLEnumType.prototype.toString;\n\nfunction defineEnumValues(type, valueMap /* <T> */\n) {\n  !isPlainObj(valueMap) ? (0, _invariant2.default)(0, type.name + ' values must be an object with value names as keys.') : void 0;\n  var valueNames = Object.keys(valueMap);\n  !(valueNames.length > 0) ? (0, _invariant2.default)(0, type.name + ' values must be an object with value names as keys.') : void 0;\n  return valueNames.map(function (valueName) {\n    (0, _assertValidName.assertValidName)(valueName);\n    !(['true', 'false', 'null'].indexOf(valueName) === -1) ? (0, _invariant2.default)(0, 'Name \"' + valueName + '\" can not be used as an Enum value.') : void 0;\n\n    var value = valueMap[valueName];\n    !isPlainObj(value) ? (0, _invariant2.default)(0, type.name + '.' + valueName + ' must refer to an object with a \"value\" key ' + ('representing an internal value but got: ' + String(value) + '.')) : void 0;\n    !!value.hasOwnProperty('isDeprecated') ? (0, _invariant2.default)(0, type.name + '.' + valueName + ' should provide \"deprecationReason\" instead ' + 'of \"isDeprecated\".') : void 0;\n    return {\n      name: valueName,\n      description: value.description,\n      isDeprecated: Boolean(value.deprecationReason),\n      deprecationReason: value.deprecationReason,\n      astNode: value.astNode,\n      value: value.hasOwnProperty('value') ? value.value : valueName\n    };\n  });\n} /* <T> */\n\n\n/**\n * Input Object Type Definition\n *\n * An input object defines a structured collection of fields which may be\n * supplied to a field argument.\n *\n * Using `NonNull` will ensure that a value must be provided by the query\n *\n * Example:\n *\n *     const GeoPoint = new GraphQLInputObjectType({\n *       name: 'GeoPoint',\n *       fields: {\n *         lat: { type: new GraphQLNonNull(GraphQLFloat) },\n *         lon: { type: new GraphQLNonNull(GraphQLFloat) },\n *         alt: { type: GraphQLFloat, defaultValue: 0 },\n *       }\n *     });\n *\n */\nvar GraphQLInputObjectType = exports.GraphQLInputObjectType = function () {\n  function GraphQLInputObjectType(config) {\n    _classCallCheck(this, GraphQLInputObjectType);\n\n    (0, _assertValidName.assertValidName)(config.name);\n    this.name = config.name;\n    this.description = config.description;\n    this.astNode = config.astNode;\n    this._typeConfig = config;\n  }\n\n  GraphQLInputObjectType.prototype.getFields = function getFields() {\n    return this._fields || (this._fields = this._defineFieldMap());\n  };\n\n  GraphQLInputObjectType.prototype._defineFieldMap = function _defineFieldMap() {\n    var _this = this;\n\n    var fieldMap = resolveThunk(this._typeConfig.fields);\n    !isPlainObj(fieldMap) ? (0, _invariant2.default)(0, this.name + ' fields must be an object with field names as keys or a ' + 'function which returns such an object.') : void 0;\n    var fieldNames = Object.keys(fieldMap);\n    !(fieldNames.length > 0) ? (0, _invariant2.default)(0, this.name + ' fields must be an object with field names as keys or a ' + 'function which returns such an object.') : void 0;\n    var resultFieldMap = Object.create(null);\n    fieldNames.forEach(function (fieldName) {\n      (0, _assertValidName.assertValidName)(fieldName);\n      var field = _extends({}, fieldMap[fieldName], {\n        name: fieldName\n      });\n      !isInputType(field.type) ? (0, _invariant2.default)(0, _this.name + '.' + fieldName + ' field type must be Input Type but ' + ('got: ' + String(field.type) + '.')) : void 0;\n      !(field.resolve == null) ? (0, _invariant2.default)(0, _this.name + '.' + fieldName + ' field type has a resolve property, but ' + 'Input Types cannot define resolvers.') : void 0;\n      resultFieldMap[fieldName] = field;\n    });\n    return resultFieldMap;\n  };\n\n  GraphQLInputObjectType.prototype.toString = function toString() {\n    return this.name;\n  };\n\n  return GraphQLInputObjectType;\n}();\n\n// Also provide toJSON and inspect aliases for toString.\n\n\nGraphQLInputObjectType.prototype.toJSON = GraphQLInputObjectType.prototype.inspect = GraphQLInputObjectType.prototype.toString;\n\n/**\n * List Modifier\n *\n * A list is a kind of type marker, a wrapping type which points to another\n * type. Lists are often created within the context of defining the fields of\n * an object type.\n *\n * Example:\n *\n *     const PersonType = new GraphQLObjectType({\n *       name: 'Person',\n *       fields: () => ({\n *         parents: { type: new GraphQLList(Person) },\n *         children: { type: new GraphQLList(Person) },\n *       })\n *     })\n *\n */\nvar GraphQLList = exports.GraphQLList = function () {\n  function GraphQLList(type) {\n    _classCallCheck(this, GraphQLList);\n\n    !isType(type) ? (0, _invariant2.default)(0, 'Can only create List of a GraphQLType but got: ' + String(type) + '.') : void 0;\n    this.ofType = type;\n  }\n\n  GraphQLList.prototype.toString = function toString() {\n    return '[' + String(this.ofType) + ']';\n  };\n\n  return GraphQLList;\n}();\n\n// Also provide toJSON and inspect aliases for toString.\n\n\nGraphQLList.prototype.toJSON = GraphQLList.prototype.inspect = GraphQLList.prototype.toString;\n\n/**\n * Non-Null Modifier\n *\n * A non-null is a kind of type marker, a wrapping type which points to another\n * type. Non-null types enforce that their values are never null and can ensure\n * an error is raised if this ever occurs during a request. It is useful for\n * fields which you can make a strong guarantee on non-nullability, for example\n * usually the id field of a database row will never be null.\n *\n * Example:\n *\n *     const RowType = new GraphQLObjectType({\n *       name: 'Row',\n *       fields: () => ({\n *         id: { type: new GraphQLNonNull(GraphQLString) },\n *       })\n *     })\n *\n * Note: the enforcement of non-nullability occurs within the executor.\n */\n\nvar GraphQLNonNull = exports.GraphQLNonNull = function () {\n  function GraphQLNonNull(type) {\n    _classCallCheck(this, GraphQLNonNull);\n\n    !(isType(type) && !(type instanceof GraphQLNonNull)) ? (0, _invariant2.default)(0, 'Can only create NonNull of a Nullable GraphQLType but got: ' + (String(type) + '.')) : void 0;\n    this.ofType = type;\n  }\n\n  GraphQLNonNull.prototype.toString = function toString() {\n    return this.ofType.toString() + '!';\n  };\n\n  return GraphQLNonNull;\n}();\n\n// Also provide toJSON and inspect aliases for toString.\n\n\nGraphQLNonNull.prototype.toJSON = GraphQLNonNull.prototype.inspect = GraphQLNonNull.prototype.toString;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = invariant;\n\n/**\n *  Copyright (c) 2015, Facebook, Inc.\n *  All rights reserved.\n *\n *  This source code is licensed under the BSD-style license found in the\n *  LICENSE file in the root directory of this source tree. An additional grant\n *  of patent rights can be found in the PATENTS file in the same directory.\n */\n\nfunction invariant(condition, message) {\n  if (!condition) {\n    throw new Error(message);\n  }\n}","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\n/**\n *  Copyright (c) 2015, Facebook, Inc.\n *  All rights reserved.\n *\n *  This source code is licensed under the BSD-style license found in the\n *  LICENSE file in the root directory of this source tree. An additional grant\n *  of patent rights can be found in the PATENTS file in the same directory.\n */\n\n// Name\n\nvar NAME = exports.NAME = 'Name';\n\n// Document\n\nvar DOCUMENT = exports.DOCUMENT = 'Document';\nvar OPERATION_DEFINITION = exports.OPERATION_DEFINITION = 'OperationDefinition';\nvar VARIABLE_DEFINITION = exports.VARIABLE_DEFINITION = 'VariableDefinition';\nvar VARIABLE = exports.VARIABLE = 'Variable';\nvar SELECTION_SET = exports.SELECTION_SET = 'SelectionSet';\nvar FIELD = exports.FIELD = 'Field';\nvar ARGUMENT = exports.ARGUMENT = 'Argument';\n\n// Fragments\n\nvar FRAGMENT_SPREAD = exports.FRAGMENT_SPREAD = 'FragmentSpread';\nvar INLINE_FRAGMENT = exports.INLINE_FRAGMENT = 'InlineFragment';\nvar FRAGMENT_DEFINITION = exports.FRAGMENT_DEFINITION = 'FragmentDefinition';\n\n// Values\n\nvar INT = exports.INT = 'IntValue';\nvar FLOAT = exports.FLOAT = 'FloatValue';\nvar STRING = exports.STRING = 'StringValue';\nvar BOOLEAN = exports.BOOLEAN = 'BooleanValue';\nvar NULL = exports.NULL = 'NullValue';\nvar ENUM = exports.ENUM = 'EnumValue';\nvar LIST = exports.LIST = 'ListValue';\nvar OBJECT = exports.OBJECT = 'ObjectValue';\nvar OBJECT_FIELD = exports.OBJECT_FIELD = 'ObjectField';\n\n// Directives\n\nvar DIRECTIVE = exports.DIRECTIVE = 'Directive';\n\n// Types\n\nvar NAMED_TYPE = exports.NAMED_TYPE = 'NamedType';\nvar LIST_TYPE = exports.LIST_TYPE = 'ListType';\nvar NON_NULL_TYPE = exports.NON_NULL_TYPE = 'NonNullType';\n\n// Type System Definitions\n\nvar SCHEMA_DEFINITION = exports.SCHEMA_DEFINITION = 'SchemaDefinition';\nvar OPERATION_TYPE_DEFINITION = exports.OPERATION_TYPE_DEFINITION = 'OperationTypeDefinition';\n\n// Type Definitions\n\nvar SCALAR_TYPE_DEFINITION = exports.SCALAR_TYPE_DEFINITION = 'ScalarTypeDefinition';\nvar OBJECT_TYPE_DEFINITION = exports.OBJECT_TYPE_DEFINITION = 'ObjectTypeDefinition';\nvar FIELD_DEFINITION = exports.FIELD_DEFINITION = 'FieldDefinition';\nvar INPUT_VALUE_DEFINITION = exports.INPUT_VALUE_DEFINITION = 'InputValueDefinition';\nvar INTERFACE_TYPE_DEFINITION = exports.INTERFACE_TYPE_DEFINITION = 'InterfaceTypeDefinition';\nvar UNION_TYPE_DEFINITION = exports.UNION_TYPE_DEFINITION = 'UnionTypeDefinition';\nvar ENUM_TYPE_DEFINITION = exports.ENUM_TYPE_DEFINITION = 'EnumTypeDefinition';\nvar ENUM_VALUE_DEFINITION = exports.ENUM_VALUE_DEFINITION = 'EnumValueDefinition';\nvar INPUT_OBJECT_TYPE_DEFINITION = exports.INPUT_OBJECT_TYPE_DEFINITION = 'InputObjectTypeDefinition';\n\n// Type Extensions\n\nvar TYPE_EXTENSION_DEFINITION = exports.TYPE_EXTENSION_DEFINITION = 'TypeExtensionDefinition';\n\n// Directive Definitions\n\nvar DIRECTIVE_DEFINITION = exports.DIRECTIVE_DEFINITION = 'DirectiveDefinition';","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.print = print;\n\nvar _visitor = require('./visitor');\n\n/**\n * Converts an AST into a string, using one set of reasonable\n * formatting rules.\n */\nfunction print(ast) {\n  return (0, _visitor.visit)(ast, { leave: printDocASTReducer });\n} /**\n   *  Copyright (c) 2015, Facebook, Inc.\n   *  All rights reserved.\n   *\n   *  This source code is licensed under the BSD-style license found in the\n   *  LICENSE file in the root directory of this source tree. An additional grant\n   *  of patent rights can be found in the PATENTS file in the same directory.\n   */\n\nvar printDocASTReducer = {\n  Name: function Name(node) {\n    return node.value;\n  },\n  Variable: function Variable(node) {\n    return '$' + node.name;\n  },\n\n  // Document\n\n  Document: function Document(node) {\n    return join(node.definitions, '\\n\\n') + '\\n';\n  },\n\n  OperationDefinition: function OperationDefinition(node) {\n    var op = node.operation;\n    var name = node.name;\n    var varDefs = wrap('(', join(node.variableDefinitions, ', '), ')');\n    var directives = join(node.directives, ' ');\n    var selectionSet = node.selectionSet;\n    // Anonymous queries with no directives or variable definitions can use\n    // the query short form.\n    return !name && !directives && !varDefs && op === 'query' ? selectionSet : join([op, join([name, varDefs]), directives, selectionSet], ' ');\n  },\n\n\n  VariableDefinition: function VariableDefinition(_ref) {\n    var variable = _ref.variable,\n        type = _ref.type,\n        defaultValue = _ref.defaultValue;\n    return variable + ': ' + type + wrap(' = ', defaultValue);\n  },\n\n  SelectionSet: function SelectionSet(_ref2) {\n    var selections = _ref2.selections;\n    return block(selections);\n  },\n\n  Field: function Field(_ref3) {\n    var alias = _ref3.alias,\n        name = _ref3.name,\n        args = _ref3.arguments,\n        directives = _ref3.directives,\n        selectionSet = _ref3.selectionSet;\n    return join([wrap('', alias, ': ') + name + wrap('(', join(args, ', '), ')'), join(directives, ' '), selectionSet], ' ');\n  },\n\n  Argument: function Argument(_ref4) {\n    var name = _ref4.name,\n        value = _ref4.value;\n    return name + ': ' + value;\n  },\n\n  // Fragments\n\n  FragmentSpread: function FragmentSpread(_ref5) {\n    var name = _ref5.name,\n        directives = _ref5.directives;\n    return '...' + name + wrap(' ', join(directives, ' '));\n  },\n\n  InlineFragment: function InlineFragment(_ref6) {\n    var typeCondition = _ref6.typeCondition,\n        directives = _ref6.directives,\n        selectionSet = _ref6.selectionSet;\n    return join(['...', wrap('on ', typeCondition), join(directives, ' '), selectionSet], ' ');\n  },\n\n  FragmentDefinition: function FragmentDefinition(_ref7) {\n    var name = _ref7.name,\n        typeCondition = _ref7.typeCondition,\n        directives = _ref7.directives,\n        selectionSet = _ref7.selectionSet;\n    return 'fragment ' + name + ' on ' + typeCondition + ' ' + wrap('', join(directives, ' '), ' ') + selectionSet;\n  },\n\n  // Value\n\n  IntValue: function IntValue(_ref8) {\n    var value = _ref8.value;\n    return value;\n  },\n  FloatValue: function FloatValue(_ref9) {\n    var value = _ref9.value;\n    return value;\n  },\n  StringValue: function StringValue(_ref10) {\n    var value = _ref10.value;\n    return JSON.stringify(value);\n  },\n  BooleanValue: function BooleanValue(_ref11) {\n    var value = _ref11.value;\n    return JSON.stringify(value);\n  },\n  NullValue: function NullValue() {\n    return 'null';\n  },\n  EnumValue: function EnumValue(_ref12) {\n    var value = _ref12.value;\n    return value;\n  },\n  ListValue: function ListValue(_ref13) {\n    var values = _ref13.values;\n    return '[' + join(values, ', ') + ']';\n  },\n  ObjectValue: function ObjectValue(_ref14) {\n    var fields = _ref14.fields;\n    return '{' + join(fields, ', ') + '}';\n  },\n  ObjectField: function ObjectField(_ref15) {\n    var name = _ref15.name,\n        value = _ref15.value;\n    return name + ': ' + value;\n  },\n\n  // Directive\n\n  Directive: function Directive(_ref16) {\n    var name = _ref16.name,\n        args = _ref16.arguments;\n    return '@' + name + wrap('(', join(args, ', '), ')');\n  },\n\n  // Type\n\n  NamedType: function NamedType(_ref17) {\n    var name = _ref17.name;\n    return name;\n  },\n  ListType: function ListType(_ref18) {\n    var type = _ref18.type;\n    return '[' + type + ']';\n  },\n  NonNullType: function NonNullType(_ref19) {\n    var type = _ref19.type;\n    return type + '!';\n  },\n\n  // Type System Definitions\n\n  SchemaDefinition: function SchemaDefinition(_ref20) {\n    var directives = _ref20.directives,\n        operationTypes = _ref20.operationTypes;\n    return join(['schema', join(directives, ' '), block(operationTypes)], ' ');\n  },\n\n  OperationTypeDefinition: function OperationTypeDefinition(_ref21) {\n    var operation = _ref21.operation,\n        type = _ref21.type;\n    return operation + ': ' + type;\n  },\n\n  ScalarTypeDefinition: function ScalarTypeDefinition(_ref22) {\n    var name = _ref22.name,\n        directives = _ref22.directives;\n    return join(['scalar', name, join(directives, ' ')], ' ');\n  },\n\n  ObjectTypeDefinition: function ObjectTypeDefinition(_ref23) {\n    var name = _ref23.name,\n        interfaces = _ref23.interfaces,\n        directives = _ref23.directives,\n        fields = _ref23.fields;\n    return join(['type', name, wrap('implements ', join(interfaces, ', ')), join(directives, ' '), block(fields)], ' ');\n  },\n\n  FieldDefinition: function FieldDefinition(_ref24) {\n    var name = _ref24.name,\n        args = _ref24.arguments,\n        type = _ref24.type,\n        directives = _ref24.directives;\n    return name + wrap('(', join(args, ', '), ')') + ': ' + type + wrap(' ', join(directives, ' '));\n  },\n\n  InputValueDefinition: function InputValueDefinition(_ref25) {\n    var name = _ref25.name,\n        type = _ref25.type,\n        defaultValue = _ref25.defaultValue,\n        directives = _ref25.directives;\n    return join([name + ': ' + type, wrap('= ', defaultValue), join(directives, ' ')], ' ');\n  },\n\n  InterfaceTypeDefinition: function InterfaceTypeDefinition(_ref26) {\n    var name = _ref26.name,\n        directives = _ref26.directives,\n        fields = _ref26.fields;\n    return join(['interface', name, join(directives, ' '), block(fields)], ' ');\n  },\n\n  UnionTypeDefinition: function UnionTypeDefinition(_ref27) {\n    var name = _ref27.name,\n        directives = _ref27.directives,\n        types = _ref27.types;\n    return join(['union', name, join(directives, ' '), '= ' + join(types, ' | ')], ' ');\n  },\n\n  EnumTypeDefinition: function EnumTypeDefinition(_ref28) {\n    var name = _ref28.name,\n        directives = _ref28.directives,\n        values = _ref28.values;\n    return join(['enum', name, join(directives, ' '), block(values)], ' ');\n  },\n\n  EnumValueDefinition: function EnumValueDefinition(_ref29) {\n    var name = _ref29.name,\n        directives = _ref29.directives;\n    return join([name, join(directives, ' ')], ' ');\n  },\n\n  InputObjectTypeDefinition: function InputObjectTypeDefinition(_ref30) {\n    var name = _ref30.name,\n        directives = _ref30.directives,\n        fields = _ref30.fields;\n    return join(['input', name, join(directives, ' '), block(fields)], ' ');\n  },\n\n  TypeExtensionDefinition: function TypeExtensionDefinition(_ref31) {\n    var definition = _ref31.definition;\n    return 'extend ' + definition;\n  },\n\n  DirectiveDefinition: function DirectiveDefinition(_ref32) {\n    var name = _ref32.name,\n        args = _ref32.arguments,\n        locations = _ref32.locations;\n    return 'directive @' + name + wrap('(', join(args, ', '), ')') + ' on ' + join(locations, ' | ');\n  }\n};\n\n/**\n * Given maybeArray, print an empty string if it is null or empty, otherwise\n * print all items together separated by separator if provided\n */\nfunction join(maybeArray, separator) {\n  return maybeArray ? maybeArray.filter(function (x) {\n    return x;\n  }).join(separator || '') : '';\n}\n\n/**\n * Given array, print each item on its own line, wrapped in an\n * indented \"{ }\" block.\n */\nfunction block(array) {\n  return array && array.length !== 0 ? indent('{\\n' + join(array, '\\n')) + '\\n}' : '{}';\n}\n\n/**\n * If maybeString is not null or empty, then wrap with start and end, otherwise\n * print an empty string.\n */\nfunction wrap(start, maybeString, end) {\n  return maybeString ? start + maybeString + (end || '') : '';\n}\n\nfunction indent(maybeString) {\n  return maybeString && maybeString.replace(/\\n/g, '\\n  ');\n}","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.GraphQLSchema = undefined;\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _definition = require('./definition');\n\nvar _directives = require('./directives');\n\nvar _introspection = require('./introspection');\n\nvar _find = require('../jsutils/find');\n\nvar _find2 = _interopRequireDefault(_find);\n\nvar _invariant = require('../jsutils/invariant');\n\nvar _invariant2 = _interopRequireDefault(_invariant);\n\nvar _typeComparators = require('../utilities/typeComparators');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n/**\n *  Copyright (c) 2015, Facebook, Inc.\n *  All rights reserved.\n *\n *  This source code is licensed under the BSD-style license found in the\n *  LICENSE file in the root directory of this source tree. An additional grant\n *  of patent rights can be found in the PATENTS file in the same directory.\n */\n\n/**\n * Schema Definition\n *\n * A Schema is created by supplying the root types of each type of operation,\n * query and mutation (optional). A schema definition is then supplied to the\n * validator and executor.\n *\n * Example:\n *\n *     const MyAppSchema = new GraphQLSchema({\n *       query: MyAppQueryRootType,\n *       mutation: MyAppMutationRootType,\n *     })\n *\n * Note: If an array of `directives` are provided to GraphQLSchema, that will be\n * the exact list of directives represented and allowed. If `directives` is not\n * provided then a default set of the specified directives (e.g. @include and\n * @skip) will be used. If you wish to provide *additional* directives to these\n * specified directives, you must explicitly declare them. Example:\n *\n *     const MyAppSchema = new GraphQLSchema({\n *       ...\n *       directives: specifiedDirectives.concat([ myCustomDirective ]),\n *     })\n *\n */\nvar GraphQLSchema = exports.GraphQLSchema = function () {\n  function GraphQLSchema(config) {\n    var _this = this;\n\n    _classCallCheck(this, GraphQLSchema);\n\n    !((typeof config === 'undefined' ? 'undefined' : _typeof(config)) === 'object') ? (0, _invariant2.default)(0, 'Must provide configuration object.') : void 0;\n\n    !(config.query instanceof _definition.GraphQLObjectType) ? (0, _invariant2.default)(0, 'Schema query must be Object Type but got: ' + String(config.query) + '.') : void 0;\n    this._queryType = config.query;\n\n    !(!config.mutation || config.mutation instanceof _definition.GraphQLObjectType) ? (0, _invariant2.default)(0, 'Schema mutation must be Object Type if provided but got: ' + String(config.mutation) + '.') : void 0;\n    this._mutationType = config.mutation;\n\n    !(!config.subscription || config.subscription instanceof _definition.GraphQLObjectType) ? (0, _invariant2.default)(0, 'Schema subscription must be Object Type if provided but got: ' + String(config.subscription) + '.') : void 0;\n    this._subscriptionType = config.subscription;\n\n    !(!config.types || Array.isArray(config.types)) ? (0, _invariant2.default)(0, 'Schema types must be Array if provided but got: ' + String(config.types) + '.') : void 0;\n\n    !(!config.directives || Array.isArray(config.directives) && config.directives.every(function (directive) {\n      return directive instanceof _directives.GraphQLDirective;\n    })) ? (0, _invariant2.default)(0, 'Schema directives must be Array<GraphQLDirective> if provided but got: ' + String(config.directives) + '.') : void 0;\n    // Provide specified directives (e.g. @include and @skip) by default.\n    this._directives = config.directives || _directives.specifiedDirectives;\n    this.astNode = config.astNode || null;\n\n    // Build type map now to detect any errors within this schema.\n    var initialTypes = [this.getQueryType(), this.getMutationType(), this.getSubscriptionType(), _introspection.__Schema];\n\n    var types = config.types;\n    if (types) {\n      initialTypes = initialTypes.concat(types);\n    }\n\n    this._typeMap = initialTypes.reduce(typeMapReducer, Object.create(null));\n\n    // Keep track of all implementations by interface name.\n    this._implementations = Object.create(null);\n    Object.keys(this._typeMap).forEach(function (typeName) {\n      var type = _this._typeMap[typeName];\n      if (type instanceof _definition.GraphQLObjectType) {\n        type.getInterfaces().forEach(function (iface) {\n          var impls = _this._implementations[iface.name];\n          if (impls) {\n            impls.push(type);\n          } else {\n            _this._implementations[iface.name] = [type];\n          }\n        });\n      }\n    });\n\n    // Enforce correct interface implementations.\n    Object.keys(this._typeMap).forEach(function (typeName) {\n      var type = _this._typeMap[typeName];\n      if (type instanceof _definition.GraphQLObjectType) {\n        type.getInterfaces().forEach(function (iface) {\n          return assertObjectImplementsInterface(_this, type, iface);\n        });\n      }\n    });\n  }\n\n  GraphQLSchema.prototype.getQueryType = function getQueryType() {\n    return this._queryType;\n  };\n\n  GraphQLSchema.prototype.getMutationType = function getMutationType() {\n    return this._mutationType;\n  };\n\n  GraphQLSchema.prototype.getSubscriptionType = function getSubscriptionType() {\n    return this._subscriptionType;\n  };\n\n  GraphQLSchema.prototype.getTypeMap = function getTypeMap() {\n    return this._typeMap;\n  };\n\n  GraphQLSchema.prototype.getType = function getType(name) {\n    return this.getTypeMap()[name];\n  };\n\n  GraphQLSchema.prototype.getPossibleTypes = function getPossibleTypes(abstractType) {\n    if (abstractType instanceof _definition.GraphQLUnionType) {\n      return abstractType.getTypes();\n    }\n    !(abstractType instanceof _definition.GraphQLInterfaceType) ? (0, _invariant2.default)(0) : void 0;\n    return this._implementations[abstractType.name];\n  };\n\n  GraphQLSchema.prototype.isPossibleType = function isPossibleType(abstractType, possibleType) {\n    var possibleTypeMap = this._possibleTypeMap;\n    if (!possibleTypeMap) {\n      this._possibleTypeMap = possibleTypeMap = Object.create(null);\n    }\n\n    if (!possibleTypeMap[abstractType.name]) {\n      var possibleTypes = this.getPossibleTypes(abstractType);\n      !Array.isArray(possibleTypes) ? (0, _invariant2.default)(0, 'Could not find possible implementing types for ' + abstractType.name + ' ' + 'in schema. Check that schema.types is defined and is an array of ' + 'all possible types in the schema.') : void 0;\n      possibleTypeMap[abstractType.name] = possibleTypes.reduce(function (map, type) {\n        return map[type.name] = true, map;\n      }, Object.create(null));\n    }\n\n    return Boolean(possibleTypeMap[abstractType.name][possibleType.name]);\n  };\n\n  GraphQLSchema.prototype.getDirectives = function getDirectives() {\n    return this._directives;\n  };\n\n  GraphQLSchema.prototype.getDirective = function getDirective(name) {\n    return (0, _find2.default)(this.getDirectives(), function (directive) {\n      return directive.name === name;\n    });\n  };\n\n  return GraphQLSchema;\n}();\n\nfunction typeMapReducer(map, type) {\n  if (!type) {\n    return map;\n  }\n  if (type instanceof _definition.GraphQLList || type instanceof _definition.GraphQLNonNull) {\n    return typeMapReducer(map, type.ofType);\n  }\n  if (map[type.name]) {\n    !(map[type.name] === type) ? (0, _invariant2.default)(0, 'Schema must contain unique named types but contains multiple ' + ('types named \"' + type.name + '\".')) : void 0;\n    return map;\n  }\n  map[type.name] = type;\n\n  var reducedMap = map;\n\n  if (type instanceof _definition.GraphQLUnionType) {\n    reducedMap = type.getTypes().reduce(typeMapReducer, reducedMap);\n  }\n\n  if (type instanceof _definition.GraphQLObjectType) {\n    reducedMap = type.getInterfaces().reduce(typeMapReducer, reducedMap);\n  }\n\n  if (type instanceof _definition.GraphQLObjectType || type instanceof _definition.GraphQLInterfaceType) {\n    var fieldMap = type.getFields();\n    Object.keys(fieldMap).forEach(function (fieldName) {\n      var field = fieldMap[fieldName];\n\n      if (field.args) {\n        var fieldArgTypes = field.args.map(function (arg) {\n          return arg.type;\n        });\n        reducedMap = fieldArgTypes.reduce(typeMapReducer, reducedMap);\n      }\n      reducedMap = typeMapReducer(reducedMap, field.type);\n    });\n  }\n\n  if (type instanceof _definition.GraphQLInputObjectType) {\n    var _fieldMap = type.getFields();\n    Object.keys(_fieldMap).forEach(function (fieldName) {\n      var field = _fieldMap[fieldName];\n      reducedMap = typeMapReducer(reducedMap, field.type);\n    });\n  }\n\n  return reducedMap;\n}\n\nfunction assertObjectImplementsInterface(schema, object, iface) {\n  var objectFieldMap = object.getFields();\n  var ifaceFieldMap = iface.getFields();\n\n  // Assert each interface field is implemented.\n  Object.keys(ifaceFieldMap).forEach(function (fieldName) {\n    var objectField = objectFieldMap[fieldName];\n    var ifaceField = ifaceFieldMap[fieldName];\n\n    // Assert interface field exists on object.\n    !objectField ? (0, _invariant2.default)(0, '\"' + iface.name + '\" expects field \"' + fieldName + '\" but \"' + object.name + '\" ' + 'does not provide it.') : void 0;\n\n    // Assert interface field type is satisfied by object field type, by being\n    // a valid subtype. (covariant)\n    !(0, _typeComparators.isTypeSubTypeOf)(schema, objectField.type, ifaceField.type) ? (0, _invariant2.default)(0, iface.name + '.' + fieldName + ' expects type \"' + String(ifaceField.type) + '\" ' + 'but ' + (object.name + '.' + fieldName + ' provides type \"' + String(objectField.type) + '\".')) : void 0;\n\n    // Assert each interface field arg is implemented.\n    ifaceField.args.forEach(function (ifaceArg) {\n      var argName = ifaceArg.name;\n      var objectArg = (0, _find2.default)(objectField.args, function (arg) {\n        return arg.name === argName;\n      });\n\n      // Assert interface field arg exists on object field.\n      !objectArg ? (0, _invariant2.default)(0, iface.name + '.' + fieldName + ' expects argument \"' + argName + '\" but ' + (object.name + '.' + fieldName + ' does not provide it.')) : void 0;\n\n      // Assert interface field arg type matches object field arg type.\n      // (invariant)\n      !(0, _typeComparators.isEqualType)(ifaceArg.type, objectArg.type) ? (0, _invariant2.default)(0, iface.name + '.' + fieldName + '(' + argName + ':) expects type ' + ('\"' + String(ifaceArg.type) + '\" but ') + (object.name + '.' + fieldName + '(' + argName + ':) provides type ') + ('\"' + String(objectArg.type) + '\".')) : void 0;\n    });\n\n    // Assert additional arguments must not be required.\n    objectField.args.forEach(function (objectArg) {\n      var argName = objectArg.name;\n      var ifaceArg = (0, _find2.default)(ifaceField.args, function (arg) {\n        return arg.name === argName;\n      });\n      if (!ifaceArg) {\n        !!(objectArg.type instanceof _definition.GraphQLNonNull) ? (0, _invariant2.default)(0, object.name + '.' + fieldName + '(' + argName + ':) is of required type ' + ('\"' + String(objectArg.type) + '\" but is not also provided by the ') + ('interface ' + iface.name + '.' + fieldName + '.')) : void 0;\n      }\n    });\n  });\n}","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.specifiedDirectives = exports.GraphQLDeprecatedDirective = exports.DEFAULT_DEPRECATION_REASON = exports.GraphQLSkipDirective = exports.GraphQLIncludeDirective = exports.GraphQLDirective = exports.DirectiveLocation = undefined;\n\nvar _definition = require('./definition');\n\nvar _scalars = require('./scalars');\n\nvar _invariant = require('../jsutils/invariant');\n\nvar _invariant2 = _interopRequireDefault(_invariant);\n\nvar _assertValidName = require('../utilities/assertValidName');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n/**\n *  Copyright (c) 2015, Facebook, Inc.\n *  All rights reserved.\n *\n *  This source code is licensed under the BSD-style license found in the\n *  LICENSE file in the root directory of this source tree. An additional grant\n *  of patent rights can be found in the PATENTS file in the same directory.\n */\n\nvar DirectiveLocation = exports.DirectiveLocation = {\n  // Operations\n  QUERY: 'QUERY',\n  MUTATION: 'MUTATION',\n  SUBSCRIPTION: 'SUBSCRIPTION',\n  FIELD: 'FIELD',\n  FRAGMENT_DEFINITION: 'FRAGMENT_DEFINITION',\n  FRAGMENT_SPREAD: 'FRAGMENT_SPREAD',\n  INLINE_FRAGMENT: 'INLINE_FRAGMENT',\n  // Schema Definitions\n  SCHEMA: 'SCHEMA',\n  SCALAR: 'SCALAR',\n  OBJECT: 'OBJECT',\n  FIELD_DEFINITION: 'FIELD_DEFINITION',\n  ARGUMENT_DEFINITION: 'ARGUMENT_DEFINITION',\n  INTERFACE: 'INTERFACE',\n  UNION: 'UNION',\n  ENUM: 'ENUM',\n  ENUM_VALUE: 'ENUM_VALUE',\n  INPUT_OBJECT: 'INPUT_OBJECT',\n  INPUT_FIELD_DEFINITION: 'INPUT_FIELD_DEFINITION'\n};\n\n// eslint-disable-line\n\n/**\n * Directives are used by the GraphQL runtime as a way of modifying execution\n * behavior. Type system creators will usually not create these directly.\n */\nvar GraphQLDirective = exports.GraphQLDirective = function GraphQLDirective(config) {\n  _classCallCheck(this, GraphQLDirective);\n\n  !config.name ? (0, _invariant2.default)(0, 'Directive must be named.') : void 0;\n  (0, _assertValidName.assertValidName)(config.name);\n  !Array.isArray(config.locations) ? (0, _invariant2.default)(0, 'Must provide locations for directive.') : void 0;\n  this.name = config.name;\n  this.description = config.description;\n  this.locations = config.locations;\n  this.astNode = config.astNode;\n\n  var args = config.args;\n  if (!args) {\n    this.args = [];\n  } else {\n    !!Array.isArray(args) ? (0, _invariant2.default)(0, '@' + config.name + ' args must be an object with argument names as keys.') : void 0;\n    this.args = Object.keys(args).map(function (argName) {\n      (0, _assertValidName.assertValidName)(argName);\n      var arg = args[argName];\n      !(0, _definition.isInputType)(arg.type) ? (0, _invariant2.default)(0, '@' + config.name + '(' + argName + ':) argument type must be ' + ('Input Type but got: ' + String(arg.type) + '.')) : void 0;\n      return {\n        name: argName,\n        description: arg.description === undefined ? null : arg.description,\n        type: arg.type,\n        defaultValue: arg.defaultValue,\n        astNode: arg.astNode\n      };\n    });\n  }\n};\n\n/**\n * Used to conditionally include fields or fragments.\n */\nvar GraphQLIncludeDirective = exports.GraphQLIncludeDirective = new GraphQLDirective({\n  name: 'include',\n  description: 'Directs the executor to include this field or fragment only when ' + 'the `if` argument is true.',\n  locations: [DirectiveLocation.FIELD, DirectiveLocation.FRAGMENT_SPREAD, DirectiveLocation.INLINE_FRAGMENT],\n  args: {\n    if: {\n      type: new _definition.GraphQLNonNull(_scalars.GraphQLBoolean),\n      description: 'Included when true.'\n    }\n  }\n});\n\n/**\n * Used to conditionally skip (exclude) fields or fragments.\n */\nvar GraphQLSkipDirective = exports.GraphQLSkipDirective = new GraphQLDirective({\n  name: 'skip',\n  description: 'Directs the executor to skip this field or fragment when the `if` ' + 'argument is true.',\n  locations: [DirectiveLocation.FIELD, DirectiveLocation.FRAGMENT_SPREAD, DirectiveLocation.INLINE_FRAGMENT],\n  args: {\n    if: {\n      type: new _definition.GraphQLNonNull(_scalars.GraphQLBoolean),\n      description: 'Skipped when true.'\n    }\n  }\n});\n\n/**\n * Constant string used for default reason for a deprecation.\n */\nvar DEFAULT_DEPRECATION_REASON = exports.DEFAULT_DEPRECATION_REASON = 'No longer supported';\n\n/**\n * Used to declare element of a GraphQL schema as deprecated.\n */\nvar GraphQLDeprecatedDirective = exports.GraphQLDeprecatedDirective = new GraphQLDirective({\n  name: 'deprecated',\n  description: 'Marks an element of a GraphQL schema as no longer supported.',\n  locations: [DirectiveLocation.FIELD_DEFINITION, DirectiveLocation.ENUM_VALUE],\n  args: {\n    reason: {\n      type: _scalars.GraphQLString,\n      description: 'Explains why this element was deprecated, usually also including a ' + 'suggestion for how to access supported similar data. Formatted ' + 'in [Markdown](https://daringfireball.net/projects/markdown/).',\n      defaultValue: DEFAULT_DEPRECATION_REASON\n    }\n  }\n});\n\n/**\n * The full list of specified directives.\n */\nvar specifiedDirectives = exports.specifiedDirectives = [GraphQLIncludeDirective, GraphQLSkipDirective, GraphQLDeprecatedDirective];","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.typeFromAST = undefined;\n\nvar _invariant = require('../jsutils/invariant');\n\nvar _invariant2 = _interopRequireDefault(_invariant);\n\nvar _kinds = require('../language/kinds');\n\nvar Kind = _interopRequireWildcard(_kinds);\n\nvar _definition = require('../type/definition');\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Given a Schema and an AST node describing a type, return a GraphQLType\n * definition which applies to that type. For example, if provided the parsed\n * AST node for `[User]`, a GraphQLList instance will be returned, containing\n * the type called \"User\" found in the schema. If a type called \"User\" is not\n * found in the schema, then undefined will be returned.\n */\n/* eslint-disable no-redeclare */\nfunction typeFromASTImpl(schema, typeNode) {\n  /* eslint-enable no-redeclare */\n  var innerType = void 0;\n  if (typeNode.kind === Kind.LIST_TYPE) {\n    innerType = typeFromAST(schema, typeNode.type);\n    return innerType && new _definition.GraphQLList(innerType);\n  }\n  if (typeNode.kind === Kind.NON_NULL_TYPE) {\n    innerType = typeFromAST(schema, typeNode.type);\n    return innerType && new _definition.GraphQLNonNull(innerType);\n  }\n  !(typeNode.kind === Kind.NAMED_TYPE) ? (0, _invariant2.default)(0, 'Must be a named type.') : void 0;\n  return schema.getType(typeNode.name.value);\n}\n// This will export typeFromAST with the correct type, but currently exposes\n// ~26 errors: https://gist.github.com/4a29403a99a8186fcb15064d69c5f3ae\n// export var typeFromAST: typeof typeFromASTType = typeFromASTImpl;\n\n/**\n *  Copyright (c) 2015, Facebook, Inc.\n *  All rights reserved.\n *\n *  This source code is licensed under the BSD-style license found in the\n *  LICENSE file in the root directory of this source tree. An additional grant\n *  of patent rights can be found in the PATENTS file in the same directory.\n */\n\nvar typeFromAST = exports.typeFromAST = typeFromASTImpl;","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.visit = visit;\nexports.visitInParallel = visitInParallel;\nexports.visitWithTypeInfo = visitWithTypeInfo;\nexports.getVisitFn = getVisitFn;\n/**\n *  Copyright (c) 2015, Facebook, Inc.\n *  All rights reserved.\n *\n *  This source code is licensed under the BSD-style license found in the\n *  LICENSE file in the root directory of this source tree. An additional grant\n *  of patent rights can be found in the PATENTS file in the same directory.\n */\n\nvar QueryDocumentKeys = exports.QueryDocumentKeys = {\n  Name: [],\n\n  Document: ['definitions'],\n  OperationDefinition: ['name', 'variableDefinitions', 'directives', 'selectionSet'],\n  VariableDefinition: ['variable', 'type', 'defaultValue'],\n  Variable: ['name'],\n  SelectionSet: ['selections'],\n  Field: ['alias', 'name', 'arguments', 'directives', 'selectionSet'],\n  Argument: ['name', 'value'],\n\n  FragmentSpread: ['name', 'directives'],\n  InlineFragment: ['typeCondition', 'directives', 'selectionSet'],\n  FragmentDefinition: ['name', 'typeCondition', 'directives', 'selectionSet'],\n\n  IntValue: [],\n  FloatValue: [],\n  StringValue: [],\n  BooleanValue: [],\n  NullValue: [],\n  EnumValue: [],\n  ListValue: ['values'],\n  ObjectValue: ['fields'],\n  ObjectField: ['name', 'value'],\n\n  Directive: ['name', 'arguments'],\n\n  NamedType: ['name'],\n  ListType: ['type'],\n  NonNullType: ['type'],\n\n  SchemaDefinition: ['directives', 'operationTypes'],\n  OperationTypeDefinition: ['type'],\n\n  ScalarTypeDefinition: ['name', 'directives'],\n  ObjectTypeDefinition: ['name', 'interfaces', 'directives', 'fields'],\n  FieldDefinition: ['name', 'arguments', 'type', 'directives'],\n  InputValueDefinition: ['name', 'type', 'defaultValue', 'directives'],\n  InterfaceTypeDefinition: ['name', 'directives', 'fields'],\n  UnionTypeDefinition: ['name', 'directives', 'types'],\n  EnumTypeDefinition: ['name', 'directives', 'values'],\n  EnumValueDefinition: ['name', 'directives'],\n  InputObjectTypeDefinition: ['name', 'directives', 'fields'],\n\n  TypeExtensionDefinition: ['definition'],\n\n  DirectiveDefinition: ['name', 'arguments', 'locations']\n};\n\nvar BREAK = exports.BREAK = {};\n\n/**\n * visit() will walk through an AST using a depth first traversal, calling\n * the visitor's enter function at each node in the traversal, and calling the\n * leave function after visiting that node and all of its child nodes.\n *\n * By returning different values from the enter and leave functions, the\n * behavior of the visitor can be altered, including skipping over a sub-tree of\n * the AST (by returning false), editing the AST by returning a value or null\n * to remove the value, or to stop the whole traversal by returning BREAK.\n *\n * When using visit() to edit an AST, the original AST will not be modified, and\n * a new version of the AST with the changes applied will be returned from the\n * visit function.\n *\n *     const editedAST = visit(ast, {\n *       enter(node, key, parent, path, ancestors) {\n *         // @return\n *         //   undefined: no action\n *         //   false: skip visiting this node\n *         //   visitor.BREAK: stop visiting altogether\n *         //   null: delete this node\n *         //   any value: replace this node with the returned value\n *       },\n *       leave(node, key, parent, path, ancestors) {\n *         // @return\n *         //   undefined: no action\n *         //   false: no action\n *         //   visitor.BREAK: stop visiting altogether\n *         //   null: delete this node\n *         //   any value: replace this node with the returned value\n *       }\n *     });\n *\n * Alternatively to providing enter() and leave() functions, a visitor can\n * instead provide functions named the same as the kinds of AST nodes, or\n * enter/leave visitors at a named key, leading to four permutations of\n * visitor API:\n *\n * 1) Named visitors triggered when entering a node a specific kind.\n *\n *     visit(ast, {\n *       Kind(node) {\n *         // enter the \"Kind\" node\n *       }\n *     })\n *\n * 2) Named visitors that trigger upon entering and leaving a node of\n *    a specific kind.\n *\n *     visit(ast, {\n *       Kind: {\n *         enter(node) {\n *           // enter the \"Kind\" node\n *         }\n *         leave(node) {\n *           // leave the \"Kind\" node\n *         }\n *       }\n *     })\n *\n * 3) Generic visitors that trigger upon entering and leaving any node.\n *\n *     visit(ast, {\n *       enter(node) {\n *         // enter any node\n *       },\n *       leave(node) {\n *         // leave any node\n *       }\n *     })\n *\n * 4) Parallel visitors for entering and leaving nodes of a specific kind.\n *\n *     visit(ast, {\n *       enter: {\n *         Kind(node) {\n *           // enter the \"Kind\" node\n *         }\n *       },\n *       leave: {\n *         Kind(node) {\n *           // leave the \"Kind\" node\n *         }\n *       }\n *     })\n */\nfunction visit(root, visitor, keyMap) {\n  var visitorKeys = keyMap || QueryDocumentKeys;\n\n  var stack = void 0;\n  var inArray = Array.isArray(root);\n  var keys = [root];\n  var index = -1;\n  var edits = [];\n  var parent = void 0;\n  var path = [];\n  var ancestors = [];\n  var newRoot = root;\n\n  do {\n    index++;\n    var isLeaving = index === keys.length;\n    var key = void 0;\n    var node = void 0;\n    var isEdited = isLeaving && edits.length !== 0;\n    if (isLeaving) {\n      key = ancestors.length === 0 ? undefined : path.pop();\n      node = parent;\n      parent = ancestors.pop();\n      if (isEdited) {\n        if (inArray) {\n          node = node.slice();\n        } else {\n          var clone = {};\n          for (var k in node) {\n            if (node.hasOwnProperty(k)) {\n              clone[k] = node[k];\n            }\n          }\n          node = clone;\n        }\n        var editOffset = 0;\n        for (var ii = 0; ii < edits.length; ii++) {\n          var editKey = edits[ii][0];\n          var editValue = edits[ii][1];\n          if (inArray) {\n            editKey -= editOffset;\n          }\n          if (inArray && editValue === null) {\n            node.splice(editKey, 1);\n            editOffset++;\n          } else {\n            node[editKey] = editValue;\n          }\n        }\n      }\n      index = stack.index;\n      keys = stack.keys;\n      edits = stack.edits;\n      inArray = stack.inArray;\n      stack = stack.prev;\n    } else {\n      key = parent ? inArray ? index : keys[index] : undefined;\n      node = parent ? parent[key] : newRoot;\n      if (node === null || node === undefined) {\n        continue;\n      }\n      if (parent) {\n        path.push(key);\n      }\n    }\n\n    var result = void 0;\n    if (!Array.isArray(node)) {\n      if (!isNode(node)) {\n        throw new Error('Invalid AST Node: ' + JSON.stringify(node));\n      }\n      var visitFn = getVisitFn(visitor, node.kind, isLeaving);\n      if (visitFn) {\n        result = visitFn.call(visitor, node, key, parent, path, ancestors);\n\n        if (result === BREAK) {\n          break;\n        }\n\n        if (result === false) {\n          if (!isLeaving) {\n            path.pop();\n            continue;\n          }\n        } else if (result !== undefined) {\n          edits.push([key, result]);\n          if (!isLeaving) {\n            if (isNode(result)) {\n              node = result;\n            } else {\n              path.pop();\n              continue;\n            }\n          }\n        }\n      }\n    }\n\n    if (result === undefined && isEdited) {\n      edits.push([key, node]);\n    }\n\n    if (!isLeaving) {\n      stack = { inArray: inArray, index: index, keys: keys, edits: edits, prev: stack };\n      inArray = Array.isArray(node);\n      keys = inArray ? node : visitorKeys[node.kind] || [];\n      index = -1;\n      edits = [];\n      if (parent) {\n        ancestors.push(parent);\n      }\n      parent = node;\n    }\n  } while (stack !== undefined);\n\n  if (edits.length !== 0) {\n    newRoot = edits[edits.length - 1][1];\n  }\n\n  return newRoot;\n}\n\nfunction isNode(maybeNode) {\n  return maybeNode && typeof maybeNode.kind === 'string';\n}\n\n/**\n * Creates a new visitor instance which delegates to many visitors to run in\n * parallel. Each visitor will be visited for each node before moving on.\n *\n * If a prior visitor edits a node, no following visitors will see that node.\n */\nfunction visitInParallel(visitors) {\n  var skipping = new Array(visitors.length);\n\n  return {\n    enter: function enter(node) {\n      for (var i = 0; i < visitors.length; i++) {\n        if (!skipping[i]) {\n          var fn = getVisitFn(visitors[i], node.kind, /* isLeaving */false);\n          if (fn) {\n            var result = fn.apply(visitors[i], arguments);\n            if (result === false) {\n              skipping[i] = node;\n            } else if (result === BREAK) {\n              skipping[i] = BREAK;\n            } else if (result !== undefined) {\n              return result;\n            }\n          }\n        }\n      }\n    },\n    leave: function leave(node) {\n      for (var i = 0; i < visitors.length; i++) {\n        if (!skipping[i]) {\n          var fn = getVisitFn(visitors[i], node.kind, /* isLeaving */true);\n          if (fn) {\n            var result = fn.apply(visitors[i], arguments);\n            if (result === BREAK) {\n              skipping[i] = BREAK;\n            } else if (result !== undefined && result !== false) {\n              return result;\n            }\n          }\n        } else if (skipping[i] === node) {\n          skipping[i] = null;\n        }\n      }\n    }\n  };\n}\n\n/**\n * Creates a new visitor instance which maintains a provided TypeInfo instance\n * along with visiting visitor.\n */\nfunction visitWithTypeInfo(typeInfo, visitor) {\n  return {\n    enter: function enter(node) {\n      typeInfo.enter(node);\n      var fn = getVisitFn(visitor, node.kind, /* isLeaving */false);\n      if (fn) {\n        var result = fn.apply(visitor, arguments);\n        if (result !== undefined) {\n          typeInfo.leave(node);\n          if (isNode(result)) {\n            typeInfo.enter(result);\n          }\n        }\n        return result;\n      }\n    },\n    leave: function leave(node) {\n      var fn = getVisitFn(visitor, node.kind, /* isLeaving */true);\n      var result = void 0;\n      if (fn) {\n        result = fn.apply(visitor, arguments);\n      }\n      typeInfo.leave(node);\n      return result;\n    }\n  };\n}\n\n/**\n * Given a visitor instance, if it is leaving or not, and a node kind, return\n * the function the visitor runtime should call.\n */\nfunction getVisitFn(visitor, kind, isLeaving) {\n  var kindVisitor = visitor[kind];\n  if (kindVisitor) {\n    if (!isLeaving && typeof kindVisitor === 'function') {\n      // { Kind() {} }\n      return kindVisitor;\n    }\n    var kindSpecificVisitor = isLeaving ? kindVisitor.leave : kindVisitor.enter;\n    if (typeof kindSpecificVisitor === 'function') {\n      // { Kind: { enter() {}, leave() {} } }\n      return kindSpecificVisitor;\n    }\n  } else {\n    var specificVisitor = isLeaving ? visitor.leave : visitor.enter;\n    if (specificVisitor) {\n      if (typeof specificVisitor === 'function') {\n        // { enter() {}, leave() {} }\n        return specificVisitor;\n      }\n      var specificKindVisitor = specificVisitor[kind];\n      if (typeof specificKindVisitor === 'function') {\n        // { enter: { Kind() {} }, leave: { Kind() {} } }\n        return specificKindVisitor;\n      }\n    }\n  }\n}","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.GraphQLID = exports.GraphQLBoolean = exports.GraphQLString = exports.GraphQLFloat = exports.GraphQLInt = undefined;\n\nvar _definition = require('./definition');\n\nvar _kinds = require('../language/kinds');\n\nvar Kind = _interopRequireWildcard(_kinds);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\n// As per the GraphQL Spec, Integers are only treated as valid when a valid\n// 32-bit signed integer, providing the broadest support across platforms.\n//\n// n.b. JavaScript's integers are safe between -(2^53 - 1) and 2^53 - 1 because\n// they are internally represented as IEEE 754 doubles.\n\n/**\n *  Copyright (c) 2015, Facebook, Inc.\n *  All rights reserved.\n *\n *  This source code is licensed under the BSD-style license found in the\n *  LICENSE file in the root directory of this source tree. An additional grant\n *  of patent rights can be found in the PATENTS file in the same directory.\n */\n\nvar MAX_INT = 2147483647;\nvar MIN_INT = -2147483648;\n\nfunction coerceInt(value) {\n  if (value === '') {\n    throw new TypeError('Int cannot represent non 32-bit signed integer value: (empty string)');\n  }\n  var num = Number(value);\n  if (num !== num || num > MAX_INT || num < MIN_INT) {\n    throw new TypeError('Int cannot represent non 32-bit signed integer value: ' + String(value));\n  }\n  var int = Math.floor(num);\n  if (int !== num) {\n    throw new TypeError('Int cannot represent non-integer value: ' + String(value));\n  }\n  return int;\n}\n\nvar GraphQLInt = exports.GraphQLInt = new _definition.GraphQLScalarType({\n  name: 'Int',\n  description: 'The `Int` scalar type represents non-fractional signed whole numeric ' + 'values. Int can represent values between -(2^31) and 2^31 - 1. ',\n  serialize: coerceInt,\n  parseValue: coerceInt,\n  parseLiteral: function parseLiteral(ast) {\n    if (ast.kind === Kind.INT) {\n      var num = parseInt(ast.value, 10);\n      if (num <= MAX_INT && num >= MIN_INT) {\n        return num;\n      }\n    }\n    return null;\n  }\n});\n\nfunction coerceFloat(value) {\n  if (value === '') {\n    throw new TypeError('Float cannot represent non numeric value: (empty string)');\n  }\n  var num = Number(value);\n  if (num === num) {\n    return num;\n  }\n  throw new TypeError('Float cannot represent non numeric value: ' + String(value));\n}\n\nvar GraphQLFloat = exports.GraphQLFloat = new _definition.GraphQLScalarType({\n  name: 'Float',\n  description: 'The `Float` scalar type represents signed double-precision fractional ' + 'values as specified by ' + '[IEEE 754](http://en.wikipedia.org/wiki/IEEE_floating_point). ',\n  serialize: coerceFloat,\n  parseValue: coerceFloat,\n  parseLiteral: function parseLiteral(ast) {\n    return ast.kind === Kind.FLOAT || ast.kind === Kind.INT ? parseFloat(ast.value) : null;\n  }\n});\n\nvar GraphQLString = exports.GraphQLString = new _definition.GraphQLScalarType({\n  name: 'String',\n  description: 'The `String` scalar type represents textual data, represented as UTF-8 ' + 'character sequences. The String type is most often used by GraphQL to ' + 'represent free-form human-readable text.',\n  serialize: String,\n  parseValue: String,\n  parseLiteral: function parseLiteral(ast) {\n    return ast.kind === Kind.STRING ? ast.value : null;\n  }\n});\n\nvar GraphQLBoolean = exports.GraphQLBoolean = new _definition.GraphQLScalarType({\n  name: 'Boolean',\n  description: 'The `Boolean` scalar type represents `true` or `false`.',\n  serialize: Boolean,\n  parseValue: Boolean,\n  parseLiteral: function parseLiteral(ast) {\n    return ast.kind === Kind.BOOLEAN ? ast.value : null;\n  }\n});\n\nvar GraphQLID = exports.GraphQLID = new _definition.GraphQLScalarType({\n  name: 'ID',\n  description: 'The `ID` scalar type represents a unique identifier, often used to ' + 'refetch an object or as key for a cache. The ID type appears in a JSON ' + 'response as a String; however, it is not intended to be human-readable. ' + 'When expected as an input type, any string (such as `\"4\"`) or integer ' + '(such as `4`) input value will be accepted as an ID.',\n  serialize: String,\n  parseValue: String,\n  parseLiteral: function parseLiteral(ast) {\n    return ast.kind === Kind.STRING || ast.kind === Kind.INT ? ast.value : null;\n  }\n});","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __createBinding(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isNullish;\n\n/**\n *  Copyright (c) 2015, Facebook, Inc.\n *  All rights reserved.\n *\n *  This source code is licensed under the BSD-style license found in the\n *  LICENSE file in the root directory of this source tree. An additional grant\n *  of patent rights can be found in the PATENTS file in the same directory.\n */\n\n/**\n * Returns true if a value is null, undefined, or NaN.\n */\nfunction isNullish(value) {\n  return value === null || value === undefined || value !== value;\n}","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.TypeNameMetaFieldDef = exports.TypeMetaFieldDef = exports.SchemaMetaFieldDef = exports.__TypeKind = exports.TypeKind = exports.__EnumValue = exports.__InputValue = exports.__Field = exports.__Type = exports.__DirectiveLocation = exports.__Directive = exports.__Schema = undefined;\n\nvar _isInvalid = require('../jsutils/isInvalid');\n\nvar _isInvalid2 = _interopRequireDefault(_isInvalid);\n\nvar _astFromValue = require('../utilities/astFromValue');\n\nvar _printer = require('../language/printer');\n\nvar _definition = require('./definition');\n\nvar _scalars = require('./scalars');\n\nvar _directives = require('./directives');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n *  Copyright (c) 2015, Facebook, Inc.\n *  All rights reserved.\n *\n *  This source code is licensed under the BSD-style license found in the\n *  LICENSE file in the root directory of this source tree. An additional grant\n *  of patent rights can be found in the PATENTS file in the same directory.\n */\n\nvar __Schema = exports.__Schema = new _definition.GraphQLObjectType({\n  name: '__Schema',\n  isIntrospection: true,\n  description: 'A GraphQL Schema defines the capabilities of a GraphQL server. It ' + 'exposes all available types and directives on the server, as well as ' + 'the entry points for query, mutation, and subscription operations.',\n  fields: function fields() {\n    return {\n      types: {\n        description: 'A list of all types supported by this server.',\n        type: new _definition.GraphQLNonNull(new _definition.GraphQLList(new _definition.GraphQLNonNull(__Type))),\n        resolve: function resolve(schema) {\n          var typeMap = schema.getTypeMap();\n          return Object.keys(typeMap).map(function (key) {\n            return typeMap[key];\n          });\n        }\n      },\n      queryType: {\n        description: 'The type that query operations will be rooted at.',\n        type: new _definition.GraphQLNonNull(__Type),\n        resolve: function resolve(schema) {\n          return schema.getQueryType();\n        }\n      },\n      mutationType: {\n        description: 'If this server supports mutation, the type that ' + 'mutation operations will be rooted at.',\n        type: __Type,\n        resolve: function resolve(schema) {\n          return schema.getMutationType();\n        }\n      },\n      subscriptionType: {\n        description: 'If this server support subscription, the type that ' + 'subscription operations will be rooted at.',\n        type: __Type,\n        resolve: function resolve(schema) {\n          return schema.getSubscriptionType();\n        }\n      },\n      directives: {\n        description: 'A list of all directives supported by this server.',\n        type: new _definition.GraphQLNonNull(new _definition.GraphQLList(new _definition.GraphQLNonNull(__Directive))),\n        resolve: function resolve(schema) {\n          return schema.getDirectives();\n        }\n      }\n    };\n  }\n});\n\nvar __Directive = exports.__Directive = new _definition.GraphQLObjectType({\n  name: '__Directive',\n  isIntrospection: true,\n  description: 'A Directive provides a way to describe alternate runtime execution and ' + 'type validation behavior in a GraphQL document.' + '\\n\\nIn some cases, you need to provide options to alter GraphQL\\'s ' + 'execution behavior in ways field arguments will not suffice, such as ' + 'conditionally including or skipping a field. Directives provide this by ' + 'describing additional information to the executor.',\n  fields: function fields() {\n    return {\n      name: { type: new _definition.GraphQLNonNull(_scalars.GraphQLString) },\n      description: { type: _scalars.GraphQLString },\n      locations: {\n        type: new _definition.GraphQLNonNull(new _definition.GraphQLList(new _definition.GraphQLNonNull(__DirectiveLocation)))\n      },\n      args: {\n        type: new _definition.GraphQLNonNull(new _definition.GraphQLList(new _definition.GraphQLNonNull(__InputValue))),\n        resolve: function resolve(directive) {\n          return directive.args || [];\n        }\n      },\n      // NOTE: the following three fields are deprecated and are no longer part\n      // of the GraphQL specification.\n      onOperation: {\n        deprecationReason: 'Use `locations`.',\n        type: new _definition.GraphQLNonNull(_scalars.GraphQLBoolean),\n        resolve: function resolve(d) {\n          return d.locations.indexOf(_directives.DirectiveLocation.QUERY) !== -1 || d.locations.indexOf(_directives.DirectiveLocation.MUTATION) !== -1 || d.locations.indexOf(_directives.DirectiveLocation.SUBSCRIPTION) !== -1;\n        }\n      },\n      onFragment: {\n        deprecationReason: 'Use `locations`.',\n        type: new _definition.GraphQLNonNull(_scalars.GraphQLBoolean),\n        resolve: function resolve(d) {\n          return d.locations.indexOf(_directives.DirectiveLocation.FRAGMENT_SPREAD) !== -1 || d.locations.indexOf(_directives.DirectiveLocation.INLINE_FRAGMENT) !== -1 || d.locations.indexOf(_directives.DirectiveLocation.FRAGMENT_DEFINITION) !== -1;\n        }\n      },\n      onField: {\n        deprecationReason: 'Use `locations`.',\n        type: new _definition.GraphQLNonNull(_scalars.GraphQLBoolean),\n        resolve: function resolve(d) {\n          return d.locations.indexOf(_directives.DirectiveLocation.FIELD) !== -1;\n        }\n      }\n    };\n  }\n});\n\nvar __DirectiveLocation = exports.__DirectiveLocation = new _definition.GraphQLEnumType({\n  name: '__DirectiveLocation',\n  isIntrospection: true,\n  description: 'A Directive can be adjacent to many parts of the GraphQL language, a ' + '__DirectiveLocation describes one such possible adjacencies.',\n  values: {\n    QUERY: {\n      value: _directives.DirectiveLocation.QUERY,\n      description: 'Location adjacent to a query operation.'\n    },\n    MUTATION: {\n      value: _directives.DirectiveLocation.MUTATION,\n      description: 'Location adjacent to a mutation operation.'\n    },\n    SUBSCRIPTION: {\n      value: _directives.DirectiveLocation.SUBSCRIPTION,\n      description: 'Location adjacent to a subscription operation.'\n    },\n    FIELD: {\n      value: _directives.DirectiveLocation.FIELD,\n      description: 'Location adjacent to a field.'\n    },\n    FRAGMENT_DEFINITION: {\n      value: _directives.DirectiveLocation.FRAGMENT_DEFINITION,\n      description: 'Location adjacent to a fragment definition.'\n    },\n    FRAGMENT_SPREAD: {\n      value: _directives.DirectiveLocation.FRAGMENT_SPREAD,\n      description: 'Location adjacent to a fragment spread.'\n    },\n    INLINE_FRAGMENT: {\n      value: _directives.DirectiveLocation.INLINE_FRAGMENT,\n      description: 'Location adjacent to an inline fragment.'\n    },\n    SCHEMA: {\n      value: _directives.DirectiveLocation.SCHEMA,\n      description: 'Location adjacent to a schema definition.'\n    },\n    SCALAR: {\n      value: _directives.DirectiveLocation.SCALAR,\n      description: 'Location adjacent to a scalar definition.'\n    },\n    OBJECT: {\n      value: _directives.DirectiveLocation.OBJECT,\n      description: 'Location adjacent to an object type definition.'\n    },\n    FIELD_DEFINITION: {\n      value: _directives.DirectiveLocation.FIELD_DEFINITION,\n      description: 'Location adjacent to a field definition.'\n    },\n    ARGUMENT_DEFINITION: {\n      value: _directives.DirectiveLocation.ARGUMENT_DEFINITION,\n      description: 'Location adjacent to an argument definition.'\n    },\n    INTERFACE: {\n      value: _directives.DirectiveLocation.INTERFACE,\n      description: 'Location adjacent to an interface definition.'\n    },\n    UNION: {\n      value: _directives.DirectiveLocation.UNION,\n      description: 'Location adjacent to a union definition.'\n    },\n    ENUM: {\n      value: _directives.DirectiveLocation.ENUM,\n      description: 'Location adjacent to an enum definition.'\n    },\n    ENUM_VALUE: {\n      value: _directives.DirectiveLocation.ENUM_VALUE,\n      description: 'Location adjacent to an enum value definition.'\n    },\n    INPUT_OBJECT: {\n      value: _directives.DirectiveLocation.INPUT_OBJECT,\n      description: 'Location adjacent to an input object type definition.'\n    },\n    INPUT_FIELD_DEFINITION: {\n      value: _directives.DirectiveLocation.INPUT_FIELD_DEFINITION,\n      description: 'Location adjacent to an input object field definition.'\n    }\n  }\n});\n\nvar __Type = exports.__Type = new _definition.GraphQLObjectType({\n  name: '__Type',\n  isIntrospection: true,\n  description: 'The fundamental unit of any GraphQL Schema is the type. There are ' + 'many kinds of types in GraphQL as represented by the `__TypeKind` enum.' + '\\n\\nDepending on the kind of a type, certain fields describe ' + 'information about that type. Scalar types provide no information ' + 'beyond a name and description, while Enum types provide their values. ' + 'Object and Interface types provide the fields they describe. Abstract ' + 'types, Union and Interface, provide the Object types possible ' + 'at runtime. List and NonNull types compose other types.',\n  fields: function fields() {\n    return {\n      kind: {\n        type: new _definition.GraphQLNonNull(__TypeKind),\n        resolve: function resolve(type) {\n          if (type instanceof _definition.GraphQLScalarType) {\n            return TypeKind.SCALAR;\n          } else if (type instanceof _definition.GraphQLObjectType) {\n            return TypeKind.OBJECT;\n          } else if (type instanceof _definition.GraphQLInterfaceType) {\n            return TypeKind.INTERFACE;\n          } else if (type instanceof _definition.GraphQLUnionType) {\n            return TypeKind.UNION;\n          } else if (type instanceof _definition.GraphQLEnumType) {\n            return TypeKind.ENUM;\n          } else if (type instanceof _definition.GraphQLInputObjectType) {\n            return TypeKind.INPUT_OBJECT;\n          } else if (type instanceof _definition.GraphQLList) {\n            return TypeKind.LIST;\n          } else if (type instanceof _definition.GraphQLNonNull) {\n            return TypeKind.NON_NULL;\n          }\n          throw new Error('Unknown kind of type: ' + type);\n        }\n      },\n      name: { type: _scalars.GraphQLString },\n      description: { type: _scalars.GraphQLString },\n      fields: {\n        type: new _definition.GraphQLList(new _definition.GraphQLNonNull(__Field)),\n        args: {\n          includeDeprecated: { type: _scalars.GraphQLBoolean, defaultValue: false }\n        },\n        resolve: function resolve(type, _ref) {\n          var includeDeprecated = _ref.includeDeprecated;\n\n          if (type instanceof _definition.GraphQLObjectType || type instanceof _definition.GraphQLInterfaceType) {\n            var fieldMap = type.getFields();\n            var fields = Object.keys(fieldMap).map(function (fieldName) {\n              return fieldMap[fieldName];\n            });\n            if (!includeDeprecated) {\n              fields = fields.filter(function (field) {\n                return !field.deprecationReason;\n              });\n            }\n            return fields;\n          }\n          return null;\n        }\n      },\n      interfaces: {\n        type: new _definition.GraphQLList(new _definition.GraphQLNonNull(__Type)),\n        resolve: function resolve(type) {\n          if (type instanceof _definition.GraphQLObjectType) {\n            return type.getInterfaces();\n          }\n        }\n      },\n      possibleTypes: {\n        type: new _definition.GraphQLList(new _definition.GraphQLNonNull(__Type)),\n        resolve: function resolve(type, args, context, _ref2) {\n          var schema = _ref2.schema;\n\n          if ((0, _definition.isAbstractType)(type)) {\n            return schema.getPossibleTypes(type);\n          }\n        }\n      },\n      enumValues: {\n        type: new _definition.GraphQLList(new _definition.GraphQLNonNull(__EnumValue)),\n        args: {\n          includeDeprecated: { type: _scalars.GraphQLBoolean, defaultValue: false }\n        },\n        resolve: function resolve(type, _ref3) {\n          var includeDeprecated = _ref3.includeDeprecated;\n\n          if (type instanceof _definition.GraphQLEnumType) {\n            var values = type.getValues();\n            if (!includeDeprecated) {\n              values = values.filter(function (value) {\n                return !value.deprecationReason;\n              });\n            }\n            return values;\n          }\n        }\n      },\n      inputFields: {\n        type: new _definition.GraphQLList(new _definition.GraphQLNonNull(__InputValue)),\n        resolve: function resolve(type) {\n          if (type instanceof _definition.GraphQLInputObjectType) {\n            var fieldMap = type.getFields();\n            return Object.keys(fieldMap).map(function (fieldName) {\n              return fieldMap[fieldName];\n            });\n          }\n        }\n      },\n      ofType: { type: __Type }\n    };\n  }\n});\n\nvar __Field = exports.__Field = new _definition.GraphQLObjectType({\n  name: '__Field',\n  isIntrospection: true,\n  description: 'Object and Interface types are described by a list of Fields, each of ' + 'which has a name, potentially a list of arguments, and a return type.',\n  fields: function fields() {\n    return {\n      name: { type: new _definition.GraphQLNonNull(_scalars.GraphQLString) },\n      description: { type: _scalars.GraphQLString },\n      args: {\n        type: new _definition.GraphQLNonNull(new _definition.GraphQLList(new _definition.GraphQLNonNull(__InputValue))),\n        resolve: function resolve(field) {\n          return field.args || [];\n        }\n      },\n      type: { type: new _definition.GraphQLNonNull(__Type) },\n      isDeprecated: { type: new _definition.GraphQLNonNull(_scalars.GraphQLBoolean) },\n      deprecationReason: {\n        type: _scalars.GraphQLString\n      }\n    };\n  }\n});\n\nvar __InputValue = exports.__InputValue = new _definition.GraphQLObjectType({\n  name: '__InputValue',\n  isIntrospection: true,\n  description: 'Arguments provided to Fields or Directives and the input fields of an ' + 'InputObject are represented as Input Values which describe their type ' + 'and optionally a default value.',\n  fields: function fields() {\n    return {\n      name: { type: new _definition.GraphQLNonNull(_scalars.GraphQLString) },\n      description: { type: _scalars.GraphQLString },\n      type: { type: new _definition.GraphQLNonNull(__Type) },\n      defaultValue: {\n        type: _scalars.GraphQLString,\n        description: 'A GraphQL-formatted string representing the default value for this ' + 'input value.',\n        resolve: function resolve(inputVal) {\n          return (0, _isInvalid2.default)(inputVal.defaultValue) ? null : (0, _printer.print)((0, _astFromValue.astFromValue)(inputVal.defaultValue, inputVal.type));\n        }\n      }\n    };\n  }\n});\n\nvar __EnumValue = exports.__EnumValue = new _definition.GraphQLObjectType({\n  name: '__EnumValue',\n  isIntrospection: true,\n  description: 'One possible value for a given Enum. Enum values are unique values, not ' + 'a placeholder for a string or numeric value. However an Enum value is ' + 'returned in a JSON response as a string.',\n  fields: function fields() {\n    return {\n      name: { type: new _definition.GraphQLNonNull(_scalars.GraphQLString) },\n      description: { type: _scalars.GraphQLString },\n      isDeprecated: { type: new _definition.GraphQLNonNull(_scalars.GraphQLBoolean) },\n      deprecationReason: {\n        type: _scalars.GraphQLString\n      }\n    };\n  }\n});\n\nvar TypeKind = exports.TypeKind = {\n  SCALAR: 'SCALAR',\n  OBJECT: 'OBJECT',\n  INTERFACE: 'INTERFACE',\n  UNION: 'UNION',\n  ENUM: 'ENUM',\n  INPUT_OBJECT: 'INPUT_OBJECT',\n  LIST: 'LIST',\n  NON_NULL: 'NON_NULL'\n};\n\nvar __TypeKind = exports.__TypeKind = new _definition.GraphQLEnumType({\n  name: '__TypeKind',\n  isIntrospection: true,\n  description: 'An enum describing what kind of type a given `__Type` is.',\n  values: {\n    SCALAR: {\n      value: TypeKind.SCALAR,\n      description: 'Indicates this type is a scalar.'\n    },\n    OBJECT: {\n      value: TypeKind.OBJECT,\n      description: 'Indicates this type is an object. ' + '`fields` and `interfaces` are valid fields.'\n    },\n    INTERFACE: {\n      value: TypeKind.INTERFACE,\n      description: 'Indicates this type is an interface. ' + '`fields` and `possibleTypes` are valid fields.'\n    },\n    UNION: {\n      value: TypeKind.UNION,\n      description: 'Indicates this type is a union. ' + '`possibleTypes` is a valid field.'\n    },\n    ENUM: {\n      value: TypeKind.ENUM,\n      description: 'Indicates this type is an enum. ' + '`enumValues` is a valid field.'\n    },\n    INPUT_OBJECT: {\n      value: TypeKind.INPUT_OBJECT,\n      description: 'Indicates this type is an input object. ' + '`inputFields` is a valid field.'\n    },\n    LIST: {\n      value: TypeKind.LIST,\n      description: 'Indicates this type is a list. ' + '`ofType` is a valid field.'\n    },\n    NON_NULL: {\n      value: TypeKind.NON_NULL,\n      description: 'Indicates this type is a non-null. ' + '`ofType` is a valid field.'\n    }\n  }\n});\n\n/**\n * Note that these are GraphQLField and not GraphQLFieldConfig,\n * so the format for args is different.\n */\n\nvar SchemaMetaFieldDef = exports.SchemaMetaFieldDef = {\n  name: '__schema',\n  type: new _definition.GraphQLNonNull(__Schema),\n  description: 'Access the current type schema of this server.',\n  args: [],\n  resolve: function resolve(source, args, context, _ref4) {\n    var schema = _ref4.schema;\n    return schema;\n  }\n};\n\nvar TypeMetaFieldDef = exports.TypeMetaFieldDef = {\n  name: '__type',\n  type: __Type,\n  description: 'Request the type information of a single type.',\n  args: [{ name: 'name', type: new _definition.GraphQLNonNull(_scalars.GraphQLString) }],\n  resolve: function resolve(source, _ref5, context, _ref6) {\n    var name = _ref5.name;\n    var schema = _ref6.schema;\n    return schema.getType(name);\n  }\n};\n\nvar TypeNameMetaFieldDef = exports.TypeNameMetaFieldDef = {\n  name: '__typename',\n  type: new _definition.GraphQLNonNull(_scalars.GraphQLString),\n  description: 'The name of the current Object type at runtime.',\n  args: [],\n  resolve: function resolve(source, args, context, _ref7) {\n    var parentType = _ref7.parentType;\n    return parentType.name;\n  }\n};","import {\n  DirectiveNode,\n  FieldNode,\n  IntValueNode,\n  FloatValueNode,\n  StringValueNode,\n  BooleanValueNode,\n  ObjectValueNode,\n  ListValueNode,\n  EnumValueNode,\n  NullValueNode,\n  VariableNode,\n  InlineFragmentNode,\n  ValueNode,\n  SelectionNode,\n  NameNode,\n} from 'graphql';\n\nimport stringify from 'fast-json-stable-stringify';\nimport { InvariantError } from 'ts-invariant';\n\nexport interface IdValue {\n  type: 'id';\n  id: string;\n  generated: boolean;\n  typename: string | undefined;\n}\n\nexport interface JsonValue {\n  type: 'json';\n  json: any;\n}\n\nexport type ListValue = Array<null | IdValue>;\n\nexport type StoreValue =\n  | number\n  | string\n  | string[]\n  | IdValue\n  | ListValue\n  | JsonValue\n  | null\n  | undefined\n  | void\n  | Object;\n\nexport type ScalarValue = StringValueNode | BooleanValueNode | EnumValueNode;\n\nexport function isScalarValue(value: ValueNode): value is ScalarValue {\n  return ['StringValue', 'BooleanValue', 'EnumValue'].indexOf(value.kind) > -1;\n}\n\nexport type NumberValue = IntValueNode | FloatValueNode;\n\nexport function isNumberValue(value: ValueNode): value is NumberValue {\n  return ['IntValue', 'FloatValue'].indexOf(value.kind) > -1;\n}\n\nfunction isStringValue(value: ValueNode): value is StringValueNode {\n  return value.kind === 'StringValue';\n}\n\nfunction isBooleanValue(value: ValueNode): value is BooleanValueNode {\n  return value.kind === 'BooleanValue';\n}\n\nfunction isIntValue(value: ValueNode): value is IntValueNode {\n  return value.kind === 'IntValue';\n}\n\nfunction isFloatValue(value: ValueNode): value is FloatValueNode {\n  return value.kind === 'FloatValue';\n}\n\nfunction isVariable(value: ValueNode): value is VariableNode {\n  return value.kind === 'Variable';\n}\n\nfunction isObjectValue(value: ValueNode): value is ObjectValueNode {\n  return value.kind === 'ObjectValue';\n}\n\nfunction isListValue(value: ValueNode): value is ListValueNode {\n  return value.kind === 'ListValue';\n}\n\nfunction isEnumValue(value: ValueNode): value is EnumValueNode {\n  return value.kind === 'EnumValue';\n}\n\nfunction isNullValue(value: ValueNode): value is NullValueNode {\n  return value.kind === 'NullValue';\n}\n\nexport function valueToObjectRepresentation(\n  argObj: any,\n  name: NameNode,\n  value: ValueNode,\n  variables?: Object,\n) {\n  if (isIntValue(value) || isFloatValue(value)) {\n    argObj[name.value] = Number(value.value);\n  } else if (isBooleanValue(value) || isStringValue(value)) {\n    argObj[name.value] = value.value;\n  } else if (isObjectValue(value)) {\n    const nestedArgObj = {};\n    value.fields.map(obj =>\n      valueToObjectRepresentation(nestedArgObj, obj.name, obj.value, variables),\n    );\n    argObj[name.value] = nestedArgObj;\n  } else if (isVariable(value)) {\n    const variableValue = (variables || ({} as any))[value.name.value];\n    argObj[name.value] = variableValue;\n  } else if (isListValue(value)) {\n    argObj[name.value] = value.values.map(listValue => {\n      const nestedArgArrayObj = {};\n      valueToObjectRepresentation(\n        nestedArgArrayObj,\n        name,\n        listValue,\n        variables,\n      );\n      return (nestedArgArrayObj as any)[name.value];\n    });\n  } else if (isEnumValue(value)) {\n    argObj[name.value] = (value as EnumValueNode).value;\n  } else if (isNullValue(value)) {\n    argObj[name.value] = null;\n  } else {\n    throw new InvariantError(\n      `The inline argument \"${name.value}\" of kind \"${(value as any).kind}\"` +\n        'is not supported. Use variables instead of inline arguments to ' +\n        'overcome this limitation.',\n    );\n  }\n}\n\nexport function storeKeyNameFromField(\n  field: FieldNode,\n  variables?: Object,\n): string {\n  let directivesObj: any = null;\n  if (field.directives) {\n    directivesObj = {};\n    field.directives.forEach(directive => {\n      directivesObj[directive.name.value] = {};\n\n      if (directive.arguments) {\n        directive.arguments.forEach(({ name, value }) =>\n          valueToObjectRepresentation(\n            directivesObj[directive.name.value],\n            name,\n            value,\n            variables,\n          ),\n        );\n      }\n    });\n  }\n\n  let argObj: any = null;\n  if (field.arguments && field.arguments.length) {\n    argObj = {};\n    field.arguments.forEach(({ name, value }) =>\n      valueToObjectRepresentation(argObj, name, value, variables),\n    );\n  }\n\n  return getStoreKeyName(field.name.value, argObj, directivesObj);\n}\n\nexport type Directives = {\n  [directiveName: string]: {\n    [argName: string]: any;\n  };\n};\n\nconst KNOWN_DIRECTIVES: string[] = [\n  'connection',\n  'include',\n  'skip',\n  'client',\n  'rest',\n  'export',\n];\n\nexport function getStoreKeyName(\n  fieldName: string,\n  args?: Object,\n  directives?: Directives,\n): string {\n  if (\n    directives &&\n    directives['connection'] &&\n    directives['connection']['key']\n  ) {\n    if (\n      directives['connection']['filter'] &&\n      (directives['connection']['filter'] as string[]).length > 0\n    ) {\n      const filterKeys = directives['connection']['filter']\n        ? (directives['connection']['filter'] as string[])\n        : [];\n      filterKeys.sort();\n\n      const queryArgs = args as { [key: string]: any };\n      const filteredArgs = {} as { [key: string]: any };\n      filterKeys.forEach(key => {\n        filteredArgs[key] = queryArgs[key];\n      });\n\n      return `${directives['connection']['key']}(${JSON.stringify(\n        filteredArgs,\n      )})`;\n    } else {\n      return directives['connection']['key'];\n    }\n  }\n\n  let completeFieldName: string = fieldName;\n\n  if (args) {\n    // We can't use `JSON.stringify` here since it's non-deterministic,\n    // and can lead to different store key names being created even though\n    // the `args` object used during creation has the same properties/values.\n    const stringifiedArgs: string = stringify(args);\n    completeFieldName += `(${stringifiedArgs})`;\n  }\n\n  if (directives) {\n    Object.keys(directives).forEach(key => {\n      if (KNOWN_DIRECTIVES.indexOf(key) !== -1) return;\n      if (directives[key] && Object.keys(directives[key]).length) {\n        completeFieldName += `@${key}(${JSON.stringify(directives[key])})`;\n      } else {\n        completeFieldName += `@${key}`;\n      }\n    });\n  }\n\n  return completeFieldName;\n}\n\nexport function argumentsObjectFromField(\n  field: FieldNode | DirectiveNode,\n  variables: Object,\n): Object {\n  if (field.arguments && field.arguments.length) {\n    const argObj: Object = {};\n    field.arguments.forEach(({ name, value }) =>\n      valueToObjectRepresentation(argObj, name, value, variables),\n    );\n    return argObj;\n  }\n\n  return null;\n}\n\nexport function resultKeyNameFromField(field: FieldNode): string {\n  return field.alias ? field.alias.value : field.name.value;\n}\n\nexport function isField(selection: SelectionNode): selection is FieldNode {\n  return selection.kind === 'Field';\n}\n\nexport function isInlineFragment(\n  selection: SelectionNode,\n): selection is InlineFragmentNode {\n  return selection.kind === 'InlineFragment';\n}\n\nexport function isIdValue(idObject: StoreValue): idObject is IdValue {\n  return idObject &&\n    (idObject as IdValue | JsonValue).type === 'id' &&\n    typeof (idObject as IdValue).generated === 'boolean';\n}\n\nexport type IdConfig = {\n  id: string;\n  typename: string | undefined;\n};\n\nexport function toIdValue(\n  idConfig: string | IdConfig,\n  generated = false,\n): IdValue {\n  return {\n    type: 'id',\n    generated,\n    ...(typeof idConfig === 'string'\n      ? { id: idConfig, typename: undefined }\n      : idConfig),\n  };\n}\n\nexport function isJsonValue(jsonObject: StoreValue): jsonObject is JsonValue {\n  return (\n    jsonObject != null &&\n    typeof jsonObject === 'object' &&\n    (jsonObject as IdValue | JsonValue).type === 'json'\n  );\n}\n\nfunction defaultValueFromVariable(node: VariableNode) {\n  throw new InvariantError(`Variable nodes are not supported by valueFromNode`);\n}\n\nexport type VariableValue = (node: VariableNode) => any;\n\n/**\n * Evaluate a ValueNode and yield its value in its natural JS form.\n */\nexport function valueFromNode(\n  node: ValueNode,\n  onVariable: VariableValue = defaultValueFromVariable,\n): any {\n  switch (node.kind) {\n    case 'Variable':\n      return onVariable(node);\n    case 'NullValue':\n      return null;\n    case 'IntValue':\n      return parseInt(node.value, 10);\n    case 'FloatValue':\n      return parseFloat(node.value);\n    case 'ListValue':\n      return node.values.map(v => valueFromNode(v, onVariable));\n    case 'ObjectValue': {\n      const value: { [key: string]: any } = {};\n      for (const field of node.fields) {\n        value[field.name.value] = valueFromNode(field.value, onVariable);\n      }\n      return value;\n    }\n    default:\n      return node.value;\n  }\n}\n","// Provides the methods that allow QueryManager to handle the `skip` and\n// `include` directives within GraphQL.\nimport {\n  FieldNode,\n  SelectionNode,\n  VariableNode,\n  BooleanValueNode,\n  DirectiveNode,\n  DocumentNode,\n  ArgumentNode,\n  ValueNode,\n} from 'graphql';\n\nimport { visit } from 'graphql/language/visitor';\n\nimport { invariant } from 'ts-invariant';\n\nimport { argumentsObjectFromField } from './storeUtils';\n\nexport type DirectiveInfo = {\n  [fieldName: string]: { [argName: string]: any };\n};\n\nexport function getDirectiveInfoFromField(\n  field: FieldNode,\n  variables: Object,\n): DirectiveInfo {\n  if (field.directives && field.directives.length) {\n    const directiveObj: DirectiveInfo = {};\n    field.directives.forEach((directive: DirectiveNode) => {\n      directiveObj[directive.name.value] = argumentsObjectFromField(\n        directive,\n        variables,\n      );\n    });\n    return directiveObj;\n  }\n  return null;\n}\n\nexport function shouldInclude(\n  selection: SelectionNode,\n  variables: { [name: string]: any } = {},\n): boolean {\n  return getInclusionDirectives(\n    selection.directives,\n  ).every(({ directive, ifArgument }) => {\n    let evaledValue: boolean = false;\n    if (ifArgument.value.kind === 'Variable') {\n      evaledValue = variables[(ifArgument.value as VariableNode).name.value];\n      invariant(\n        evaledValue !== void 0,\n        `Invalid variable referenced in @${directive.name.value} directive.`,\n      );\n    } else {\n      evaledValue = (ifArgument.value as BooleanValueNode).value;\n    }\n    return directive.name.value === 'skip' ? !evaledValue : evaledValue;\n  });\n}\n\nexport function getDirectiveNames(doc: DocumentNode) {\n  const names: string[] = [];\n\n  visit(doc, {\n    Directive(node) {\n      names.push(node.name.value);\n    },\n  });\n\n  return names;\n}\n\nexport function hasDirectives(names: string[], doc: DocumentNode) {\n  return getDirectiveNames(doc).some(\n    (name: string) => names.indexOf(name) > -1,\n  );\n}\n\nexport function hasClientExports(document: DocumentNode) {\n  return (\n    document &&\n    hasDirectives(['client'], document) &&\n    hasDirectives(['export'], document)\n  );\n}\n\nexport type InclusionDirectives = Array<{\n  directive: DirectiveNode;\n  ifArgument: ArgumentNode;\n}>;\n\nfunction isInclusionDirective({ name: { value } }: DirectiveNode): boolean {\n  return value === 'skip' || value === 'include';\n}\n\nexport function getInclusionDirectives(\n  directives: ReadonlyArray<DirectiveNode>,\n): InclusionDirectives {\n  return directives ? directives.filter(isInclusionDirective).map(directive => {\n    const directiveArguments = directive.arguments;\n    const directiveName = directive.name.value;\n\n    invariant(\n      directiveArguments && directiveArguments.length === 1,\n      `Incorrect number of arguments for the @${directiveName} directive.`,\n    );\n\n    const ifArgument = directiveArguments[0];\n    invariant(\n      ifArgument.name && ifArgument.name.value === 'if',\n      `Invalid argument for the @${directiveName} directive.`,\n    );\n\n    const ifValue: ValueNode = ifArgument.value;\n\n    // means it has to be a variable value if this is a valid @skip or @include directive\n    invariant(\n      ifValue &&\n        (ifValue.kind === 'Variable' || ifValue.kind === 'BooleanValue'),\n      `Argument for the @${directiveName} directive must be a variable or a boolean value.`,\n    );\n\n    return { directive, ifArgument };\n  }) : [];\n}\n\n","import { DocumentNode, FragmentDefinitionNode } from 'graphql';\nimport { invariant, InvariantError } from 'ts-invariant';\n\n/**\n * Returns a query document which adds a single query operation that only\n * spreads the target fragment inside of it.\n *\n * So for example a document of:\n *\n * ```graphql\n * fragment foo on Foo { a b c }\n * ```\n *\n * Turns into:\n *\n * ```graphql\n * { ...foo }\n *\n * fragment foo on Foo { a b c }\n * ```\n *\n * The target fragment will either be the only fragment in the document, or a\n * fragment specified by the provided `fragmentName`. If there is more than one\n * fragment, but a `fragmentName` was not defined then an error will be thrown.\n */\nexport function getFragmentQueryDocument(\n  document: DocumentNode,\n  fragmentName?: string,\n): DocumentNode {\n  let actualFragmentName = fragmentName;\n\n  // Build an array of all our fragment definitions that will be used for\n  // validations. We also do some validations on the other definitions in the\n  // document while building this list.\n  const fragments: Array<FragmentDefinitionNode> = [];\n  document.definitions.forEach(definition => {\n    // Throw an error if we encounter an operation definition because we will\n    // define our own operation definition later on.\n    if (definition.kind === 'OperationDefinition') {\n      throw new InvariantError(\n        `Found a ${definition.operation} operation${\n          definition.name ? ` named '${definition.name.value}'` : ''\n        }. ` +\n          'No operations are allowed when using a fragment as a query. Only fragments are allowed.',\n      );\n    }\n    // Add our definition to the fragments array if it is a fragment\n    // definition.\n    if (definition.kind === 'FragmentDefinition') {\n      fragments.push(definition);\n    }\n  });\n\n  // If the user did not give us a fragment name then let us try to get a\n  // name from a single fragment in the definition.\n  if (typeof actualFragmentName === 'undefined') {\n    invariant(\n      fragments.length === 1,\n      `Found ${\n        fragments.length\n      } fragments. \\`fragmentName\\` must be provided when there is not exactly 1 fragment.`,\n    );\n    actualFragmentName = fragments[0].name.value;\n  }\n\n  // Generate a query document with an operation that simply spreads the\n  // fragment inside of it.\n  const query: DocumentNode = {\n    ...document,\n    definitions: [\n      {\n        kind: 'OperationDefinition',\n        operation: 'query',\n        selectionSet: {\n          kind: 'SelectionSet',\n          selections: [\n            {\n              kind: 'FragmentSpread',\n              name: {\n                kind: 'Name',\n                value: actualFragmentName,\n              },\n            },\n          ],\n        },\n      },\n      ...document.definitions,\n    ],\n  };\n\n  return query;\n}\n","/**\n * Adds the properties of one or more source objects to a target object. Works exactly like\n * `Object.assign`, but as a utility to maintain support for IE 11.\n *\n * @see https://github.com/apollostack/apollo-client/pull/1009\n */\nexport function assign<A, B>(a: A, b: B): A & B;\nexport function assign<A, B, C>(a: A, b: B, c: C): A & B & C;\nexport function assign<A, B, C, D>(a: A, b: B, c: C, d: D): A & B & C & D;\nexport function assign<A, B, C, D, E>(\n  a: A,\n  b: B,\n  c: C,\n  d: D,\n  e: E,\n): A & B & C & D & E;\nexport function assign(target: any, ...sources: Array<any>): any;\nexport function assign(\n  target: { [key: string]: any },\n  ...sources: Array<{ [key: string]: any }>\n): { [key: string]: any } {\n  sources.forEach(source => {\n    if (typeof source === 'undefined' || source === null) {\n      return;\n    }\n    Object.keys(source).forEach(key => {\n      target[key] = source[key];\n    });\n  });\n  return target;\n}\n","import {\n  DocumentNode,\n  OperationDefinitionNode,\n  FragmentDefinitionNode,\n  ValueNode,\n} from 'graphql';\n\nimport { invariant, InvariantError } from 'ts-invariant';\n\nimport { assign } from './util/assign';\n\nimport { valueToObjectRepresentation, JsonValue } from './storeUtils';\n\nexport function getMutationDefinition(\n  doc: DocumentNode,\n): OperationDefinitionNode {\n  checkDocument(doc);\n\n  let mutationDef: OperationDefinitionNode | null = doc.definitions.filter(\n    definition =>\n      definition.kind === 'OperationDefinition' &&\n      definition.operation === 'mutation',\n  )[0] as OperationDefinitionNode;\n\n  invariant(mutationDef, 'Must contain a mutation definition.');\n\n  return mutationDef;\n}\n\n// Checks the document for errors and throws an exception if there is an error.\nexport function checkDocument(doc: DocumentNode) {\n  invariant(\n    doc && doc.kind === 'Document',\n    `Expecting a parsed GraphQL document. Perhaps you need to wrap the query \\\nstring in a \"gql\" tag? http://docs.apollostack.com/apollo-client/core.html#gql`,\n  );\n\n  const operations = doc.definitions\n    .filter(d => d.kind !== 'FragmentDefinition')\n    .map(definition => {\n      if (definition.kind !== 'OperationDefinition') {\n        throw new InvariantError(\n          `Schema type definitions not allowed in queries. Found: \"${\n            definition.kind\n          }\"`,\n        );\n      }\n      return definition;\n    });\n\n  invariant(\n    operations.length <= 1,\n    `Ambiguous GraphQL document: contains ${operations.length} operations`,\n  );\n\n  return doc;\n}\n\nexport function getOperationDefinition(\n  doc: DocumentNode,\n): OperationDefinitionNode | undefined {\n  checkDocument(doc);\n  return doc.definitions.filter(\n    definition => definition.kind === 'OperationDefinition',\n  )[0] as OperationDefinitionNode;\n}\n\nexport function getOperationDefinitionOrDie(\n  document: DocumentNode,\n): OperationDefinitionNode {\n  const def = getOperationDefinition(document);\n  invariant(def, `GraphQL document is missing an operation`);\n  return def;\n}\n\nexport function getOperationName(doc: DocumentNode): string | null {\n  return (\n    doc.definitions\n      .filter(\n        definition =>\n          definition.kind === 'OperationDefinition' && definition.name,\n      )\n      .map((x: OperationDefinitionNode) => x.name.value)[0] || null\n  );\n}\n\n// Returns the FragmentDefinitions from a particular document as an array\nexport function getFragmentDefinitions(\n  doc: DocumentNode,\n): FragmentDefinitionNode[] {\n  return doc.definitions.filter(\n    definition => definition.kind === 'FragmentDefinition',\n  ) as FragmentDefinitionNode[];\n}\n\nexport function getQueryDefinition(doc: DocumentNode): OperationDefinitionNode {\n  const queryDef = getOperationDefinition(doc) as OperationDefinitionNode;\n\n  invariant(\n    queryDef && queryDef.operation === 'query',\n    'Must contain a query definition.',\n  );\n\n  return queryDef;\n}\n\nexport function getFragmentDefinition(\n  doc: DocumentNode,\n): FragmentDefinitionNode {\n  invariant(\n    doc.kind === 'Document',\n    `Expecting a parsed GraphQL document. Perhaps you need to wrap the query \\\nstring in a \"gql\" tag? http://docs.apollostack.com/apollo-client/core.html#gql`,\n  );\n\n  invariant(\n    doc.definitions.length <= 1,\n    'Fragment must have exactly one definition.',\n  );\n\n  const fragmentDef = doc.definitions[0] as FragmentDefinitionNode;\n\n  invariant(\n    fragmentDef.kind === 'FragmentDefinition',\n    'Must be a fragment definition.',\n  );\n\n  return fragmentDef as FragmentDefinitionNode;\n}\n\n/**\n * Returns the first operation definition found in this document.\n * If no operation definition is found, the first fragment definition will be returned.\n * If no definitions are found, an error will be thrown.\n */\nexport function getMainDefinition(\n  queryDoc: DocumentNode,\n): OperationDefinitionNode | FragmentDefinitionNode {\n  checkDocument(queryDoc);\n\n  let fragmentDefinition;\n\n  for (let definition of queryDoc.definitions) {\n    if (definition.kind === 'OperationDefinition') {\n      const operation = (definition as OperationDefinitionNode).operation;\n      if (\n        operation === 'query' ||\n        operation === 'mutation' ||\n        operation === 'subscription'\n      ) {\n        return definition as OperationDefinitionNode;\n      }\n    }\n    if (definition.kind === 'FragmentDefinition' && !fragmentDefinition) {\n      // we do this because we want to allow multiple fragment definitions\n      // to precede an operation definition.\n      fragmentDefinition = definition as FragmentDefinitionNode;\n    }\n  }\n\n  if (fragmentDefinition) {\n    return fragmentDefinition;\n  }\n\n  throw new InvariantError(\n    'Expected a parsed GraphQL query with a query, mutation, subscription, or a fragment.',\n  );\n}\n\n/**\n * This is an interface that describes a map from fragment names to fragment definitions.\n */\nexport interface FragmentMap {\n  [fragmentName: string]: FragmentDefinitionNode;\n}\n\n// Utility function that takes a list of fragment definitions and makes a hash out of them\n// that maps the name of the fragment to the fragment definition.\nexport function createFragmentMap(\n  fragments: FragmentDefinitionNode[] = [],\n): FragmentMap {\n  const symTable: FragmentMap = {};\n  fragments.forEach(fragment => {\n    symTable[fragment.name.value] = fragment;\n  });\n\n  return symTable;\n}\n\nexport function getDefaultValues(\n  definition: OperationDefinitionNode | undefined,\n): { [key: string]: JsonValue } {\n  if (\n    definition &&\n    definition.variableDefinitions &&\n    definition.variableDefinitions.length\n  ) {\n    const defaultValues = definition.variableDefinitions\n      .filter(({ defaultValue }) => defaultValue)\n      .map(\n        ({ variable, defaultValue }): { [key: string]: JsonValue } => {\n          const defaultValueObj: { [key: string]: JsonValue } = {};\n          valueToObjectRepresentation(\n            defaultValueObj,\n            variable.name,\n            defaultValue as ValueNode,\n          );\n\n          return defaultValueObj;\n        },\n      );\n\n    return assign({}, ...defaultValues);\n  }\n\n  return {};\n}\n\n/**\n * Returns the names of all variables declared by the operation.\n */\nexport function variablesInOperation(\n  operation: OperationDefinitionNode,\n): Set<string> {\n  const names = new Set<string>();\n  if (operation.variableDefinitions) {\n    for (const definition of operation.variableDefinitions) {\n      names.add(definition.variable.name.value);\n    }\n  }\n\n  return names;\n}\n","export function filterInPlace<T>(\n  array: T[],\n  test: (elem: T) => boolean,\n  context?: any,\n): T[] {\n  let target = 0;\n  array.forEach(function (elem, i) {\n    if (test.call(this, elem, i, array)) {\n      array[target++] = elem;\n    }\n  }, context);\n  array.length = target;\n  return array;\n}\n","import {\n  DocumentNode,\n  SelectionNode,\n  SelectionSetNode,\n  OperationDefinitionNode,\n  FieldNode,\n  DirectiveNode,\n  FragmentDefinitionNode,\n  ArgumentNode,\n  FragmentSpreadNode,\n  VariableDefinitionNode,\n  VariableNode,\n} from 'graphql';\nimport { visit } from 'graphql/language/visitor';\n\nimport {\n  checkDocument,\n  getOperationDefinition,\n  getFragmentDefinition,\n  getFragmentDefinitions,\n  createFragmentMap,\n  FragmentMap,\n  getMainDefinition,\n} from './getFromAST';\nimport { filterInPlace } from './util/filterInPlace';\nimport { invariant } from 'ts-invariant';\nimport { isField, isInlineFragment } from './storeUtils';\n\nexport type RemoveNodeConfig<N> = {\n  name?: string;\n  test?: (node: N) => boolean;\n  remove?: boolean;\n};\n\nexport type GetNodeConfig<N> = {\n  name?: string;\n  test?: (node: N) => boolean;\n};\n\nexport type RemoveDirectiveConfig = RemoveNodeConfig<DirectiveNode>;\nexport type GetDirectiveConfig = GetNodeConfig<DirectiveNode>;\nexport type RemoveArgumentsConfig = RemoveNodeConfig<ArgumentNode>;\nexport type GetFragmentSpreadConfig = GetNodeConfig<FragmentSpreadNode>;\nexport type RemoveFragmentSpreadConfig = RemoveNodeConfig<FragmentSpreadNode>;\nexport type RemoveFragmentDefinitionConfig = RemoveNodeConfig<\n  FragmentDefinitionNode\n>;\nexport type RemoveVariableDefinitionConfig = RemoveNodeConfig<\n  VariableDefinitionNode\n>;\n\nconst TYPENAME_FIELD: FieldNode = {\n  kind: 'Field',\n  name: {\n    kind: 'Name',\n    value: '__typename',\n  },\n};\n\nfunction isEmpty(\n  op: OperationDefinitionNode | FragmentDefinitionNode,\n  fragments: FragmentMap,\n): boolean {\n  return op.selectionSet.selections.every(\n    selection =>\n      selection.kind === 'FragmentSpread' &&\n      isEmpty(fragments[selection.name.value], fragments),\n  );\n}\n\nfunction nullIfDocIsEmpty(doc: DocumentNode) {\n  return isEmpty(\n    getOperationDefinition(doc) || getFragmentDefinition(doc),\n    createFragmentMap(getFragmentDefinitions(doc)),\n  )\n    ? null\n    : doc;\n}\n\nfunction getDirectiveMatcher(\n  directives: (RemoveDirectiveConfig | GetDirectiveConfig)[],\n) {\n  return function directiveMatcher(directive: DirectiveNode) {\n    return directives.some(\n      dir =>\n        (dir.name && dir.name === directive.name.value) ||\n        (dir.test && dir.test(directive)),\n    );\n  };\n}\n\nexport function removeDirectivesFromDocument(\n  directives: RemoveDirectiveConfig[],\n  doc: DocumentNode,\n): DocumentNode | null {\n  const variablesInUse: Record<string, boolean> = Object.create(null);\n  let variablesToRemove: RemoveArgumentsConfig[] = [];\n\n  const fragmentSpreadsInUse: Record<string, boolean> = Object.create(null);\n  let fragmentSpreadsToRemove: RemoveFragmentSpreadConfig[] = [];\n\n  let modifiedDoc = nullIfDocIsEmpty(\n    visit(doc, {\n      Variable: {\n        enter(node, _key, parent) {\n          // Store each variable that's referenced as part of an argument\n          // (excluding operation definition variables), so we know which\n          // variables are being used. If we later want to remove a variable\n          // we'll fist check to see if it's being used, before continuing with\n          // the removal.\n          if (\n            (parent as VariableDefinitionNode).kind !== 'VariableDefinition'\n          ) {\n            variablesInUse[node.name.value] = true;\n          }\n        },\n      },\n\n      Field: {\n        enter(node) {\n          if (directives && node.directives) {\n            // If `remove` is set to true for a directive, and a directive match\n            // is found for a field, remove the field as well.\n            const shouldRemoveField = directives.some(\n              directive => directive.remove,\n            );\n\n            if (\n              shouldRemoveField &&\n              node.directives &&\n              node.directives.some(getDirectiveMatcher(directives))\n            ) {\n              if (node.arguments) {\n                // Store field argument variables so they can be removed\n                // from the operation definition.\n                node.arguments.forEach(arg => {\n                  if (arg.value.kind === 'Variable') {\n                    variablesToRemove.push({\n                      name: (arg.value as VariableNode).name.value,\n                    });\n                  }\n                });\n              }\n\n              if (node.selectionSet) {\n                // Store fragment spread names so they can be removed from the\n                // docuemnt.\n                getAllFragmentSpreadsFromSelectionSet(node.selectionSet).forEach(\n                  frag => {\n                    fragmentSpreadsToRemove.push({\n                      name: frag.name.value,\n                    });\n                  },\n                );\n              }\n\n              // Remove the field.\n              return null;\n            }\n          }\n        },\n      },\n\n      FragmentSpread: {\n        enter(node) {\n          // Keep track of referenced fragment spreads. This is used to\n          // determine if top level fragment definitions should be removed.\n          fragmentSpreadsInUse[node.name.value] = true;\n        },\n      },\n\n      Directive: {\n        enter(node) {\n          // If a matching directive is found, remove it.\n          if (getDirectiveMatcher(directives)(node)) {\n            return null;\n          }\n        },\n      },\n    }),\n  );\n\n  // If we've removed fields with arguments, make sure the associated\n  // variables are also removed from the rest of the document, as long as they\n  // aren't being used elsewhere.\n  if (\n    modifiedDoc &&\n    filterInPlace(variablesToRemove, v => !variablesInUse[v.name]).length\n  ) {\n    modifiedDoc = removeArgumentsFromDocument(variablesToRemove, modifiedDoc);\n  }\n\n  // If we've removed selection sets with fragment spreads, make sure the\n  // associated fragment definitions are also removed from the rest of the\n  // document, as long as they aren't being used elsewhere.\n  if (\n    modifiedDoc &&\n    filterInPlace(fragmentSpreadsToRemove, fs => !fragmentSpreadsInUse[fs.name])\n      .length\n  ) {\n    modifiedDoc = removeFragmentSpreadFromDocument(\n      fragmentSpreadsToRemove,\n      modifiedDoc,\n    );\n  }\n\n  return modifiedDoc;\n}\n\nexport function addTypenameToDocument(doc: DocumentNode): DocumentNode {\n  return visit(checkDocument(doc), {\n    SelectionSet: {\n      enter(node, _key, parent) {\n        // Don't add __typename to OperationDefinitions.\n        if (\n          parent &&\n          (parent as OperationDefinitionNode).kind === 'OperationDefinition'\n        ) {\n          return;\n        }\n\n        // No changes if no selections.\n        const { selections } = node;\n        if (!selections) {\n          return;\n        }\n\n        // If selections already have a __typename, or are part of an\n        // introspection query, do nothing.\n        const skip = selections.some(selection => {\n          return (\n            isField(selection) &&\n            (selection.name.value === '__typename' ||\n              selection.name.value.lastIndexOf('__', 0) === 0)\n          );\n        });\n        if (skip) {\n          return;\n        }\n\n        // If this SelectionSet is @export-ed as an input variable, it should\n        // not have a __typename field (see issue #4691).\n        const field = parent as FieldNode;\n        if (\n          isField(field) &&\n          field.directives &&\n          field.directives.some(d => d.name.value === 'export')\n        ) {\n          return;\n        }\n\n        // Create and return a new SelectionSet with a __typename Field.\n        return {\n          ...node,\n          selections: [...selections, TYPENAME_FIELD],\n        };\n      },\n    },\n  });\n}\n\nconst connectionRemoveConfig = {\n  test: (directive: DirectiveNode) => {\n    const willRemove = directive.name.value === 'connection';\n    if (willRemove) {\n      if (\n        !directive.arguments ||\n        !directive.arguments.some(arg => arg.name.value === 'key')\n      ) {\n        invariant.warn(\n          'Removing an @connection directive even though it does not have a key. ' +\n            'You may want to use the key parameter to specify a store key.',\n        );\n      }\n    }\n\n    return willRemove;\n  },\n};\n\nexport function removeConnectionDirectiveFromDocument(doc: DocumentNode) {\n  return removeDirectivesFromDocument(\n    [connectionRemoveConfig],\n    checkDocument(doc),\n  );\n}\n\nfunction hasDirectivesInSelectionSet(\n  directives: GetDirectiveConfig[],\n  selectionSet: SelectionSetNode,\n  nestedCheck = true,\n): boolean {\n  return (\n    selectionSet &&\n    selectionSet.selections &&\n    selectionSet.selections.some(selection =>\n      hasDirectivesInSelection(directives, selection, nestedCheck),\n    )\n  );\n}\n\nfunction hasDirectivesInSelection(\n  directives: GetDirectiveConfig[],\n  selection: SelectionNode,\n  nestedCheck = true,\n): boolean {\n  if (!isField(selection)) {\n    return true;\n  }\n\n  if (!selection.directives) {\n    return false;\n  }\n\n  return (\n    selection.directives.some(getDirectiveMatcher(directives)) ||\n    (nestedCheck &&\n      hasDirectivesInSelectionSet(\n        directives,\n        selection.selectionSet,\n        nestedCheck,\n      ))\n  );\n}\n\nexport function getDirectivesFromDocument(\n  directives: GetDirectiveConfig[],\n  doc: DocumentNode,\n): DocumentNode {\n  checkDocument(doc);\n\n  let parentPath: string;\n\n  return nullIfDocIsEmpty(\n    visit(doc, {\n      SelectionSet: {\n        enter(node, _key, _parent, path) {\n          const currentPath = path.join('-');\n\n          if (\n            !parentPath ||\n            currentPath === parentPath ||\n            !currentPath.startsWith(parentPath)\n          ) {\n            if (node.selections) {\n              const selectionsWithDirectives = node.selections.filter(\n                selection => hasDirectivesInSelection(directives, selection),\n              );\n\n              if (hasDirectivesInSelectionSet(directives, node, false)) {\n                parentPath = currentPath;\n              }\n\n              return {\n                ...node,\n                selections: selectionsWithDirectives,\n              };\n            } else {\n              return null;\n            }\n          }\n        },\n      },\n    }),\n  );\n}\n\nfunction getArgumentMatcher(config: RemoveArgumentsConfig[]) {\n  return function argumentMatcher(argument: ArgumentNode) {\n    return config.some(\n      (aConfig: RemoveArgumentsConfig) =>\n        argument.value &&\n        argument.value.kind === 'Variable' &&\n        argument.value.name &&\n        (aConfig.name === argument.value.name.value ||\n          (aConfig.test && aConfig.test(argument))),\n    );\n  };\n}\n\nexport function removeArgumentsFromDocument(\n  config: RemoveArgumentsConfig[],\n  doc: DocumentNode,\n): DocumentNode {\n  const argMatcher = getArgumentMatcher(config);\n\n  return nullIfDocIsEmpty(\n    visit(doc, {\n      OperationDefinition: {\n        enter(node) {\n          return {\n            ...node,\n            // Remove matching top level variables definitions.\n            variableDefinitions: node.variableDefinitions.filter(\n              varDef =>\n                !config.some(arg => arg.name === varDef.variable.name.value),\n            ),\n          };\n        },\n      },\n\n      Field: {\n        enter(node) {\n          // If `remove` is set to true for an argument, and an argument match\n          // is found for a field, remove the field as well.\n          const shouldRemoveField = config.some(argConfig => argConfig.remove);\n\n          if (shouldRemoveField) {\n            let argMatchCount = 0;\n            node.arguments.forEach(arg => {\n              if (argMatcher(arg)) {\n                argMatchCount += 1;\n              }\n            });\n            if (argMatchCount === 1) {\n              return null;\n            }\n          }\n        },\n      },\n\n      Argument: {\n        enter(node) {\n          // Remove all matching arguments.\n          if (argMatcher(node)) {\n            return null;\n          }\n        },\n      },\n    }),\n  );\n}\n\nexport function removeFragmentSpreadFromDocument(\n  config: RemoveFragmentSpreadConfig[],\n  doc: DocumentNode,\n): DocumentNode {\n  function enter(\n    node: FragmentSpreadNode | FragmentDefinitionNode,\n  ): null | void {\n    if (config.some(def => def.name === node.name.value)) {\n      return null;\n    }\n  }\n\n  return nullIfDocIsEmpty(\n    visit(doc, {\n      FragmentSpread: { enter },\n      FragmentDefinition: { enter },\n    }),\n  );\n}\n\nfunction getAllFragmentSpreadsFromSelectionSet(\n  selectionSet: SelectionSetNode,\n): FragmentSpreadNode[] {\n  const allFragments: FragmentSpreadNode[] = [];\n\n  selectionSet.selections.forEach(selection => {\n    if (\n      (isField(selection) || isInlineFragment(selection)) &&\n      selection.selectionSet\n    ) {\n      getAllFragmentSpreadsFromSelectionSet(selection.selectionSet).forEach(\n        frag => allFragments.push(frag),\n      );\n    } else if (selection.kind === 'FragmentSpread') {\n      allFragments.push(selection);\n    }\n  });\n\n  return allFragments;\n}\n\n// If the incoming document is a query, return it as is. Otherwise, build a\n// new document containing a query operation based on the selection set\n// of the previous main operation.\nexport function buildQueryFromSelectionSet(\n  document: DocumentNode,\n): DocumentNode {\n  const definition = getMainDefinition(document);\n  const definitionOperation = (<OperationDefinitionNode>definition).operation;\n\n  if (definitionOperation === 'query') {\n    // Already a query, so return the existing document.\n    return document;\n  }\n\n  // Build a new query using the selection set of the main operation.\n  const modifiedDoc = visit(document, {\n    OperationDefinition: {\n      enter(node) {\n        return {\n          ...node,\n          operation: 'query',\n        };\n      },\n    },\n  });\n  return modifiedDoc;\n}\n\n// Remove fields / selection sets that include an @client directive.\nexport function removeClientSetsFromDocument(\n  document: DocumentNode,\n): DocumentNode | null {\n  checkDocument(document);\n\n  let modifiedDoc = removeDirectivesFromDocument(\n    [\n      {\n        test: (directive: DirectiveNode) => directive.name.value === 'client',\n        remove: true,\n      },\n    ],\n    document,\n  );\n\n  // After a fragment definition has had its @client related document\n  // sets removed, if the only field it has left is a __typename field,\n  // remove the entire fragment operation to prevent it from being fired\n  // on the server.\n  if (modifiedDoc) {\n    modifiedDoc = visit(modifiedDoc, {\n      FragmentDefinition: {\n        enter(node) {\n          if (node.selectionSet) {\n            const isTypenameOnly = node.selectionSet.selections.every(\n              selection =>\n                isField(selection) && selection.name.value === '__typename',\n            );\n            if (isTypenameOnly) {\n              return null;\n            }\n          }\n        },\n      },\n    });\n  }\n\n  return modifiedDoc;\n}\n","export const canUseWeakMap = typeof WeakMap === 'function' && !(\n  typeof navigator === 'object' &&\n  navigator.product === 'ReactNative'\n);\n","const { toString } = Object.prototype;\n\n/**\n * Deeply clones a value to create a new instance.\n */\nexport function cloneDeep<T>(value: T): T {\n  return cloneDeepHelper(value, new Map());\n}\n\nfunction cloneDeepHelper<T>(val: T, seen: Map<any, any>): T {\n  switch (toString.call(val)) {\n  case \"[object Array]\": {\n    if (seen.has(val)) return seen.get(val);\n    const copy: T & any[] = (val as any).slice(0);\n    seen.set(val, copy);\n    copy.forEach(function (child, i) {\n      copy[i] = cloneDeepHelper(child, seen);\n    });\n    return copy;\n  }\n\n  case \"[object Object]\": {\n    if (seen.has(val)) return seen.get(val);\n    // High fidelity polyfills of Object.create and Object.getPrototypeOf are\n    // possible in all JS environments, so we will assume they exist/work.\n    const copy = Object.create(Object.getPrototypeOf(val));\n    seen.set(val, copy);\n    Object.keys(val).forEach(key => {\n      copy[key] = cloneDeepHelper((val as any)[key], seen);\n    });\n    return copy;\n  }\n\n  default:\n    return val;\n  }\n}\n","export function getEnv(): string | undefined {\n  if (typeof process !== 'undefined' && process.env.NODE_ENV) {\n    return process.env.NODE_ENV;\n  }\n\n  // default environment\n  return 'development';\n}\n\nexport function isEnv(env: string): boolean {\n  return getEnv() === env;\n}\n\nexport function isProduction(): boolean {\n  return isEnv('production') === true;\n}\n\nexport function isDevelopment(): boolean {\n  return isEnv('development') === true;\n}\n\nexport function isTest(): boolean {\n  return isEnv('test') === true;\n}\n","import { ExecutionResult } from 'graphql';\n\nexport function tryFunctionOrLogError(f: Function) {\n  try {\n    return f();\n  } catch (e) {\n    if (console.error) {\n      console.error(e);\n    }\n  }\n}\n\nexport function graphQLResultHasError(result: ExecutionResult) {\n  return result.errors && result.errors.length;\n}\n","import { isDevelopment, isTest } from './environment';\n\n// Taken (mostly) from https://github.com/substack/deep-freeze to avoid\n// import hassles with rollup.\nfunction deepFreeze(o: any) {\n  Object.freeze(o);\n\n  Object.getOwnPropertyNames(o).forEach(function(prop) {\n    if (\n      o[prop] !== null &&\n      (typeof o[prop] === 'object' || typeof o[prop] === 'function') &&\n      !Object.isFrozen(o[prop])\n    ) {\n      deepFreeze(o[prop]);\n    }\n  });\n\n  return o;\n}\n\nexport function maybeDeepFreeze(obj: any) {\n  if (isDevelopment() || isTest()) {\n    // Polyfilled Symbols potentially cause infinite / very deep recursion while deep freezing\n    // which is known to crash IE11 (https://github.com/apollographql/apollo-client/issues/3043).\n    const symbolIsPolyfilled =\n      typeof Symbol === 'function' && typeof Symbol('') === 'string';\n\n    if (!symbolIsPolyfilled) {\n      return deepFreeze(obj);\n    }\n  }\n  return obj;\n}\n","const { hasOwnProperty } = Object.prototype;\n\n// These mergeDeep and mergeDeepArray utilities merge any number of objects\n// together, sharing as much memory as possible with the source objects, while\n// remaining careful to avoid modifying any source objects.\n\n// Logically, the return type of mergeDeep should be the intersection of\n// all the argument types. The binary call signature is by far the most\n// common, but we support 0- through 5-ary as well. After that, the\n// resulting type is just the inferred array element type. Note to nerds:\n// there is a more clever way of doing this that converts the tuple type\n// first to a union type (easy enough: T[number]) and then converts the\n// union to an intersection type using distributive conditional type\n// inference, but that approach has several fatal flaws (boolean becomes\n// true & false, and the inferred type ends up as unknown in many cases),\n// in addition to being nearly impossible to explain/understand.\nexport type TupleToIntersection<T extends any[]> =\n  T extends [infer A] ? A :\n  T extends [infer A, infer B] ? A & B :\n  T extends [infer A, infer B, infer C] ? A & B & C :\n  T extends [infer A, infer B, infer C, infer D] ? A & B & C & D :\n  T extends [infer A, infer B, infer C, infer D, infer E] ? A & B & C & D & E :\n  T extends (infer U)[] ? U : any;\n\nexport function mergeDeep<T extends any[]>(\n  ...sources: T\n): TupleToIntersection<T> {\n  return mergeDeepArray(sources);\n}\n\n// In almost any situation where you could succeed in getting the\n// TypeScript compiler to infer a tuple type for the sources array, you\n// could just use mergeDeep instead of mergeDeepArray, so instead of\n// trying to convert T[] to an intersection type we just infer the array\n// element type, which works perfectly when the sources array has a\n// consistent element type.\nexport function mergeDeepArray<T>(sources: T[]): T {\n  let target = sources[0] || {} as T;\n  const count = sources.length;\n  if (count > 1) {\n    const pastCopies: any[] = [];\n    target = shallowCopyForMerge(target, pastCopies);\n    for (let i = 1; i < count; ++i) {\n      target = mergeHelper(target, sources[i], pastCopies);\n    }\n  }\n  return target;\n}\n\nfunction isObject(obj: any): obj is Record<string | number, any> {\n  return obj !== null && typeof obj === 'object';\n}\n\nfunction mergeHelper(\n  target: any,\n  source: any,\n  pastCopies: any[],\n) {\n  if (isObject(source) && isObject(target)) {\n    // In case the target has been frozen, make an extensible copy so that\n    // we can merge properties into the copy.\n    if (Object.isExtensible && !Object.isExtensible(target)) {\n      target = shallowCopyForMerge(target, pastCopies);\n    }\n\n    Object.keys(source).forEach(sourceKey => {\n      const sourceValue = source[sourceKey];\n      if (hasOwnProperty.call(target, sourceKey)) {\n        const targetValue = target[sourceKey];\n        if (sourceValue !== targetValue) {\n          // When there is a key collision, we need to make a shallow copy of\n          // target[sourceKey] so the merge does not modify any source objects.\n          // To avoid making unnecessary copies, we use a simple array to track\n          // past copies, since it's safe to modify copies created earlier in\n          // the merge. We use an array for pastCopies instead of a Map or Set,\n          // since the number of copies should be relatively small, and some\n          // Map/Set polyfills modify their keys.\n          target[sourceKey] = mergeHelper(\n            shallowCopyForMerge(targetValue, pastCopies),\n            sourceValue,\n            pastCopies,\n          );\n        }\n      } else {\n        // If there is no collision, the target can safely share memory with\n        // the source, and the recursion can terminate here.\n        target[sourceKey] = sourceValue;\n      }\n    });\n\n    return target;\n  }\n\n  // If source (or target) is not an object, let source replace target.\n  return source;\n}\n\nfunction shallowCopyForMerge<T>(value: T, pastCopies: any[]): T {\n  if (\n    value !== null &&\n    typeof value === 'object' &&\n    pastCopies.indexOf(value) < 0\n  ) {\n    if (Array.isArray(value)) {\n      value = (value as any).slice(0);\n    } else {\n      value = {\n        __proto__: Object.getPrototypeOf(value),\n        ...value,\n      };\n    }\n    pastCopies.push(value);\n  }\n  return value;\n}\n","import { isProduction, isTest } from './environment';\n\nconst haveWarned = Object.create({});\n\n/**\n * Print a warning only once in development.\n * In production no warnings are printed.\n * In test all warnings are printed.\n *\n * @param msg The warning message\n * @param type warn or error (will call console.warn or console.error)\n */\nexport function warnOnceInDevelopment(msg: string, type = 'warn') {\n  if (!isProduction() && !haveWarned[msg]) {\n    if (!isTest()) {\n      haveWarned[msg] = true;\n    }\n    if (type === 'error') {\n      console.error(msg);\n    } else {\n      console.warn(msg);\n    }\n  }\n}\n","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _graphql = require('./graphql');\n\nObject.defineProperty(exports, 'graphql', {\n  enumerable: true,\n  get: function get() {\n    return _graphql.graphql;\n  }\n});\n\nvar _type = require('./type');\n\nObject.defineProperty(exports, 'GraphQLSchema', {\n  enumerable: true,\n  get: function get() {\n    return _type.GraphQLSchema;\n  }\n});\nObject.defineProperty(exports, 'GraphQLScalarType', {\n  enumerable: true,\n  get: function get() {\n    return _type.GraphQLScalarType;\n  }\n});\nObject.defineProperty(exports, 'GraphQLObjectType', {\n  enumerable: true,\n  get: function get() {\n    return _type.GraphQLObjectType;\n  }\n});\nObject.defineProperty(exports, 'GraphQLInterfaceType', {\n  enumerable: true,\n  get: function get() {\n    return _type.GraphQLInterfaceType;\n  }\n});\nObject.defineProperty(exports, 'GraphQLUnionType', {\n  enumerable: true,\n  get: function get() {\n    return _type.GraphQLUnionType;\n  }\n});\nObject.defineProperty(exports, 'GraphQLEnumType', {\n  enumerable: true,\n  get: function get() {\n    return _type.GraphQLEnumType;\n  }\n});\nObject.defineProperty(exports, 'GraphQLInputObjectType', {\n  enumerable: true,\n  get: function get() {\n    return _type.GraphQLInputObjectType;\n  }\n});\nObject.defineProperty(exports, 'GraphQLList', {\n  enumerable: true,\n  get: function get() {\n    return _type.GraphQLList;\n  }\n});\nObject.defineProperty(exports, 'GraphQLNonNull', {\n  enumerable: true,\n  get: function get() {\n    return _type.GraphQLNonNull;\n  }\n});\nObject.defineProperty(exports, 'GraphQLDirective', {\n  enumerable: true,\n  get: function get() {\n    return _type.GraphQLDirective;\n  }\n});\nObject.defineProperty(exports, 'TypeKind', {\n  enumerable: true,\n  get: function get() {\n    return _type.TypeKind;\n  }\n});\nObject.defineProperty(exports, 'DirectiveLocation', {\n  enumerable: true,\n  get: function get() {\n    return _type.DirectiveLocation;\n  }\n});\nObject.defineProperty(exports, 'GraphQLInt', {\n  enumerable: true,\n  get: function get() {\n    return _type.GraphQLInt;\n  }\n});\nObject.defineProperty(exports, 'GraphQLFloat', {\n  enumerable: true,\n  get: function get() {\n    return _type.GraphQLFloat;\n  }\n});\nObject.defineProperty(exports, 'GraphQLString', {\n  enumerable: true,\n  get: function get() {\n    return _type.GraphQLString;\n  }\n});\nObject.defineProperty(exports, 'GraphQLBoolean', {\n  enumerable: true,\n  get: function get() {\n    return _type.GraphQLBoolean;\n  }\n});\nObject.defineProperty(exports, 'GraphQLID', {\n  enumerable: true,\n  get: function get() {\n    return _type.GraphQLID;\n  }\n});\nObject.defineProperty(exports, 'specifiedDirectives', {\n  enumerable: true,\n  get: function get() {\n    return _type.specifiedDirectives;\n  }\n});\nObject.defineProperty(exports, 'GraphQLIncludeDirective', {\n  enumerable: true,\n  get: function get() {\n    return _type.GraphQLIncludeDirective;\n  }\n});\nObject.defineProperty(exports, 'GraphQLSkipDirective', {\n  enumerable: true,\n  get: function get() {\n    return _type.GraphQLSkipDirective;\n  }\n});\nObject.defineProperty(exports, 'GraphQLDeprecatedDirective', {\n  enumerable: true,\n  get: function get() {\n    return _type.GraphQLDeprecatedDirective;\n  }\n});\nObject.defineProperty(exports, 'DEFAULT_DEPRECATION_REASON', {\n  enumerable: true,\n  get: function get() {\n    return _type.DEFAULT_DEPRECATION_REASON;\n  }\n});\nObject.defineProperty(exports, 'SchemaMetaFieldDef', {\n  enumerable: true,\n  get: function get() {\n    return _type.SchemaMetaFieldDef;\n  }\n});\nObject.defineProperty(exports, 'TypeMetaFieldDef', {\n  enumerable: true,\n  get: function get() {\n    return _type.TypeMetaFieldDef;\n  }\n});\nObject.defineProperty(exports, 'TypeNameMetaFieldDef', {\n  enumerable: true,\n  get: function get() {\n    return _type.TypeNameMetaFieldDef;\n  }\n});\nObject.defineProperty(exports, '__Schema', {\n  enumerable: true,\n  get: function get() {\n    return _type.__Schema;\n  }\n});\nObject.defineProperty(exports, '__Directive', {\n  enumerable: true,\n  get: function get() {\n    return _type.__Directive;\n  }\n});\nObject.defineProperty(exports, '__DirectiveLocation', {\n  enumerable: true,\n  get: function get() {\n    return _type.__DirectiveLocation;\n  }\n});\nObject.defineProperty(exports, '__Type', {\n  enumerable: true,\n  get: function get() {\n    return _type.__Type;\n  }\n});\nObject.defineProperty(exports, '__Field', {\n  enumerable: true,\n  get: function get() {\n    return _type.__Field;\n  }\n});\nObject.defineProperty(exports, '__InputValue', {\n  enumerable: true,\n  get: function get() {\n    return _type.__InputValue;\n  }\n});\nObject.defineProperty(exports, '__EnumValue', {\n  enumerable: true,\n  get: function get() {\n    return _type.__EnumValue;\n  }\n});\nObject.defineProperty(exports, '__TypeKind', {\n  enumerable: true,\n  get: function get() {\n    return _type.__TypeKind;\n  }\n});\nObject.defineProperty(exports, 'isType', {\n  enumerable: true,\n  get: function get() {\n    return _type.isType;\n  }\n});\nObject.defineProperty(exports, 'isInputType', {\n  enumerable: true,\n  get: function get() {\n    return _type.isInputType;\n  }\n});\nObject.defineProperty(exports, 'isOutputType', {\n  enumerable: true,\n  get: function get() {\n    return _type.isOutputType;\n  }\n});\nObject.defineProperty(exports, 'isLeafType', {\n  enumerable: true,\n  get: function get() {\n    return _type.isLeafType;\n  }\n});\nObject.defineProperty(exports, 'isCompositeType', {\n  enumerable: true,\n  get: function get() {\n    return _type.isCompositeType;\n  }\n});\nObject.defineProperty(exports, 'isAbstractType', {\n  enumerable: true,\n  get: function get() {\n    return _type.isAbstractType;\n  }\n});\nObject.defineProperty(exports, 'isNamedType', {\n  enumerable: true,\n  get: function get() {\n    return _type.isNamedType;\n  }\n});\nObject.defineProperty(exports, 'assertType', {\n  enumerable: true,\n  get: function get() {\n    return _type.assertType;\n  }\n});\nObject.defineProperty(exports, 'assertInputType', {\n  enumerable: true,\n  get: function get() {\n    return _type.assertInputType;\n  }\n});\nObject.defineProperty(exports, 'assertOutputType', {\n  enumerable: true,\n  get: function get() {\n    return _type.assertOutputType;\n  }\n});\nObject.defineProperty(exports, 'assertLeafType', {\n  enumerable: true,\n  get: function get() {\n    return _type.assertLeafType;\n  }\n});\nObject.defineProperty(exports, 'assertCompositeType', {\n  enumerable: true,\n  get: function get() {\n    return _type.assertCompositeType;\n  }\n});\nObject.defineProperty(exports, 'assertAbstractType', {\n  enumerable: true,\n  get: function get() {\n    return _type.assertAbstractType;\n  }\n});\nObject.defineProperty(exports, 'assertNamedType', {\n  enumerable: true,\n  get: function get() {\n    return _type.assertNamedType;\n  }\n});\nObject.defineProperty(exports, 'getNullableType', {\n  enumerable: true,\n  get: function get() {\n    return _type.getNullableType;\n  }\n});\nObject.defineProperty(exports, 'getNamedType', {\n  enumerable: true,\n  get: function get() {\n    return _type.getNamedType;\n  }\n});\n\nvar _language = require('./language');\n\nObject.defineProperty(exports, 'Source', {\n  enumerable: true,\n  get: function get() {\n    return _language.Source;\n  }\n});\nObject.defineProperty(exports, 'getLocation', {\n  enumerable: true,\n  get: function get() {\n    return _language.getLocation;\n  }\n});\nObject.defineProperty(exports, 'parse', {\n  enumerable: true,\n  get: function get() {\n    return _language.parse;\n  }\n});\nObject.defineProperty(exports, 'parseValue', {\n  enumerable: true,\n  get: function get() {\n    return _language.parseValue;\n  }\n});\nObject.defineProperty(exports, 'parseType', {\n  enumerable: true,\n  get: function get() {\n    return _language.parseType;\n  }\n});\nObject.defineProperty(exports, 'print', {\n  enumerable: true,\n  get: function get() {\n    return _language.print;\n  }\n});\nObject.defineProperty(exports, 'visit', {\n  enumerable: true,\n  get: function get() {\n    return _language.visit;\n  }\n});\nObject.defineProperty(exports, 'visitInParallel', {\n  enumerable: true,\n  get: function get() {\n    return _language.visitInParallel;\n  }\n});\nObject.defineProperty(exports, 'visitWithTypeInfo', {\n  enumerable: true,\n  get: function get() {\n    return _language.visitWithTypeInfo;\n  }\n});\nObject.defineProperty(exports, 'getVisitFn', {\n  enumerable: true,\n  get: function get() {\n    return _language.getVisitFn;\n  }\n});\nObject.defineProperty(exports, 'Kind', {\n  enumerable: true,\n  get: function get() {\n    return _language.Kind;\n  }\n});\nObject.defineProperty(exports, 'TokenKind', {\n  enumerable: true,\n  get: function get() {\n    return _language.TokenKind;\n  }\n});\nObject.defineProperty(exports, 'BREAK', {\n  enumerable: true,\n  get: function get() {\n    return _language.BREAK;\n  }\n});\n\nvar _execution = require('./execution');\n\nObject.defineProperty(exports, 'execute', {\n  enumerable: true,\n  get: function get() {\n    return _execution.execute;\n  }\n});\nObject.defineProperty(exports, 'defaultFieldResolver', {\n  enumerable: true,\n  get: function get() {\n    return _execution.defaultFieldResolver;\n  }\n});\nObject.defineProperty(exports, 'responsePathAsArray', {\n  enumerable: true,\n  get: function get() {\n    return _execution.responsePathAsArray;\n  }\n});\nObject.defineProperty(exports, 'getDirectiveValues', {\n  enumerable: true,\n  get: function get() {\n    return _execution.getDirectiveValues;\n  }\n});\n\nvar _subscription = require('./subscription');\n\nObject.defineProperty(exports, 'subscribe', {\n  enumerable: true,\n  get: function get() {\n    return _subscription.subscribe;\n  }\n});\nObject.defineProperty(exports, 'createSourceEventStream', {\n  enumerable: true,\n  get: function get() {\n    return _subscription.createSourceEventStream;\n  }\n});\n\nvar _validation = require('./validation');\n\nObject.defineProperty(exports, 'validate', {\n  enumerable: true,\n  get: function get() {\n    return _validation.validate;\n  }\n});\nObject.defineProperty(exports, 'ValidationContext', {\n  enumerable: true,\n  get: function get() {\n    return _validation.ValidationContext;\n  }\n});\nObject.defineProperty(exports, 'specifiedRules', {\n  enumerable: true,\n  get: function get() {\n    return _validation.specifiedRules;\n  }\n});\nObject.defineProperty(exports, 'ArgumentsOfCorrectTypeRule', {\n  enumerable: true,\n  get: function get() {\n    return _validation.ArgumentsOfCorrectTypeRule;\n  }\n});\nObject.defineProperty(exports, 'DefaultValuesOfCorrectTypeRule', {\n  enumerable: true,\n  get: function get() {\n    return _validation.DefaultValuesOfCorrectTypeRule;\n  }\n});\nObject.defineProperty(exports, 'FieldsOnCorrectTypeRule', {\n  enumerable: true,\n  get: function get() {\n    return _validation.FieldsOnCorrectTypeRule;\n  }\n});\nObject.defineProperty(exports, 'FragmentsOnCompositeTypesRule', {\n  enumerable: true,\n  get: function get() {\n    return _validation.FragmentsOnCompositeTypesRule;\n  }\n});\nObject.defineProperty(exports, 'KnownArgumentNamesRule', {\n  enumerable: true,\n  get: function get() {\n    return _validation.KnownArgumentNamesRule;\n  }\n});\nObject.defineProperty(exports, 'KnownDirectivesRule', {\n  enumerable: true,\n  get: function get() {\n    return _validation.KnownDirectivesRule;\n  }\n});\nObject.defineProperty(exports, 'KnownFragmentNamesRule', {\n  enumerable: true,\n  get: function get() {\n    return _validation.KnownFragmentNamesRule;\n  }\n});\nObject.defineProperty(exports, 'KnownTypeNamesRule', {\n  enumerable: true,\n  get: function get() {\n    return _validation.KnownTypeNamesRule;\n  }\n});\nObject.defineProperty(exports, 'LoneAnonymousOperationRule', {\n  enumerable: true,\n  get: function get() {\n    return _validation.LoneAnonymousOperationRule;\n  }\n});\nObject.defineProperty(exports, 'NoFragmentCyclesRule', {\n  enumerable: true,\n  get: function get() {\n    return _validation.NoFragmentCyclesRule;\n  }\n});\nObject.defineProperty(exports, 'NoUndefinedVariablesRule', {\n  enumerable: true,\n  get: function get() {\n    return _validation.NoUndefinedVariablesRule;\n  }\n});\nObject.defineProperty(exports, 'NoUnusedFragmentsRule', {\n  enumerable: true,\n  get: function get() {\n    return _validation.NoUnusedFragmentsRule;\n  }\n});\nObject.defineProperty(exports, 'NoUnusedVariablesRule', {\n  enumerable: true,\n  get: function get() {\n    return _validation.NoUnusedVariablesRule;\n  }\n});\nObject.defineProperty(exports, 'OverlappingFieldsCanBeMergedRule', {\n  enumerable: true,\n  get: function get() {\n    return _validation.OverlappingFieldsCanBeMergedRule;\n  }\n});\nObject.defineProperty(exports, 'PossibleFragmentSpreadsRule', {\n  enumerable: true,\n  get: function get() {\n    return _validation.PossibleFragmentSpreadsRule;\n  }\n});\nObject.defineProperty(exports, 'ProvidedNonNullArgumentsRule', {\n  enumerable: true,\n  get: function get() {\n    return _validation.ProvidedNonNullArgumentsRule;\n  }\n});\nObject.defineProperty(exports, 'ScalarLeafsRule', {\n  enumerable: true,\n  get: function get() {\n    return _validation.ScalarLeafsRule;\n  }\n});\nObject.defineProperty(exports, 'SingleFieldSubscriptionsRule', {\n  enumerable: true,\n  get: function get() {\n    return _validation.SingleFieldSubscriptionsRule;\n  }\n});\nObject.defineProperty(exports, 'UniqueArgumentNamesRule', {\n  enumerable: true,\n  get: function get() {\n    return _validation.UniqueArgumentNamesRule;\n  }\n});\nObject.defineProperty(exports, 'UniqueDirectivesPerLocationRule', {\n  enumerable: true,\n  get: function get() {\n    return _validation.UniqueDirectivesPerLocationRule;\n  }\n});\nObject.defineProperty(exports, 'UniqueFragmentNamesRule', {\n  enumerable: true,\n  get: function get() {\n    return _validation.UniqueFragmentNamesRule;\n  }\n});\nObject.defineProperty(exports, 'UniqueInputFieldNamesRule', {\n  enumerable: true,\n  get: function get() {\n    return _validation.UniqueInputFieldNamesRule;\n  }\n});\nObject.defineProperty(exports, 'UniqueOperationNamesRule', {\n  enumerable: true,\n  get: function get() {\n    return _validation.UniqueOperationNamesRule;\n  }\n});\nObject.defineProperty(exports, 'UniqueVariableNamesRule', {\n  enumerable: true,\n  get: function get() {\n    return _validation.UniqueVariableNamesRule;\n  }\n});\nObject.defineProperty(exports, 'VariablesAreInputTypesRule', {\n  enumerable: true,\n  get: function get() {\n    return _validation.VariablesAreInputTypesRule;\n  }\n});\nObject.defineProperty(exports, 'VariablesInAllowedPositionRule', {\n  enumerable: true,\n  get: function get() {\n    return _validation.VariablesInAllowedPositionRule;\n  }\n});\n\nvar _error = require('./error');\n\nObject.defineProperty(exports, 'GraphQLError', {\n  enumerable: true,\n  get: function get() {\n    return _error.GraphQLError;\n  }\n});\nObject.defineProperty(exports, 'formatError', {\n  enumerable: true,\n  get: function get() {\n    return _error.formatError;\n  }\n});\n\nvar _utilities = require('./utilities');\n\nObject.defineProperty(exports, 'introspectionQuery', {\n  enumerable: true,\n  get: function get() {\n    return _utilities.introspectionQuery;\n  }\n});\nObject.defineProperty(exports, 'getOperationAST', {\n  enumerable: true,\n  get: function get() {\n    return _utilities.getOperationAST;\n  }\n});\nObject.defineProperty(exports, 'buildClientSchema', {\n  enumerable: true,\n  get: function get() {\n    return _utilities.buildClientSchema;\n  }\n});\nObject.defineProperty(exports, 'buildASTSchema', {\n  enumerable: true,\n  get: function get() {\n    return _utilities.buildASTSchema;\n  }\n});\nObject.defineProperty(exports, 'buildSchema', {\n  enumerable: true,\n  get: function get() {\n    return _utilities.buildSchema;\n  }\n});\nObject.defineProperty(exports, 'extendSchema', {\n  enumerable: true,\n  get: function get() {\n    return _utilities.extendSchema;\n  }\n});\nObject.defineProperty(exports, 'printSchema', {\n  enumerable: true,\n  get: function get() {\n    return _utilities.printSchema;\n  }\n});\nObject.defineProperty(exports, 'printIntrospectionSchema', {\n  enumerable: true,\n  get: function get() {\n    return _utilities.printIntrospectionSchema;\n  }\n});\nObject.defineProperty(exports, 'printType', {\n  enumerable: true,\n  get: function get() {\n    return _utilities.printType;\n  }\n});\nObject.defineProperty(exports, 'typeFromAST', {\n  enumerable: true,\n  get: function get() {\n    return _utilities.typeFromAST;\n  }\n});\nObject.defineProperty(exports, 'valueFromAST', {\n  enumerable: true,\n  get: function get() {\n    return _utilities.valueFromAST;\n  }\n});\nObject.defineProperty(exports, 'astFromValue', {\n  enumerable: true,\n  get: function get() {\n    return _utilities.astFromValue;\n  }\n});\nObject.defineProperty(exports, 'TypeInfo', {\n  enumerable: true,\n  get: function get() {\n    return _utilities.TypeInfo;\n  }\n});\nObject.defineProperty(exports, 'isValidJSValue', {\n  enumerable: true,\n  get: function get() {\n    return _utilities.isValidJSValue;\n  }\n});\nObject.defineProperty(exports, 'isValidLiteralValue', {\n  enumerable: true,\n  get: function get() {\n    return _utilities.isValidLiteralValue;\n  }\n});\nObject.defineProperty(exports, 'concatAST', {\n  enumerable: true,\n  get: function get() {\n    return _utilities.concatAST;\n  }\n});\nObject.defineProperty(exports, 'separateOperations', {\n  enumerable: true,\n  get: function get() {\n    return _utilities.separateOperations;\n  }\n});\nObject.defineProperty(exports, 'isEqualType', {\n  enumerable: true,\n  get: function get() {\n    return _utilities.isEqualType;\n  }\n});\nObject.defineProperty(exports, 'isTypeSubTypeOf', {\n  enumerable: true,\n  get: function get() {\n    return _utilities.isTypeSubTypeOf;\n  }\n});\nObject.defineProperty(exports, 'doTypesOverlap', {\n  enumerable: true,\n  get: function get() {\n    return _utilities.doTypesOverlap;\n  }\n});\nObject.defineProperty(exports, 'assertValidName', {\n  enumerable: true,\n  get: function get() {\n    return _utilities.assertValidName;\n  }\n});\nObject.defineProperty(exports, 'findBreakingChanges', {\n  enumerable: true,\n  get: function get() {\n    return _utilities.findBreakingChanges;\n  }\n});\nObject.defineProperty(exports, 'BreakingChangeType', {\n  enumerable: true,\n  get: function get() {\n    return _utilities.BreakingChangeType;\n  }\n});\nObject.defineProperty(exports, 'DangerousChangeType', {\n  enumerable: true,\n  get: function get() {\n    return _utilities.DangerousChangeType;\n  }\n});\nObject.defineProperty(exports, 'findDeprecatedUsages', {\n  enumerable: true,\n  get: function get() {\n    return _utilities.findDeprecatedUsages;\n  }\n});","/**\n * Copyright (c) 2016, Lee Byron\n * All rights reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n * @ignore\n */\n\n/**\n * [Iterator](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols#iterator)\n * is a *protocol* which describes a standard way to produce a sequence of\n * values, typically the values of the Iterable represented by this Iterator.\n *\n * While described by the [ES2015 version of JavaScript](http://www.ecma-international.org/ecma-262/6.0/#sec-iterator-interface)\n * it can be utilized by any version of JavaScript.\n *\n * @external Iterator\n * @see {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols#iterator|MDN Iteration protocols}\n */\n\n/**\n * [Iterable](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols#iterable)\n * is a *protocol* which when implemented allows a JavaScript object to define\n * their iteration behavior, such as what values are looped over in a\n * [`for...of`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/for...of)\n * loop or `iterall`'s `forEach` function. Many [built-in types](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols#Builtin_iterables)\n * implement the Iterable protocol, including `Array` and `Map`.\n *\n * While described by the [ES2015 version of JavaScript](http://www.ecma-international.org/ecma-262/6.0/#sec-iterable-interface)\n * it can be utilized by any version of JavaScript.\n *\n * @external Iterable\n * @see {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols#iterable|MDN Iteration protocols}\n */\n\n// In ES2015 environments, Symbol exists\nvar SYMBOL /*: any */ = typeof Symbol === 'function' ? Symbol : void 0\n\n// In ES2015 (or a polyfilled) environment, this will be Symbol.iterator\nvar SYMBOL_ITERATOR = SYMBOL && SYMBOL.iterator\n\n/**\n * A property name to be used as the name of an Iterable's method responsible\n * for producing an Iterator, referred to as `@@iterator`. Typically represents\n * the value `Symbol.iterator` but falls back to the string `\"@@iterator\"` when\n * `Symbol.iterator` is not defined.\n *\n * Use `$$iterator` for defining new Iterables instead of `Symbol.iterator`,\n * but do not use it for accessing existing Iterables, instead use\n * {@link getIterator} or {@link isIterable}.\n *\n * @example\n *\n * var $$iterator = require('iterall').$$iterator\n *\n * function Counter (to) {\n *   this.to = to\n * }\n *\n * Counter.prototype[$$iterator] = function () {\n *   return {\n *     to: this.to,\n *     num: 0,\n *     next () {\n *       if (this.num >= this.to) {\n *         return { value: undefined, done: true }\n *       }\n *       return { value: this.num++, done: false }\n *     }\n *   }\n * }\n *\n * var counter = new Counter(3)\n * for (var number of counter) {\n *   console.log(number) // 0 ... 1 ... 2\n * }\n *\n * @type {Symbol|string}\n */\n/*:: declare export var $$iterator: '@@iterator'; */\nexport var $$iterator = SYMBOL_ITERATOR || '@@iterator'\n\n/**\n * Returns true if the provided object implements the Iterator protocol via\n * either implementing a `Symbol.iterator` or `\"@@iterator\"` method.\n *\n * @example\n *\n * var isIterable = require('iterall').isIterable\n * isIterable([ 1, 2, 3 ]) // true\n * isIterable('ABC') // true\n * isIterable({ length: 1, 0: 'Alpha' }) // false\n * isIterable({ key: 'value' }) // false\n * isIterable(new Map()) // true\n *\n * @param obj\n *   A value which might implement the Iterable protocol.\n * @return {boolean} true if Iterable.\n */\n/*:: declare export function isIterable(obj: any): boolean; */\nexport function isIterable(obj) {\n  return !!getIteratorMethod(obj)\n}\n\n/**\n * Returns true if the provided object implements the Array-like protocol via\n * defining a positive-integer `length` property.\n *\n * @example\n *\n * var isArrayLike = require('iterall').isArrayLike\n * isArrayLike([ 1, 2, 3 ]) // true\n * isArrayLike('ABC') // true\n * isArrayLike({ length: 1, 0: 'Alpha' }) // true\n * isArrayLike({ key: 'value' }) // false\n * isArrayLike(new Map()) // false\n *\n * @param obj\n *   A value which might implement the Array-like protocol.\n * @return {boolean} true if Array-like.\n */\n/*:: declare export function isArrayLike(obj: any): boolean; */\nexport function isArrayLike(obj) {\n  var length = obj != null && obj.length\n  return typeof length === 'number' && length >= 0 && length % 1 === 0\n}\n\n/**\n * Returns true if the provided object is an Object (i.e. not a string literal)\n * and is either Iterable or Array-like.\n *\n * This may be used in place of [Array.isArray()][isArray] to determine if an\n * object should be iterated-over. It always excludes string literals and\n * includes Arrays (regardless of if it is Iterable). It also includes other\n * Array-like objects such as NodeList, TypedArray, and Buffer.\n *\n * @example\n *\n * var isCollection = require('iterall').isCollection\n * isCollection([ 1, 2, 3 ]) // true\n * isCollection('ABC') // false\n * isCollection({ length: 1, 0: 'Alpha' }) // true\n * isCollection({ key: 'value' }) // false\n * isCollection(new Map()) // true\n *\n * @example\n *\n * var forEach = require('iterall').forEach\n * if (isCollection(obj)) {\n *   forEach(obj, function (value) {\n *     console.log(value)\n *   })\n * }\n *\n * @param obj\n *   An Object value which might implement the Iterable or Array-like protocols.\n * @return {boolean} true if Iterable or Array-like Object.\n */\n/*:: declare export function isCollection(obj: any): boolean; */\nexport function isCollection(obj) {\n  return Object(obj) === obj && (isArrayLike(obj) || isIterable(obj))\n}\n\n/**\n * If the provided object implements the Iterator protocol, its Iterator object\n * is returned. Otherwise returns undefined.\n *\n * @example\n *\n * var getIterator = require('iterall').getIterator\n * var iterator = getIterator([ 1, 2, 3 ])\n * iterator.next() // { value: 1, done: false }\n * iterator.next() // { value: 2, done: false }\n * iterator.next() // { value: 3, done: false }\n * iterator.next() // { value: undefined, done: true }\n *\n * @template T the type of each iterated value\n * @param {Iterable<T>} iterable\n *   An Iterable object which is the source of an Iterator.\n * @return {Iterator<T>} new Iterator instance.\n */\n/*:: declare export var getIterator:\n  & (<+TValue>(iterable: Iterable<TValue>) => Iterator<TValue>)\n  & ((iterable: mixed) => void | Iterator<mixed>); */\nexport function getIterator(iterable) {\n  var method = getIteratorMethod(iterable)\n  if (method) {\n    return method.call(iterable)\n  }\n}\n\n/**\n * If the provided object implements the Iterator protocol, the method\n * responsible for producing its Iterator object is returned.\n *\n * This is used in rare cases for performance tuning. This method must be called\n * with obj as the contextual this-argument.\n *\n * @example\n *\n * var getIteratorMethod = require('iterall').getIteratorMethod\n * var myArray = [ 1, 2, 3 ]\n * var method = getIteratorMethod(myArray)\n * if (method) {\n *   var iterator = method.call(myArray)\n * }\n *\n * @template T the type of each iterated value\n * @param {Iterable<T>} iterable\n *   An Iterable object which defines an `@@iterator` method.\n * @return {function(): Iterator<T>} `@@iterator` method.\n */\n/*:: declare export var getIteratorMethod:\n  & (<+TValue>(iterable: Iterable<TValue>) => (() => Iterator<TValue>))\n  & ((iterable: mixed) => (void | (() => Iterator<mixed>))); */\nexport function getIteratorMethod(iterable) {\n  if (iterable != null) {\n    var method =\n      (SYMBOL_ITERATOR && iterable[SYMBOL_ITERATOR]) || iterable['@@iterator']\n    if (typeof method === 'function') {\n      return method\n    }\n  }\n}\n\n/**\n * Similar to {@link getIterator}, this method returns a new Iterator given an\n * Iterable. However it will also create an Iterator for a non-Iterable\n * Array-like collection, such as Array in a non-ES2015 environment.\n *\n * `createIterator` is complimentary to `forEach`, but allows a \"pull\"-based\n * iteration as opposed to `forEach`'s \"push\"-based iteration.\n *\n * `createIterator` produces an Iterator for Array-likes with the same behavior\n * as ArrayIteratorPrototype described in the ECMAScript specification, and\n * does *not* skip over \"holes\".\n *\n * @example\n *\n * var createIterator = require('iterall').createIterator\n *\n * var myArraylike = { length: 3, 0: 'Alpha', 1: 'Bravo', 2: 'Charlie' }\n * var iterator = createIterator(myArraylike)\n * iterator.next() // { value: 'Alpha', done: false }\n * iterator.next() // { value: 'Bravo', done: false }\n * iterator.next() // { value: 'Charlie', done: false }\n * iterator.next() // { value: undefined, done: true }\n *\n * @template T the type of each iterated value\n * @param {Iterable<T>|{ length: number }} collection\n *   An Iterable or Array-like object to produce an Iterator.\n * @return {Iterator<T>} new Iterator instance.\n */\n/*:: declare export var createIterator:\n  & (<+TValue>(collection: Iterable<TValue>) => Iterator<TValue>)\n  & ((collection: {length: number}) => Iterator<mixed>)\n  & ((collection: mixed) => (void | Iterator<mixed>)); */\nexport function createIterator(collection) {\n  if (collection != null) {\n    var iterator = getIterator(collection)\n    if (iterator) {\n      return iterator\n    }\n    if (isArrayLike(collection)) {\n      return new ArrayLikeIterator(collection)\n    }\n  }\n}\n\n// When the object provided to `createIterator` is not Iterable but is\n// Array-like, this simple Iterator is created.\nfunction ArrayLikeIterator(obj) {\n  this._o = obj\n  this._i = 0\n}\n\n// Note: all Iterators are themselves Iterable.\nArrayLikeIterator.prototype[$$iterator] = function() {\n  return this\n}\n\n// A simple state-machine determines the IteratorResult returned, yielding\n// each value in the Array-like object in order of their indicies.\nArrayLikeIterator.prototype.next = function() {\n  if (this._o === void 0 || this._i >= this._o.length) {\n    this._o = void 0\n    return { value: void 0, done: true }\n  }\n  return { value: this._o[this._i++], done: false }\n}\n\n/**\n * Given an object which either implements the Iterable protocol or is\n * Array-like, iterate over it, calling the `callback` at each iteration.\n *\n * Use `forEach` where you would expect to use a `for ... of` loop in ES6.\n * However `forEach` adheres to the behavior of [Array#forEach][] described in\n * the ECMAScript specification, skipping over \"holes\" in Array-likes. It will\n * also delegate to a `forEach` method on `collection` if one is defined,\n * ensuring native performance for `Arrays`.\n *\n * Similar to [Array#forEach][], the `callback` function accepts three\n * arguments, and is provided with `thisArg` as the calling context.\n *\n * Note: providing an infinite Iterator to forEach will produce an error.\n *\n * [Array#forEach]: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach\n *\n * @example\n *\n * var forEach = require('iterall').forEach\n *\n * forEach(myIterable, function (value, index, iterable) {\n *   console.log(value, index, iterable === myIterable)\n * })\n *\n * @example\n *\n * // ES6:\n * for (let value of myIterable) {\n *   console.log(value)\n * }\n *\n * // Any JavaScript environment:\n * forEach(myIterable, function (value) {\n *   console.log(value)\n * })\n *\n * @template T the type of each iterated value\n * @param {Iterable<T>|{ length: number }} collection\n *   The Iterable or array to iterate over.\n * @param {function(T, number, object)} callback\n *   Function to execute for each iteration, taking up to three arguments\n * @param [thisArg]\n *   Optional. Value to use as `this` when executing `callback`.\n */\n/*:: declare export var forEach:\n  & (<+TValue, TCollection: Iterable<TValue>>(\n      collection: TCollection,\n      callbackFn: (value: TValue, index: number, collection: TCollection) => any,\n      thisArg?: any\n    ) => void)\n  & (<TCollection: {length: number}>(\n      collection: TCollection,\n      callbackFn: (value: mixed, index: number, collection: TCollection) => any,\n      thisArg?: any\n    ) => void); */\nexport function forEach(collection, callback, thisArg) {\n  if (collection != null) {\n    if (typeof collection.forEach === 'function') {\n      return collection.forEach(callback, thisArg)\n    }\n    var i = 0\n    var iterator = getIterator(collection)\n    if (iterator) {\n      var step\n      while (!(step = iterator.next()).done) {\n        callback.call(thisArg, step.value, i++, collection)\n        // Infinite Iterators could cause forEach to run forever.\n        // After a very large number of iterations, produce an error.\n        /* istanbul ignore if */\n        if (i > 9999999) {\n          throw new TypeError('Near-infinite iteration.')\n        }\n      }\n    } else if (isArrayLike(collection)) {\n      for (; i < collection.length; i++) {\n        if (collection.hasOwnProperty(i)) {\n          callback.call(thisArg, collection[i], i, collection)\n        }\n      }\n    }\n  }\n}\n\n/////////////////////////////////////////////////////\n//                                                 //\n//                 ASYNC ITERATORS                 //\n//                                                 //\n/////////////////////////////////////////////////////\n\n/**\n * [AsyncIterable](https://tc39.github.io/proposal-async-iteration/#sec-asynciterable-interface)\n * is a *protocol* which when implemented allows a JavaScript object to define\n * an asynchronous iteration behavior, such as what values are looped over in\n * a [`for-await-of`](https://tc39.github.io/proposal-async-iteration/#sec-for-in-and-for-of-statements)\n * loop or `iterall`'s {@link forAwaitEach} function.\n *\n * While described as a proposed addition to the [ES2017 version of JavaScript](https://tc39.github.io/proposal-async-iteration/)\n * it can be utilized by any version of JavaScript.\n *\n * @external AsyncIterable\n * @see {@link https://tc39.github.io/proposal-async-iteration/#sec-asynciterable-interface|Async Iteration Proposal}\n * @template T The type of each iterated value\n * @property {function (): AsyncIterator<T>} Symbol.asyncIterator\n *   A method which produces an AsyncIterator for this AsyncIterable.\n */\n\n/**\n * [AsyncIterator](https://tc39.github.io/proposal-async-iteration/#sec-asynciterator-interface)\n * is a *protocol* which describes a standard way to produce and consume an\n * asynchronous sequence of values, typically the values of the\n * {@link AsyncIterable} represented by this {@link AsyncIterator}.\n *\n * AsyncIterator is similar to Observable or Stream. Like an {@link Iterator} it\n * also as a `next()` method, however instead of an IteratorResult,\n * calling this method returns a {@link Promise} for a IteratorResult.\n *\n * While described as a proposed addition to the [ES2017 version of JavaScript](https://tc39.github.io/proposal-async-iteration/)\n * it can be utilized by any version of JavaScript.\n *\n * @external AsyncIterator\n * @see {@link https://tc39.github.io/proposal-async-iteration/#sec-asynciterator-interface|Async Iteration Proposal}\n */\n\n// In ES2017 (or a polyfilled) environment, this will be Symbol.asyncIterator\nvar SYMBOL_ASYNC_ITERATOR = SYMBOL && SYMBOL.asyncIterator\n\n/**\n * A property name to be used as the name of an AsyncIterable's method\n * responsible for producing an Iterator, referred to as `@@asyncIterator`.\n * Typically represents the value `Symbol.asyncIterator` but falls back to the\n * string `\"@@asyncIterator\"` when `Symbol.asyncIterator` is not defined.\n *\n * Use `$$asyncIterator` for defining new AsyncIterables instead of\n * `Symbol.asyncIterator`, but do not use it for accessing existing Iterables,\n * instead use {@link getAsyncIterator} or {@link isAsyncIterable}.\n *\n * @example\n *\n * var $$asyncIterator = require('iterall').$$asyncIterator\n *\n * function Chirper (to) {\n *   this.to = to\n * }\n *\n * Chirper.prototype[$$asyncIterator] = function () {\n *   return {\n *     to: this.to,\n *     num: 0,\n *     next () {\n *       return new Promise(resolve => {\n *         if (this.num >= this.to) {\n *           resolve({ value: undefined, done: true })\n *         } else {\n *           setTimeout(() => {\n *             resolve({ value: this.num++, done: false })\n *           }, 1000)\n *         }\n *       })\n *     }\n *   }\n * }\n *\n * var chirper = new Chirper(3)\n * for await (var number of chirper) {\n *   console.log(number) // 0 ...wait... 1 ...wait... 2\n * }\n *\n * @type {Symbol|string}\n */\n/*:: declare export var $$asyncIterator: '@@asyncIterator'; */\nexport var $$asyncIterator = SYMBOL_ASYNC_ITERATOR || '@@asyncIterator'\n\n/**\n * Returns true if the provided object implements the AsyncIterator protocol via\n * either implementing a `Symbol.asyncIterator` or `\"@@asyncIterator\"` method.\n *\n * @example\n *\n * var isAsyncIterable = require('iterall').isAsyncIterable\n * isAsyncIterable(myStream) // true\n * isAsyncIterable('ABC') // false\n *\n * @param obj\n *   A value which might implement the AsyncIterable protocol.\n * @return {boolean} true if AsyncIterable.\n */\n/*:: declare export function isAsyncIterable(obj: any): boolean; */\nexport function isAsyncIterable(obj) {\n  return !!getAsyncIteratorMethod(obj)\n}\n\n/**\n * If the provided object implements the AsyncIterator protocol, its\n * AsyncIterator object is returned. Otherwise returns undefined.\n *\n * @example\n *\n * var getAsyncIterator = require('iterall').getAsyncIterator\n * var asyncIterator = getAsyncIterator(myStream)\n * asyncIterator.next().then(console.log) // { value: 1, done: false }\n * asyncIterator.next().then(console.log) // { value: 2, done: false }\n * asyncIterator.next().then(console.log) // { value: 3, done: false }\n * asyncIterator.next().then(console.log) // { value: undefined, done: true }\n *\n * @template T the type of each iterated value\n * @param {AsyncIterable<T>} asyncIterable\n *   An AsyncIterable object which is the source of an AsyncIterator.\n * @return {AsyncIterator<T>} new AsyncIterator instance.\n */\n/*:: declare export var getAsyncIterator:\n  & (<+TValue>(asyncIterable: AsyncIterable<TValue>) => AsyncIterator<TValue>)\n  & ((asyncIterable: mixed) => (void | AsyncIterator<mixed>)); */\nexport function getAsyncIterator(asyncIterable) {\n  var method = getAsyncIteratorMethod(asyncIterable)\n  if (method) {\n    return method.call(asyncIterable)\n  }\n}\n\n/**\n * If the provided object implements the AsyncIterator protocol, the method\n * responsible for producing its AsyncIterator object is returned.\n *\n * This is used in rare cases for performance tuning. This method must be called\n * with obj as the contextual this-argument.\n *\n * @example\n *\n * var getAsyncIteratorMethod = require('iterall').getAsyncIteratorMethod\n * var method = getAsyncIteratorMethod(myStream)\n * if (method) {\n *   var asyncIterator = method.call(myStream)\n * }\n *\n * @template T the type of each iterated value\n * @param {AsyncIterable<T>} asyncIterable\n *   An AsyncIterable object which defines an `@@asyncIterator` method.\n * @return {function(): AsyncIterator<T>} `@@asyncIterator` method.\n */\n/*:: declare export var getAsyncIteratorMethod:\n  & (<+TValue>(asyncIterable: AsyncIterable<TValue>) => (() => AsyncIterator<TValue>))\n  & ((asyncIterable: mixed) => (void | (() => AsyncIterator<mixed>))); */\nexport function getAsyncIteratorMethod(asyncIterable) {\n  if (asyncIterable != null) {\n    var method =\n      (SYMBOL_ASYNC_ITERATOR && asyncIterable[SYMBOL_ASYNC_ITERATOR]) ||\n      asyncIterable['@@asyncIterator']\n    if (typeof method === 'function') {\n      return method\n    }\n  }\n}\n\n/**\n * Similar to {@link getAsyncIterator}, this method returns a new AsyncIterator\n * given an AsyncIterable. However it will also create an AsyncIterator for a\n * non-async Iterable as well as non-Iterable Array-like collection, such as\n * Array in a pre-ES2015 environment.\n *\n * `createAsyncIterator` is complimentary to `forAwaitEach`, but allows a\n * buffering \"pull\"-based iteration as opposed to `forAwaitEach`'s\n * \"push\"-based iteration.\n *\n * `createAsyncIterator` produces an AsyncIterator for non-async Iterables as\n * described in the ECMAScript proposal [Async-from-Sync Iterator Objects](https://tc39.github.io/proposal-async-iteration/#sec-async-from-sync-iterator-objects).\n *\n * > Note: Creating `AsyncIterator`s requires the existence of `Promise`.\n * > While `Promise` has been available in modern browsers for a number of\n * > years, legacy browsers (like IE 11) may require a polyfill.\n *\n * @example\n *\n * var createAsyncIterator = require('iterall').createAsyncIterator\n *\n * var myArraylike = { length: 3, 0: 'Alpha', 1: 'Bravo', 2: 'Charlie' }\n * var iterator = createAsyncIterator(myArraylike)\n * iterator.next().then(console.log) // { value: 'Alpha', done: false }\n * iterator.next().then(console.log) // { value: 'Bravo', done: false }\n * iterator.next().then(console.log) // { value: 'Charlie', done: false }\n * iterator.next().then(console.log) // { value: undefined, done: true }\n *\n * @template T the type of each iterated value\n * @param {AsyncIterable<T>|Iterable<T>|{ length: number }} source\n *   An AsyncIterable, Iterable, or Array-like object to produce an Iterator.\n * @return {AsyncIterator<T>} new AsyncIterator instance.\n */\n/*:: declare export var createAsyncIterator:\n  & (<+TValue>(\n      collection: Iterable<Promise<TValue> | TValue> | AsyncIterable<TValue>\n    ) => AsyncIterator<TValue>)\n  & ((collection: {length: number}) => AsyncIterator<mixed>)\n  & ((collection: mixed) => (void | AsyncIterator<mixed>)); */\nexport function createAsyncIterator(source) {\n  if (source != null) {\n    var asyncIterator = getAsyncIterator(source)\n    if (asyncIterator) {\n      return asyncIterator\n    }\n    var iterator = createIterator(source)\n    if (iterator) {\n      return new AsyncFromSyncIterator(iterator)\n    }\n  }\n}\n\n// When the object provided to `createAsyncIterator` is not AsyncIterable but is\n// sync Iterable, this simple wrapper is created.\nfunction AsyncFromSyncIterator(iterator) {\n  this._i = iterator\n}\n\n// Note: all AsyncIterators are themselves AsyncIterable.\nAsyncFromSyncIterator.prototype[$$asyncIterator] = function() {\n  return this\n}\n\n// A simple state-machine determines the IteratorResult returned, yielding\n// each value in the Array-like object in order of their indicies.\nAsyncFromSyncIterator.prototype.next = function(value) {\n  return unwrapAsyncFromSync(this._i, 'next', value)\n}\n\nAsyncFromSyncIterator.prototype.return = function(value) {\n  return this._i.return\n    ? unwrapAsyncFromSync(this._i, 'return', value)\n    : Promise.resolve({ value: value, done: true })\n}\n\nAsyncFromSyncIterator.prototype.throw = function(value) {\n  return this._i.throw\n    ? unwrapAsyncFromSync(this._i, 'throw', value)\n    : Promise.reject(value)\n}\n\nfunction unwrapAsyncFromSync(iterator, fn, value) {\n  var step\n  return new Promise(function(resolve) {\n    step = iterator[fn](value)\n    resolve(step.value)\n  }).then(function(value) {\n    return { value: value, done: step.done }\n  })\n}\n\n/**\n * Given an object which either implements the AsyncIterable protocol or is\n * Array-like, iterate over it, calling the `callback` at each iteration.\n *\n * Use `forAwaitEach` where you would expect to use a [for-await-of](https://tc39.github.io/proposal-async-iteration/#sec-for-in-and-for-of-statements) loop.\n *\n * Similar to [Array#forEach][], the `callback` function accepts three\n * arguments, and is provided with `thisArg` as the calling context.\n *\n * > Note: Using `forAwaitEach` requires the existence of `Promise`.\n * > While `Promise` has been available in modern browsers for a number of\n * > years, legacy browsers (like IE 11) may require a polyfill.\n *\n * @example\n *\n * var forAwaitEach = require('iterall').forAwaitEach\n *\n * forAwaitEach(myIterable, function (value, index, iterable) {\n *   console.log(value, index, iterable === myIterable)\n * })\n *\n * @example\n *\n * // ES2017:\n * for await (let value of myAsyncIterable) {\n *   console.log(await doSomethingAsync(value))\n * }\n * console.log('done')\n *\n * // Any JavaScript environment:\n * forAwaitEach(myAsyncIterable, function (value) {\n *   return doSomethingAsync(value).then(console.log)\n * }).then(function () {\n *   console.log('done')\n * })\n *\n * @template T the type of each iterated value\n * @param {AsyncIterable<T>|Iterable<Promise<T> | T>|{ length: number }} source\n *   The AsyncIterable or array to iterate over.\n * @param {function(T, number, object)} callback\n *   Function to execute for each iteration, taking up to three arguments\n * @param [thisArg]\n *   Optional. Value to use as `this` when executing `callback`.\n */\n/*:: declare export var forAwaitEach:\n  & (<+TValue, TCollection: Iterable<Promise<TValue> | TValue> | AsyncIterable<TValue>>(\n      collection: TCollection,\n      callbackFn: (value: TValue, index: number, collection: TCollection) => any,\n      thisArg?: any\n    ) => Promise<void>)\n  & (<TCollection: { length: number }>(\n      collection: TCollection,\n      callbackFn: (value: mixed, index: number, collection: TCollection) => any,\n      thisArg?: any\n    ) => Promise<void>); */\nexport function forAwaitEach(source, callback, thisArg) {\n  var asyncIterator = createAsyncIterator(source)\n  if (asyncIterator) {\n    var i = 0\n    return new Promise(function(resolve, reject) {\n      function next() {\n        asyncIterator\n          .next()\n          .then(function(step) {\n            if (!step.done) {\n              Promise.resolve(callback.call(thisArg, step.value, i++, source))\n                .then(next)\n                .catch(reject)\n            } else {\n              resolve()\n            }\n            // Explicitly return null, silencing bluebird-style warnings.\n            return null\n          })\n          .catch(reject)\n        // Explicitly return null, silencing bluebird-style warnings.\n        return null\n      }\n      next()\n    })\n  }\n}\n","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = find;\n\n/**\n *  Copyright (c) 2015, Facebook, Inc.\n *  All rights reserved.\n *\n *  This source code is licensed under the BSD-style license found in the\n *  LICENSE file in the root directory of this source tree. An additional grant\n *  of patent rights can be found in the PATENTS file in the same directory.\n */\n\nfunction find(list, predicate) {\n  for (var i = 0; i < list.length; i++) {\n    if (predicate(list[i])) {\n      return list[i];\n    }\n  }\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = keyMap;\n\n/**\n *  Copyright (c) 2015, Facebook, Inc.\n *  All rights reserved.\n *\n *  This source code is licensed under the BSD-style license found in the\n *  LICENSE file in the root directory of this source tree. An additional grant\n *  of patent rights can be found in the PATENTS file in the same directory.\n */\n\n/**\n * Creates a keyed JS object from an array, given a function to produce the keys\n * for each value in the array.\n *\n * This provides a convenient lookup for the array items if the key function\n * produces unique results.\n *\n *     const phoneBook = [\n *       { name: 'Jon', num: '555-1234' },\n *       { name: 'Jenny', num: '867-5309' }\n *     ]\n *\n *     // { Jon: { name: 'Jon', num: '555-1234' },\n *     //   Jenny: { name: 'Jenny', num: '867-5309' } }\n *     const entriesByName = keyMap(\n *       phoneBook,\n *       entry => entry.name\n *     )\n *\n *     // { name: 'Jenny', num: '857-6309' }\n *     const jennyEntry = entriesByName['Jenny']\n *\n */\nfunction keyMap(list, keyFn) {\n  return list.reduce(function (map, item) {\n    return map[keyFn(item)] = item, map;\n  }, Object.create(null));\n}","const genericMessage = \"Invariant Violation\";\nconst {\n  setPrototypeOf = function (obj: any, proto: any) {\n    obj.__proto__ = proto;\n    return obj;\n  },\n} = Object as any;\n\nexport class InvariantError extends Error {\n  framesToPop = 1;\n  name = genericMessage;\n  constructor(message: string | number = genericMessage) {\n    super(\n      typeof message === \"number\"\n        ? `${genericMessage}: ${message} (see https://github.com/apollographql/invariant-packages)`\n        : message\n    );\n    setPrototypeOf(this, InvariantError.prototype);\n  }\n}\n\nexport function invariant(condition: any, message?: string | number) {\n  if (!condition) {\n    throw new InvariantError(message);\n  }\n}\n\nfunction wrapConsoleMethod(method: \"warn\" | \"error\") {\n  return function () {\n    return console[method].apply(console, arguments as any);\n  } as (...args: any[]) => void;\n}\n\nexport namespace invariant {\n  export const warn = wrapConsoleMethod(\"warn\");\n  export const error = wrapConsoleMethod(\"error\");\n}\n\n// Code that uses ts-invariant with rollup-plugin-invariant may want to\n// import this process stub to avoid errors evaluating process.env.NODE_ENV.\n// However, because most ESM-to-CJS compilers will rewrite the process import\n// as tsInvariant.process, which prevents proper replacement by minifiers, we\n// also attempt to define the stub globally when it is not already defined.\nlet processStub: NodeJS.Process = { env: {} } as any;\nexport { processStub as process };\nif (typeof process === \"object\") {\n  processStub = process;\n} else try {\n  // Using Function to evaluate this assignment in global scope also escapes\n  // the strict mode of the current module, thereby allowing the assignment.\n  // Inspired by https://github.com/facebook/regenerator/pull/369.\n  Function(\"stub\", \"process = stub\")(processStub);\n} catch (atLeastWeTried) {\n  // The assignment can fail if a Content Security Policy heavy-handedly\n  // forbids Function usage. In those environments, developers should take\n  // extra care to replace process.env.NODE_ENV in their production builds,\n  // or define an appropriate global.process polyfill.\n}\n\nexport default invariant;\n","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.GraphQLError = GraphQLError;\n\nvar _location = require('../language/location');\n\n/**\n * A GraphQLError describes an Error found during the parse, validate, or\n * execute phases of performing a GraphQL operation. In addition to a message\n * and stack trace, it also includes information about the locations in a\n * GraphQL document and/or execution result that correspond to the Error.\n */\nfunction GraphQLError( // eslint-disable-line no-redeclare\nmessage, nodes, source, positions, path, originalError) {\n  // Compute locations in the source for the given nodes/positions.\n  var _source = source;\n  if (!_source && nodes && nodes.length > 0) {\n    var node = nodes[0];\n    _source = node && node.loc && node.loc.source;\n  }\n\n  var _positions = positions;\n  if (!_positions && nodes) {\n    _positions = nodes.filter(function (node) {\n      return Boolean(node.loc);\n    }).map(function (node) {\n      return node.loc.start;\n    });\n  }\n  if (_positions && _positions.length === 0) {\n    _positions = undefined;\n  }\n\n  var _locations = void 0;\n  var _source2 = _source; // seems here Flow need a const to resolve type.\n  if (_source2 && _positions) {\n    _locations = _positions.map(function (pos) {\n      return (0, _location.getLocation)(_source2, pos);\n    });\n  }\n\n  Object.defineProperties(this, {\n    message: {\n      value: message,\n      // By being enumerable, JSON.stringify will include `message` in the\n      // resulting output. This ensures that the simplest possible GraphQL\n      // service adheres to the spec.\n      enumerable: true,\n      writable: true\n    },\n    locations: {\n      // Coercing falsey values to undefined ensures they will not be included\n      // in JSON.stringify() when not provided.\n      value: _locations || undefined,\n      // By being enumerable, JSON.stringify will include `locations` in the\n      // resulting output. This ensures that the simplest possible GraphQL\n      // service adheres to the spec.\n      enumerable: true\n    },\n    path: {\n      // Coercing falsey values to undefined ensures they will not be included\n      // in JSON.stringify() when not provided.\n      value: path || undefined,\n      // By being enumerable, JSON.stringify will include `path` in the\n      // resulting output. This ensures that the simplest possible GraphQL\n      // service adheres to the spec.\n      enumerable: true\n    },\n    nodes: {\n      value: nodes || undefined\n    },\n    source: {\n      value: _source || undefined\n    },\n    positions: {\n      value: _positions || undefined\n    },\n    originalError: {\n      value: originalError\n    }\n  });\n\n  // Include (non-enumerable) stack trace.\n  if (originalError && originalError.stack) {\n    Object.defineProperty(this, 'stack', {\n      value: originalError.stack,\n      writable: true,\n      configurable: true\n    });\n  } else if (Error.captureStackTrace) {\n    Error.captureStackTrace(this, GraphQLError);\n  } else {\n    Object.defineProperty(this, 'stack', {\n      value: Error().stack,\n      writable: true,\n      configurable: true\n    });\n  }\n}\n/**\n *  Copyright (c) 2015, Facebook, Inc.\n *  All rights reserved.\n *\n *  This source code is licensed under the BSD-style license found in the\n *  LICENSE file in the root directory of this source tree. An additional grant\n *  of patent rights can be found in the PATENTS file in the same directory.\n */\n\nGraphQLError.prototype = Object.create(Error.prototype, {\n  constructor: { value: GraphQLError },\n  name: { value: 'GraphQLError' }\n});","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isInvalid;\n\n/**\n *  Copyright (c) 2015, Facebook, Inc.\n *  All rights reserved.\n *\n *  This source code is licensed under the BSD-style license found in the\n *  LICENSE file in the root directory of this source tree. An additional grant\n *  of patent rights can be found in the PATENTS file in the same directory.\n */\n\n/**\n * Returns true if a value is undefined, or NaN.\n */\nfunction isInvalid(value) {\n  return value === undefined || value !== value;\n}","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.valueFromAST = valueFromAST;\n\nvar _keyMap = require('../jsutils/keyMap');\n\nvar _keyMap2 = _interopRequireDefault(_keyMap);\n\nvar _invariant = require('../jsutils/invariant');\n\nvar _invariant2 = _interopRequireDefault(_invariant);\n\nvar _isNullish = require('../jsutils/isNullish');\n\nvar _isNullish2 = _interopRequireDefault(_isNullish);\n\nvar _isInvalid = require('../jsutils/isInvalid');\n\nvar _isInvalid2 = _interopRequireDefault(_isInvalid);\n\nvar _kinds = require('../language/kinds');\n\nvar Kind = _interopRequireWildcard(_kinds);\n\nvar _definition = require('../type/definition');\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Produces a JavaScript value given a GraphQL Value AST.\n *\n * A GraphQL type must be provided, which will be used to interpret different\n * GraphQL Value literals.\n *\n * Returns `undefined` when the value could not be validly coerced according to\n * the provided type.\n *\n * | GraphQL Value        | JSON Value    |\n * | -------------------- | ------------- |\n * | Input Object         | Object        |\n * | List                 | Array         |\n * | Boolean              | Boolean       |\n * | String               | String        |\n * | Int / Float          | Number        |\n * | Enum Value           | Mixed         |\n * | NullValue            | null          |\n *\n */\n\n/**\n *  Copyright (c) 2015, Facebook, Inc.\n *  All rights reserved.\n *\n *  This source code is licensed under the BSD-style license found in the\n *  LICENSE file in the root directory of this source tree. An additional grant\n *  of patent rights can be found in the PATENTS file in the same directory.\n */\n\nfunction valueFromAST(valueNode, type, variables) {\n  if (!valueNode) {\n    // When there is no node, then there is also no value.\n    // Importantly, this is different from returning the value null.\n    return;\n  }\n\n  if (type instanceof _definition.GraphQLNonNull) {\n    if (valueNode.kind === Kind.NULL) {\n      return; // Invalid: intentionally return no value.\n    }\n    return valueFromAST(valueNode, type.ofType, variables);\n  }\n\n  if (valueNode.kind === Kind.NULL) {\n    // This is explicitly returning the value null.\n    return null;\n  }\n\n  if (valueNode.kind === Kind.VARIABLE) {\n    var variableName = valueNode.name.value;\n    if (!variables || (0, _isInvalid2.default)(variables[variableName])) {\n      // No valid return value.\n      return;\n    }\n    // Note: we're not doing any checking that this variable is correct. We're\n    // assuming that this query has been validated and the variable usage here\n    // is of the correct type.\n    return variables[variableName];\n  }\n\n  if (type instanceof _definition.GraphQLList) {\n    var itemType = type.ofType;\n    if (valueNode.kind === Kind.LIST) {\n      var coercedValues = [];\n      var itemNodes = valueNode.values;\n      for (var i = 0; i < itemNodes.length; i++) {\n        if (isMissingVariable(itemNodes[i], variables)) {\n          // If an array contains a missing variable, it is either coerced to\n          // null or if the item type is non-null, it considered invalid.\n          if (itemType instanceof _definition.GraphQLNonNull) {\n            return; // Invalid: intentionally return no value.\n          }\n          coercedValues.push(null);\n        } else {\n          var itemValue = valueFromAST(itemNodes[i], itemType, variables);\n          if ((0, _isInvalid2.default)(itemValue)) {\n            return; // Invalid: intentionally return no value.\n          }\n          coercedValues.push(itemValue);\n        }\n      }\n      return coercedValues;\n    }\n    var coercedValue = valueFromAST(valueNode, itemType, variables);\n    if ((0, _isInvalid2.default)(coercedValue)) {\n      return; // Invalid: intentionally return no value.\n    }\n    return [coercedValue];\n  }\n\n  if (type instanceof _definition.GraphQLInputObjectType) {\n    if (valueNode.kind !== Kind.OBJECT) {\n      return; // Invalid: intentionally return no value.\n    }\n    var coercedObj = Object.create(null);\n    var fields = type.getFields();\n    var fieldNodes = (0, _keyMap2.default)(valueNode.fields, function (field) {\n      return field.name.value;\n    });\n    var fieldNames = Object.keys(fields);\n    for (var _i = 0; _i < fieldNames.length; _i++) {\n      var fieldName = fieldNames[_i];\n      var field = fields[fieldName];\n      var fieldNode = fieldNodes[fieldName];\n      if (!fieldNode || isMissingVariable(fieldNode.value, variables)) {\n        if (!(0, _isInvalid2.default)(field.defaultValue)) {\n          coercedObj[fieldName] = field.defaultValue;\n        } else if (field.type instanceof _definition.GraphQLNonNull) {\n          return; // Invalid: intentionally return no value.\n        }\n        continue;\n      }\n      var fieldValue = valueFromAST(fieldNode.value, field.type, variables);\n      if ((0, _isInvalid2.default)(fieldValue)) {\n        return; // Invalid: intentionally return no value.\n      }\n      coercedObj[fieldName] = fieldValue;\n    }\n    return coercedObj;\n  }\n\n  !(type instanceof _definition.GraphQLScalarType || type instanceof _definition.GraphQLEnumType) ? (0, _invariant2.default)(0, 'Must be input type') : void 0;\n\n  var parsed = type.parseLiteral(valueNode);\n  if ((0, _isNullish2.default)(parsed) && !type.isValidLiteral(valueNode)) {\n    // Invalid values represent a failure to parse correctly, in which case\n    // no value is returned.\n    return;\n  }\n\n  return parsed;\n}\n\n// Returns true if the provided valueNode is a variable which is not defined\n// in the set of variables.\nfunction isMissingVariable(valueNode, variables) {\n  return valueNode.kind === Kind.VARIABLE && (!variables || (0, _isInvalid2.default)(variables[valueNode.name.value]));\n}","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.parse = parse;\nexports.parseValue = parseValue;\nexports.parseType = parseType;\nexports.parseConstValue = parseConstValue;\nexports.parseTypeReference = parseTypeReference;\nexports.parseNamedType = parseNamedType;\n\nvar _source = require('./source');\n\nvar _error = require('../error');\n\nvar _lexer = require('./lexer');\n\nvar _kinds = require('./kinds');\n\n/**\n * Given a GraphQL source, parses it into a Document.\n * Throws GraphQLError if a syntax error is encountered.\n */\n\n\n/**\n * Configuration options to control parser behavior\n */\n\n/**\n *  Copyright (c) 2015, Facebook, Inc.\n *  All rights reserved.\n *\n *  This source code is licensed under the BSD-style license found in the\n *  LICENSE file in the root directory of this source tree. An additional grant\n *  of patent rights can be found in the PATENTS file in the same directory.\n */\n\nfunction parse(source, options) {\n  var sourceObj = typeof source === 'string' ? new _source.Source(source) : source;\n  if (!(sourceObj instanceof _source.Source)) {\n    throw new TypeError('Must provide Source. Received: ' + String(sourceObj));\n  }\n  var lexer = (0, _lexer.createLexer)(sourceObj, options || {});\n  return parseDocument(lexer);\n}\n\n/**\n * Given a string containing a GraphQL value (ex. `[42]`), parse the AST for\n * that value.\n * Throws GraphQLError if a syntax error is encountered.\n *\n * This is useful within tools that operate upon GraphQL Values directly and\n * in isolation of complete GraphQL documents.\n *\n * Consider providing the results to the utility function: valueFromAST().\n */\nfunction parseValue(source, options) {\n  var sourceObj = typeof source === 'string' ? new _source.Source(source) : source;\n  var lexer = (0, _lexer.createLexer)(sourceObj, options || {});\n  expect(lexer, _lexer.TokenKind.SOF);\n  var value = parseValueLiteral(lexer, false);\n  expect(lexer, _lexer.TokenKind.EOF);\n  return value;\n}\n\n/**\n * Given a string containing a GraphQL Type (ex. `[Int!]`), parse the AST for\n * that type.\n * Throws GraphQLError if a syntax error is encountered.\n *\n * This is useful within tools that operate upon GraphQL Types directly and\n * in isolation of complete GraphQL documents.\n *\n * Consider providing the results to the utility function: typeFromAST().\n */\nfunction parseType(source, options) {\n  var sourceObj = typeof source === 'string' ? new _source.Source(source) : source;\n  var lexer = (0, _lexer.createLexer)(sourceObj, options || {});\n  expect(lexer, _lexer.TokenKind.SOF);\n  var type = parseTypeReference(lexer);\n  expect(lexer, _lexer.TokenKind.EOF);\n  return type;\n}\n\n/**\n * Converts a name lex token into a name parse node.\n */\nfunction parseName(lexer) {\n  var token = expect(lexer, _lexer.TokenKind.NAME);\n  return {\n    kind: _kinds.NAME,\n    value: token.value,\n    loc: loc(lexer, token)\n  };\n}\n\n// Implements the parsing rules in the Document section.\n\n/**\n * Document : Definition+\n */\nfunction parseDocument(lexer) {\n  var start = lexer.token;\n  expect(lexer, _lexer.TokenKind.SOF);\n  var definitions = [];\n  do {\n    definitions.push(parseDefinition(lexer));\n  } while (!skip(lexer, _lexer.TokenKind.EOF));\n\n  return {\n    kind: _kinds.DOCUMENT,\n    definitions: definitions,\n    loc: loc(lexer, start)\n  };\n}\n\n/**\n * Definition :\n *   - OperationDefinition\n *   - FragmentDefinition\n *   - TypeSystemDefinition\n */\nfunction parseDefinition(lexer) {\n  if (peek(lexer, _lexer.TokenKind.BRACE_L)) {\n    return parseOperationDefinition(lexer);\n  }\n\n  if (peek(lexer, _lexer.TokenKind.NAME)) {\n    switch (lexer.token.value) {\n      // Note: subscription is an experimental non-spec addition.\n      case 'query':\n      case 'mutation':\n      case 'subscription':\n        return parseOperationDefinition(lexer);\n\n      case 'fragment':\n        return parseFragmentDefinition(lexer);\n\n      // Note: the Type System IDL is an experimental non-spec addition.\n      case 'schema':\n      case 'scalar':\n      case 'type':\n      case 'interface':\n      case 'union':\n      case 'enum':\n      case 'input':\n      case 'extend':\n      case 'directive':\n        return parseTypeSystemDefinition(lexer);\n    }\n  }\n\n  throw unexpected(lexer);\n}\n\n// Implements the parsing rules in the Operations section.\n\n/**\n * OperationDefinition :\n *  - SelectionSet\n *  - OperationType Name? VariableDefinitions? Directives? SelectionSet\n */\nfunction parseOperationDefinition(lexer) {\n  var start = lexer.token;\n  if (peek(lexer, _lexer.TokenKind.BRACE_L)) {\n    return {\n      kind: _kinds.OPERATION_DEFINITION,\n      operation: 'query',\n      name: null,\n      variableDefinitions: null,\n      directives: [],\n      selectionSet: parseSelectionSet(lexer),\n      loc: loc(lexer, start)\n    };\n  }\n  var operation = parseOperationType(lexer);\n  var name = void 0;\n  if (peek(lexer, _lexer.TokenKind.NAME)) {\n    name = parseName(lexer);\n  }\n  return {\n    kind: _kinds.OPERATION_DEFINITION,\n    operation: operation,\n    name: name,\n    variableDefinitions: parseVariableDefinitions(lexer),\n    directives: parseDirectives(lexer),\n    selectionSet: parseSelectionSet(lexer),\n    loc: loc(lexer, start)\n  };\n}\n\n/**\n * OperationType : one of query mutation subscription\n */\nfunction parseOperationType(lexer) {\n  var operationToken = expect(lexer, _lexer.TokenKind.NAME);\n  switch (operationToken.value) {\n    case 'query':\n      return 'query';\n    case 'mutation':\n      return 'mutation';\n    // Note: subscription is an experimental non-spec addition.\n    case 'subscription':\n      return 'subscription';\n  }\n\n  throw unexpected(lexer, operationToken);\n}\n\n/**\n * VariableDefinitions : ( VariableDefinition+ )\n */\nfunction parseVariableDefinitions(lexer) {\n  return peek(lexer, _lexer.TokenKind.PAREN_L) ? many(lexer, _lexer.TokenKind.PAREN_L, parseVariableDefinition, _lexer.TokenKind.PAREN_R) : [];\n}\n\n/**\n * VariableDefinition : Variable : Type DefaultValue?\n */\nfunction parseVariableDefinition(lexer) {\n  var start = lexer.token;\n  return {\n    kind: _kinds.VARIABLE_DEFINITION,\n    variable: parseVariable(lexer),\n    type: (expect(lexer, _lexer.TokenKind.COLON), parseTypeReference(lexer)),\n    defaultValue: skip(lexer, _lexer.TokenKind.EQUALS) ? parseValueLiteral(lexer, true) : null,\n    loc: loc(lexer, start)\n  };\n}\n\n/**\n * Variable : $ Name\n */\nfunction parseVariable(lexer) {\n  var start = lexer.token;\n  expect(lexer, _lexer.TokenKind.DOLLAR);\n  return {\n    kind: _kinds.VARIABLE,\n    name: parseName(lexer),\n    loc: loc(lexer, start)\n  };\n}\n\n/**\n * SelectionSet : { Selection+ }\n */\nfunction parseSelectionSet(lexer) {\n  var start = lexer.token;\n  return {\n    kind: _kinds.SELECTION_SET,\n    selections: many(lexer, _lexer.TokenKind.BRACE_L, parseSelection, _lexer.TokenKind.BRACE_R),\n    loc: loc(lexer, start)\n  };\n}\n\n/**\n * Selection :\n *   - Field\n *   - FragmentSpread\n *   - InlineFragment\n */\nfunction parseSelection(lexer) {\n  return peek(lexer, _lexer.TokenKind.SPREAD) ? parseFragment(lexer) : parseField(lexer);\n}\n\n/**\n * Field : Alias? Name Arguments? Directives? SelectionSet?\n *\n * Alias : Name :\n */\nfunction parseField(lexer) {\n  var start = lexer.token;\n\n  var nameOrAlias = parseName(lexer);\n  var alias = void 0;\n  var name = void 0;\n  if (skip(lexer, _lexer.TokenKind.COLON)) {\n    alias = nameOrAlias;\n    name = parseName(lexer);\n  } else {\n    alias = null;\n    name = nameOrAlias;\n  }\n\n  return {\n    kind: _kinds.FIELD,\n    alias: alias,\n    name: name,\n    arguments: parseArguments(lexer),\n    directives: parseDirectives(lexer),\n    selectionSet: peek(lexer, _lexer.TokenKind.BRACE_L) ? parseSelectionSet(lexer) : null,\n    loc: loc(lexer, start)\n  };\n}\n\n/**\n * Arguments : ( Argument+ )\n */\nfunction parseArguments(lexer) {\n  return peek(lexer, _lexer.TokenKind.PAREN_L) ? many(lexer, _lexer.TokenKind.PAREN_L, parseArgument, _lexer.TokenKind.PAREN_R) : [];\n}\n\n/**\n * Argument : Name : Value\n */\nfunction parseArgument(lexer) {\n  var start = lexer.token;\n  return {\n    kind: _kinds.ARGUMENT,\n    name: parseName(lexer),\n    value: (expect(lexer, _lexer.TokenKind.COLON), parseValueLiteral(lexer, false)),\n    loc: loc(lexer, start)\n  };\n}\n\n// Implements the parsing rules in the Fragments section.\n\n/**\n * Corresponds to both FragmentSpread and InlineFragment in the spec.\n *\n * FragmentSpread : ... FragmentName Directives?\n *\n * InlineFragment : ... TypeCondition? Directives? SelectionSet\n */\nfunction parseFragment(lexer) {\n  var start = lexer.token;\n  expect(lexer, _lexer.TokenKind.SPREAD);\n  if (peek(lexer, _lexer.TokenKind.NAME) && lexer.token.value !== 'on') {\n    return {\n      kind: _kinds.FRAGMENT_SPREAD,\n      name: parseFragmentName(lexer),\n      directives: parseDirectives(lexer),\n      loc: loc(lexer, start)\n    };\n  }\n  var typeCondition = null;\n  if (lexer.token.value === 'on') {\n    lexer.advance();\n    typeCondition = parseNamedType(lexer);\n  }\n  return {\n    kind: _kinds.INLINE_FRAGMENT,\n    typeCondition: typeCondition,\n    directives: parseDirectives(lexer),\n    selectionSet: parseSelectionSet(lexer),\n    loc: loc(lexer, start)\n  };\n}\n\n/**\n * FragmentDefinition :\n *   - fragment FragmentName on TypeCondition Directives? SelectionSet\n *\n * TypeCondition : NamedType\n */\nfunction parseFragmentDefinition(lexer) {\n  var start = lexer.token;\n  expectKeyword(lexer, 'fragment');\n  return {\n    kind: _kinds.FRAGMENT_DEFINITION,\n    name: parseFragmentName(lexer),\n    typeCondition: (expectKeyword(lexer, 'on'), parseNamedType(lexer)),\n    directives: parseDirectives(lexer),\n    selectionSet: parseSelectionSet(lexer),\n    loc: loc(lexer, start)\n  };\n}\n\n/**\n * FragmentName : Name but not `on`\n */\nfunction parseFragmentName(lexer) {\n  if (lexer.token.value === 'on') {\n    throw unexpected(lexer);\n  }\n  return parseName(lexer);\n}\n\n// Implements the parsing rules in the Values section.\n\n/**\n * Value[Const] :\n *   - [~Const] Variable\n *   - IntValue\n *   - FloatValue\n *   - StringValue\n *   - BooleanValue\n *   - NullValue\n *   - EnumValue\n *   - ListValue[?Const]\n *   - ObjectValue[?Const]\n *\n * BooleanValue : one of `true` `false`\n *\n * NullValue : `null`\n *\n * EnumValue : Name but not `true`, `false` or `null`\n */\nfunction parseValueLiteral(lexer, isConst) {\n  var token = lexer.token;\n  switch (token.kind) {\n    case _lexer.TokenKind.BRACKET_L:\n      return parseList(lexer, isConst);\n    case _lexer.TokenKind.BRACE_L:\n      return parseObject(lexer, isConst);\n    case _lexer.TokenKind.INT:\n      lexer.advance();\n      return {\n        kind: _kinds.INT,\n        value: token.value,\n        loc: loc(lexer, token)\n      };\n    case _lexer.TokenKind.FLOAT:\n      lexer.advance();\n      return {\n        kind: _kinds.FLOAT,\n        value: token.value,\n        loc: loc(lexer, token)\n      };\n    case _lexer.TokenKind.STRING:\n      lexer.advance();\n      return {\n        kind: _kinds.STRING,\n        value: token.value,\n        loc: loc(lexer, token)\n      };\n    case _lexer.TokenKind.NAME:\n      if (token.value === 'true' || token.value === 'false') {\n        lexer.advance();\n        return {\n          kind: _kinds.BOOLEAN,\n          value: token.value === 'true',\n          loc: loc(lexer, token)\n        };\n      } else if (token.value === 'null') {\n        lexer.advance();\n        return {\n          kind: _kinds.NULL,\n          loc: loc(lexer, token)\n        };\n      }\n      lexer.advance();\n      return {\n        kind: _kinds.ENUM,\n        value: token.value,\n        loc: loc(lexer, token)\n      };\n    case _lexer.TokenKind.DOLLAR:\n      if (!isConst) {\n        return parseVariable(lexer);\n      }\n      break;\n  }\n  throw unexpected(lexer);\n}\n\nfunction parseConstValue(lexer) {\n  return parseValueLiteral(lexer, true);\n}\n\nfunction parseValueValue(lexer) {\n  return parseValueLiteral(lexer, false);\n}\n\n/**\n * ListValue[Const] :\n *   - [ ]\n *   - [ Value[?Const]+ ]\n */\nfunction parseList(lexer, isConst) {\n  var start = lexer.token;\n  var item = isConst ? parseConstValue : parseValueValue;\n  return {\n    kind: _kinds.LIST,\n    values: any(lexer, _lexer.TokenKind.BRACKET_L, item, _lexer.TokenKind.BRACKET_R),\n    loc: loc(lexer, start)\n  };\n}\n\n/**\n * ObjectValue[Const] :\n *   - { }\n *   - { ObjectField[?Const]+ }\n */\nfunction parseObject(lexer, isConst) {\n  var start = lexer.token;\n  expect(lexer, _lexer.TokenKind.BRACE_L);\n  var fields = [];\n  while (!skip(lexer, _lexer.TokenKind.BRACE_R)) {\n    fields.push(parseObjectField(lexer, isConst));\n  }\n  return {\n    kind: _kinds.OBJECT,\n    fields: fields,\n    loc: loc(lexer, start)\n  };\n}\n\n/**\n * ObjectField[Const] : Name : Value[?Const]\n */\nfunction parseObjectField(lexer, isConst) {\n  var start = lexer.token;\n  return {\n    kind: _kinds.OBJECT_FIELD,\n    name: parseName(lexer),\n    value: (expect(lexer, _lexer.TokenKind.COLON), parseValueLiteral(lexer, isConst)),\n    loc: loc(lexer, start)\n  };\n}\n\n// Implements the parsing rules in the Directives section.\n\n/**\n * Directives : Directive+\n */\nfunction parseDirectives(lexer) {\n  var directives = [];\n  while (peek(lexer, _lexer.TokenKind.AT)) {\n    directives.push(parseDirective(lexer));\n  }\n  return directives;\n}\n\n/**\n * Directive : @ Name Arguments?\n */\nfunction parseDirective(lexer) {\n  var start = lexer.token;\n  expect(lexer, _lexer.TokenKind.AT);\n  return {\n    kind: _kinds.DIRECTIVE,\n    name: parseName(lexer),\n    arguments: parseArguments(lexer),\n    loc: loc(lexer, start)\n  };\n}\n\n// Implements the parsing rules in the Types section.\n\n/**\n * Type :\n *   - NamedType\n *   - ListType\n *   - NonNullType\n */\nfunction parseTypeReference(lexer) {\n  var start = lexer.token;\n  var type = void 0;\n  if (skip(lexer, _lexer.TokenKind.BRACKET_L)) {\n    type = parseTypeReference(lexer);\n    expect(lexer, _lexer.TokenKind.BRACKET_R);\n    type = {\n      kind: _kinds.LIST_TYPE,\n      type: type,\n      loc: loc(lexer, start)\n    };\n  } else {\n    type = parseNamedType(lexer);\n  }\n  if (skip(lexer, _lexer.TokenKind.BANG)) {\n    return {\n      kind: _kinds.NON_NULL_TYPE,\n      type: type,\n      loc: loc(lexer, start)\n    };\n  }\n  return type;\n}\n\n/**\n * NamedType : Name\n */\nfunction parseNamedType(lexer) {\n  var start = lexer.token;\n  return {\n    kind: _kinds.NAMED_TYPE,\n    name: parseName(lexer),\n    loc: loc(lexer, start)\n  };\n}\n\n// Implements the parsing rules in the Type Definition section.\n\n/**\n * TypeSystemDefinition :\n *   - SchemaDefinition\n *   - TypeDefinition\n *   - TypeExtensionDefinition\n *   - DirectiveDefinition\n *\n * TypeDefinition :\n *   - ScalarTypeDefinition\n *   - ObjectTypeDefinition\n *   - InterfaceTypeDefinition\n *   - UnionTypeDefinition\n *   - EnumTypeDefinition\n *   - InputObjectTypeDefinition\n */\nfunction parseTypeSystemDefinition(lexer) {\n  if (peek(lexer, _lexer.TokenKind.NAME)) {\n    switch (lexer.token.value) {\n      case 'schema':\n        return parseSchemaDefinition(lexer);\n      case 'scalar':\n        return parseScalarTypeDefinition(lexer);\n      case 'type':\n        return parseObjectTypeDefinition(lexer);\n      case 'interface':\n        return parseInterfaceTypeDefinition(lexer);\n      case 'union':\n        return parseUnionTypeDefinition(lexer);\n      case 'enum':\n        return parseEnumTypeDefinition(lexer);\n      case 'input':\n        return parseInputObjectTypeDefinition(lexer);\n      case 'extend':\n        return parseTypeExtensionDefinition(lexer);\n      case 'directive':\n        return parseDirectiveDefinition(lexer);\n    }\n  }\n\n  throw unexpected(lexer);\n}\n\n/**\n * SchemaDefinition : schema Directives? { OperationTypeDefinition+ }\n *\n * OperationTypeDefinition : OperationType : NamedType\n */\nfunction parseSchemaDefinition(lexer) {\n  var start = lexer.token;\n  expectKeyword(lexer, 'schema');\n  var directives = parseDirectives(lexer);\n  var operationTypes = many(lexer, _lexer.TokenKind.BRACE_L, parseOperationTypeDefinition, _lexer.TokenKind.BRACE_R);\n  return {\n    kind: _kinds.SCHEMA_DEFINITION,\n    directives: directives,\n    operationTypes: operationTypes,\n    loc: loc(lexer, start)\n  };\n}\n\nfunction parseOperationTypeDefinition(lexer) {\n  var start = lexer.token;\n  var operation = parseOperationType(lexer);\n  expect(lexer, _lexer.TokenKind.COLON);\n  var type = parseNamedType(lexer);\n  return {\n    kind: _kinds.OPERATION_TYPE_DEFINITION,\n    operation: operation,\n    type: type,\n    loc: loc(lexer, start)\n  };\n}\n\n/**\n * ScalarTypeDefinition : scalar Name Directives?\n */\nfunction parseScalarTypeDefinition(lexer) {\n  var start = lexer.token;\n  expectKeyword(lexer, 'scalar');\n  var name = parseName(lexer);\n  var directives = parseDirectives(lexer);\n  return {\n    kind: _kinds.SCALAR_TYPE_DEFINITION,\n    name: name,\n    directives: directives,\n    loc: loc(lexer, start)\n  };\n}\n\n/**\n * ObjectTypeDefinition :\n *   - type Name ImplementsInterfaces? Directives? { FieldDefinition+ }\n */\nfunction parseObjectTypeDefinition(lexer) {\n  var start = lexer.token;\n  expectKeyword(lexer, 'type');\n  var name = parseName(lexer);\n  var interfaces = parseImplementsInterfaces(lexer);\n  var directives = parseDirectives(lexer);\n  var fields = any(lexer, _lexer.TokenKind.BRACE_L, parseFieldDefinition, _lexer.TokenKind.BRACE_R);\n  return {\n    kind: _kinds.OBJECT_TYPE_DEFINITION,\n    name: name,\n    interfaces: interfaces,\n    directives: directives,\n    fields: fields,\n    loc: loc(lexer, start)\n  };\n}\n\n/**\n * ImplementsInterfaces : implements NamedType+\n */\nfunction parseImplementsInterfaces(lexer) {\n  var types = [];\n  if (lexer.token.value === 'implements') {\n    lexer.advance();\n    do {\n      types.push(parseNamedType(lexer));\n    } while (peek(lexer, _lexer.TokenKind.NAME));\n  }\n  return types;\n}\n\n/**\n * FieldDefinition : Name ArgumentsDefinition? : Type Directives?\n */\nfunction parseFieldDefinition(lexer) {\n  var start = lexer.token;\n  var name = parseName(lexer);\n  var args = parseArgumentDefs(lexer);\n  expect(lexer, _lexer.TokenKind.COLON);\n  var type = parseTypeReference(lexer);\n  var directives = parseDirectives(lexer);\n  return {\n    kind: _kinds.FIELD_DEFINITION,\n    name: name,\n    arguments: args,\n    type: type,\n    directives: directives,\n    loc: loc(lexer, start)\n  };\n}\n\n/**\n * ArgumentsDefinition : ( InputValueDefinition+ )\n */\nfunction parseArgumentDefs(lexer) {\n  if (!peek(lexer, _lexer.TokenKind.PAREN_L)) {\n    return [];\n  }\n  return many(lexer, _lexer.TokenKind.PAREN_L, parseInputValueDef, _lexer.TokenKind.PAREN_R);\n}\n\n/**\n * InputValueDefinition : Name : Type DefaultValue? Directives?\n */\nfunction parseInputValueDef(lexer) {\n  var start = lexer.token;\n  var name = parseName(lexer);\n  expect(lexer, _lexer.TokenKind.COLON);\n  var type = parseTypeReference(lexer);\n  var defaultValue = null;\n  if (skip(lexer, _lexer.TokenKind.EQUALS)) {\n    defaultValue = parseConstValue(lexer);\n  }\n  var directives = parseDirectives(lexer);\n  return {\n    kind: _kinds.INPUT_VALUE_DEFINITION,\n    name: name,\n    type: type,\n    defaultValue: defaultValue,\n    directives: directives,\n    loc: loc(lexer, start)\n  };\n}\n\n/**\n * InterfaceTypeDefinition : interface Name Directives? { FieldDefinition+ }\n */\nfunction parseInterfaceTypeDefinition(lexer) {\n  var start = lexer.token;\n  expectKeyword(lexer, 'interface');\n  var name = parseName(lexer);\n  var directives = parseDirectives(lexer);\n  var fields = any(lexer, _lexer.TokenKind.BRACE_L, parseFieldDefinition, _lexer.TokenKind.BRACE_R);\n  return {\n    kind: _kinds.INTERFACE_TYPE_DEFINITION,\n    name: name,\n    directives: directives,\n    fields: fields,\n    loc: loc(lexer, start)\n  };\n}\n\n/**\n * UnionTypeDefinition : union Name Directives? = UnionMembers\n */\nfunction parseUnionTypeDefinition(lexer) {\n  var start = lexer.token;\n  expectKeyword(lexer, 'union');\n  var name = parseName(lexer);\n  var directives = parseDirectives(lexer);\n  expect(lexer, _lexer.TokenKind.EQUALS);\n  var types = parseUnionMembers(lexer);\n  return {\n    kind: _kinds.UNION_TYPE_DEFINITION,\n    name: name,\n    directives: directives,\n    types: types,\n    loc: loc(lexer, start)\n  };\n}\n\n/**\n * UnionMembers :\n *   - `|`? NamedType\n *   - UnionMembers | NamedType\n */\nfunction parseUnionMembers(lexer) {\n  // Optional leading pipe\n  skip(lexer, _lexer.TokenKind.PIPE);\n  var members = [];\n  do {\n    members.push(parseNamedType(lexer));\n  } while (skip(lexer, _lexer.TokenKind.PIPE));\n  return members;\n}\n\n/**\n * EnumTypeDefinition : enum Name Directives? { EnumValueDefinition+ }\n */\nfunction parseEnumTypeDefinition(lexer) {\n  var start = lexer.token;\n  expectKeyword(lexer, 'enum');\n  var name = parseName(lexer);\n  var directives = parseDirectives(lexer);\n  var values = many(lexer, _lexer.TokenKind.BRACE_L, parseEnumValueDefinition, _lexer.TokenKind.BRACE_R);\n  return {\n    kind: _kinds.ENUM_TYPE_DEFINITION,\n    name: name,\n    directives: directives,\n    values: values,\n    loc: loc(lexer, start)\n  };\n}\n\n/**\n * EnumValueDefinition : EnumValue Directives?\n *\n * EnumValue : Name\n */\nfunction parseEnumValueDefinition(lexer) {\n  var start = lexer.token;\n  var name = parseName(lexer);\n  var directives = parseDirectives(lexer);\n  return {\n    kind: _kinds.ENUM_VALUE_DEFINITION,\n    name: name,\n    directives: directives,\n    loc: loc(lexer, start)\n  };\n}\n\n/**\n * InputObjectTypeDefinition : input Name Directives? { InputValueDefinition+ }\n */\nfunction parseInputObjectTypeDefinition(lexer) {\n  var start = lexer.token;\n  expectKeyword(lexer, 'input');\n  var name = parseName(lexer);\n  var directives = parseDirectives(lexer);\n  var fields = any(lexer, _lexer.TokenKind.BRACE_L, parseInputValueDef, _lexer.TokenKind.BRACE_R);\n  return {\n    kind: _kinds.INPUT_OBJECT_TYPE_DEFINITION,\n    name: name,\n    directives: directives,\n    fields: fields,\n    loc: loc(lexer, start)\n  };\n}\n\n/**\n * TypeExtensionDefinition : extend ObjectTypeDefinition\n */\nfunction parseTypeExtensionDefinition(lexer) {\n  var start = lexer.token;\n  expectKeyword(lexer, 'extend');\n  var definition = parseObjectTypeDefinition(lexer);\n  return {\n    kind: _kinds.TYPE_EXTENSION_DEFINITION,\n    definition: definition,\n    loc: loc(lexer, start)\n  };\n}\n\n/**\n * DirectiveDefinition :\n *   - directive @ Name ArgumentsDefinition? on DirectiveLocations\n */\nfunction parseDirectiveDefinition(lexer) {\n  var start = lexer.token;\n  expectKeyword(lexer, 'directive');\n  expect(lexer, _lexer.TokenKind.AT);\n  var name = parseName(lexer);\n  var args = parseArgumentDefs(lexer);\n  expectKeyword(lexer, 'on');\n  var locations = parseDirectiveLocations(lexer);\n  return {\n    kind: _kinds.DIRECTIVE_DEFINITION,\n    name: name,\n    arguments: args,\n    locations: locations,\n    loc: loc(lexer, start)\n  };\n}\n\n/**\n * DirectiveLocations :\n *   - `|`? Name\n *   - DirectiveLocations | Name\n */\nfunction parseDirectiveLocations(lexer) {\n  // Optional leading pipe\n  skip(lexer, _lexer.TokenKind.PIPE);\n  var locations = [];\n  do {\n    locations.push(parseName(lexer));\n  } while (skip(lexer, _lexer.TokenKind.PIPE));\n  return locations;\n}\n\n// Core parsing utility functions\n\n/**\n * Returns a location object, used to identify the place in\n * the source that created a given parsed object.\n */\nfunction loc(lexer, startToken) {\n  if (!lexer.options.noLocation) {\n    return new Loc(startToken, lexer.lastToken, lexer.source);\n  }\n}\n\nfunction Loc(startToken, endToken, source) {\n  this.start = startToken.start;\n  this.end = endToken.end;\n  this.startToken = startToken;\n  this.endToken = endToken;\n  this.source = source;\n}\n\n// Print a simplified form when appearing in JSON/util.inspect.\nLoc.prototype.toJSON = Loc.prototype.inspect = function toJSON() {\n  return { start: this.start, end: this.end };\n};\n\n/**\n * Determines if the next token is of a given kind\n */\nfunction peek(lexer, kind) {\n  return lexer.token.kind === kind;\n}\n\n/**\n * If the next token is of the given kind, return true after advancing\n * the lexer. Otherwise, do not change the parser state and return false.\n */\nfunction skip(lexer, kind) {\n  var match = lexer.token.kind === kind;\n  if (match) {\n    lexer.advance();\n  }\n  return match;\n}\n\n/**\n * If the next token is of the given kind, return that token after advancing\n * the lexer. Otherwise, do not change the parser state and throw an error.\n */\nfunction expect(lexer, kind) {\n  var token = lexer.token;\n  if (token.kind === kind) {\n    lexer.advance();\n    return token;\n  }\n  throw (0, _error.syntaxError)(lexer.source, token.start, 'Expected ' + kind + ', found ' + (0, _lexer.getTokenDesc)(token));\n}\n\n/**\n * If the next token is a keyword with the given value, return that token after\n * advancing the lexer. Otherwise, do not change the parser state and return\n * false.\n */\nfunction expectKeyword(lexer, value) {\n  var token = lexer.token;\n  if (token.kind === _lexer.TokenKind.NAME && token.value === value) {\n    lexer.advance();\n    return token;\n  }\n  throw (0, _error.syntaxError)(lexer.source, token.start, 'Expected \"' + value + '\", found ' + (0, _lexer.getTokenDesc)(token));\n}\n\n/**\n * Helper function for creating an error when an unexpected lexed token\n * is encountered.\n */\nfunction unexpected(lexer, atToken) {\n  var token = atToken || lexer.token;\n  return (0, _error.syntaxError)(lexer.source, token.start, 'Unexpected ' + (0, _lexer.getTokenDesc)(token));\n}\n\n/**\n * Returns a possibly empty list of parse nodes, determined by\n * the parseFn. This list begins with a lex token of openKind\n * and ends with a lex token of closeKind. Advances the parser\n * to the next lex token after the closing token.\n */\nfunction any(lexer, openKind, parseFn, closeKind) {\n  expect(lexer, openKind);\n  var nodes = [];\n  while (!skip(lexer, closeKind)) {\n    nodes.push(parseFn(lexer));\n  }\n  return nodes;\n}\n\n/**\n * Returns a non-empty list of parse nodes, determined by\n * the parseFn. This list begins with a lex token of openKind\n * and ends with a lex token of closeKind. Advances the parser\n * to the next lex token after the closing token.\n */\nfunction many(lexer, openKind, parseFn, closeKind) {\n  expect(lexer, openKind);\n  var nodes = [parseFn(lexer)];\n  while (!skip(lexer, closeKind)) {\n    nodes.push(parseFn(lexer));\n  }\n  return nodes;\n}","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.isEqualType = isEqualType;\nexports.isTypeSubTypeOf = isTypeSubTypeOf;\nexports.doTypesOverlap = doTypesOverlap;\n\nvar _definition = require('../type/definition');\n\n/**\n * Provided two types, return true if the types are equal (invariant).\n */\nfunction isEqualType(typeA, typeB) {\n  // Equivalent types are equal.\n  if (typeA === typeB) {\n    return true;\n  }\n\n  // If either type is non-null, the other must also be non-null.\n  if (typeA instanceof _definition.GraphQLNonNull && typeB instanceof _definition.GraphQLNonNull) {\n    return isEqualType(typeA.ofType, typeB.ofType);\n  }\n\n  // If either type is a list, the other must also be a list.\n  if (typeA instanceof _definition.GraphQLList && typeB instanceof _definition.GraphQLList) {\n    return isEqualType(typeA.ofType, typeB.ofType);\n  }\n\n  // Otherwise the types are not equal.\n  return false;\n}\n\n/**\n * Provided a type and a super type, return true if the first type is either\n * equal or a subset of the second super type (covariant).\n */\n\n/**\n *  Copyright (c) 2015, Facebook, Inc.\n *  All rights reserved.\n *\n *  This source code is licensed under the BSD-style license found in the\n *  LICENSE file in the root directory of this source tree. An additional grant\n *  of patent rights can be found in the PATENTS file in the same directory.\n */\n\nfunction isTypeSubTypeOf(schema, maybeSubType, superType) {\n  // Equivalent type is a valid subtype\n  if (maybeSubType === superType) {\n    return true;\n  }\n\n  // If superType is non-null, maybeSubType must also be non-null.\n  if (superType instanceof _definition.GraphQLNonNull) {\n    if (maybeSubType instanceof _definition.GraphQLNonNull) {\n      return isTypeSubTypeOf(schema, maybeSubType.ofType, superType.ofType);\n    }\n    return false;\n  } else if (maybeSubType instanceof _definition.GraphQLNonNull) {\n    // If superType is nullable, maybeSubType may be non-null or nullable.\n    return isTypeSubTypeOf(schema, maybeSubType.ofType, superType);\n  }\n\n  // If superType type is a list, maybeSubType type must also be a list.\n  if (superType instanceof _definition.GraphQLList) {\n    if (maybeSubType instanceof _definition.GraphQLList) {\n      return isTypeSubTypeOf(schema, maybeSubType.ofType, superType.ofType);\n    }\n    return false;\n  } else if (maybeSubType instanceof _definition.GraphQLList) {\n    // If superType is not a list, maybeSubType must also be not a list.\n    return false;\n  }\n\n  // If superType type is an abstract type, maybeSubType type may be a currently\n  // possible object type.\n  if ((0, _definition.isAbstractType)(superType) && maybeSubType instanceof _definition.GraphQLObjectType && schema.isPossibleType(superType, maybeSubType)) {\n    return true;\n  }\n\n  // Otherwise, the child type is not a valid subtype of the parent type.\n  return false;\n}\n\n/**\n * Provided two composite types, determine if they \"overlap\". Two composite\n * types overlap when the Sets of possible concrete types for each intersect.\n *\n * This is often used to determine if a fragment of a given type could possibly\n * be visited in a context of another type.\n *\n * This function is commutative.\n */\nfunction doTypesOverlap(schema, typeA, typeB) {\n  // So flow is aware this is constant\n  var _typeB = typeB;\n\n  // Equivalent types overlap\n  if (typeA === _typeB) {\n    return true;\n  }\n\n  if ((0, _definition.isAbstractType)(typeA)) {\n    if ((0, _definition.isAbstractType)(_typeB)) {\n      // If both types are abstract, then determine if there is any intersection\n      // between possible concrete types of each.\n      return schema.getPossibleTypes(typeA).some(function (type) {\n        return schema.isPossibleType(_typeB, type);\n      });\n    }\n    // Determine if the latter type is a possible concrete type of the former.\n    return schema.isPossibleType(typeA, _typeB);\n  }\n\n  if ((0, _definition.isAbstractType)(_typeB)) {\n    // Determine if the former type is a possible concrete type of the latter.\n    return schema.isPossibleType(_typeB, typeA);\n  }\n\n  // Otherwise the types do not overlap.\n  return false;\n}","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.isValidLiteralValue = isValidLiteralValue;\n\nvar _printer = require('../language/printer');\n\nvar _kinds = require('../language/kinds');\n\nvar Kind = _interopRequireWildcard(_kinds);\n\nvar _definition = require('../type/definition');\n\nvar _invariant = require('../jsutils/invariant');\n\nvar _invariant2 = _interopRequireDefault(_invariant);\n\nvar _keyMap = require('../jsutils/keyMap');\n\nvar _keyMap2 = _interopRequireDefault(_keyMap);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\n/**\n * Utility for validators which determines if a value literal node is valid\n * given an input type.\n *\n * Note that this only validates literal values, variables are assumed to\n * provide values of the correct type.\n */\nfunction isValidLiteralValue(type, valueNode) {\n  // A value must be provided if the type is non-null.\n  if (type instanceof _definition.GraphQLNonNull) {\n    if (!valueNode || valueNode.kind === Kind.NULL) {\n      return ['Expected \"' + String(type) + '\", found null.'];\n    }\n    return isValidLiteralValue(type.ofType, valueNode);\n  }\n\n  if (!valueNode || valueNode.kind === Kind.NULL) {\n    return [];\n  }\n\n  // This function only tests literals, and assumes variables will provide\n  // values of the correct type.\n  if (valueNode.kind === Kind.VARIABLE) {\n    return [];\n  }\n\n  // Lists accept a non-list value as a list of one.\n  if (type instanceof _definition.GraphQLList) {\n    var itemType = type.ofType;\n    if (valueNode.kind === Kind.LIST) {\n      return valueNode.values.reduce(function (acc, item, index) {\n        var errors = isValidLiteralValue(itemType, item);\n        return acc.concat(errors.map(function (error) {\n          return 'In element #' + index + ': ' + error;\n        }));\n      }, []);\n    }\n    return isValidLiteralValue(itemType, valueNode);\n  }\n\n  // Input objects check each defined field and look for undefined fields.\n  if (type instanceof _definition.GraphQLInputObjectType) {\n    if (valueNode.kind !== Kind.OBJECT) {\n      return ['Expected \"' + type.name + '\", found not an object.'];\n    }\n    var fields = type.getFields();\n\n    var errors = [];\n\n    // Ensure every provided field is defined.\n    var fieldNodes = valueNode.fields;\n    fieldNodes.forEach(function (providedFieldNode) {\n      if (!fields[providedFieldNode.name.value]) {\n        errors.push('In field \"' + providedFieldNode.name.value + '\": Unknown field.');\n      }\n    });\n\n    // Ensure every defined field is valid.\n    var fieldNodeMap = (0, _keyMap2.default)(fieldNodes, function (fieldNode) {\n      return fieldNode.name.value;\n    });\n    Object.keys(fields).forEach(function (fieldName) {\n      var result = isValidLiteralValue(fields[fieldName].type, fieldNodeMap[fieldName] && fieldNodeMap[fieldName].value);\n      errors.push.apply(errors, result.map(function (error) {\n        return 'In field \"' + fieldName + '\": ' + error;\n      }));\n    });\n\n    return errors;\n  }\n\n  !(type instanceof _definition.GraphQLScalarType || type instanceof _definition.GraphQLEnumType) ? (0, _invariant2.default)(0, 'Must be input type') : void 0;\n\n  // Scalars determine if a literal values is valid.\n  if (!type.isValidLiteral(valueNode)) {\n    return ['Expected type \"' + type.name + '\", found ' + (0, _printer.print)(valueNode) + '.'];\n  }\n\n  return [];\n}\n/**\n *  Copyright (c) 2015, Facebook, Inc.\n *  All rights reserved.\n *\n *  This source code is licensed under the BSD-style license found in the\n *  LICENSE file in the root directory of this source tree. An additional grant\n *  of patent rights can be found in the PATENTS file in the same directory.\n */","import Observable from 'zen-observable-ts';\n\nimport { GraphQLRequest, Operation } from './types';\nimport { ApolloLink } from './link';\n\nimport { getOperationName } from 'apollo-utilities';\nimport { invariant, InvariantError } from 'ts-invariant';\nexport { getOperationName };\n\nexport function validateOperation(operation: GraphQLRequest): GraphQLRequest {\n  const OPERATION_FIELDS = [\n    'query',\n    'operationName',\n    'variables',\n    'extensions',\n    'context',\n  ];\n  for (let key of Object.keys(operation)) {\n    if (OPERATION_FIELDS.indexOf(key) < 0) {\n      throw new InvariantError(`illegal argument: ${key}`);\n    }\n  }\n\n  return operation;\n}\n\nexport class LinkError extends Error {\n  public link: ApolloLink;\n  constructor(message?: string, link?: ApolloLink) {\n    super(message);\n    this.link = link;\n  }\n}\n\nexport function isTerminating(link: ApolloLink): boolean {\n  return link.request.length <= 1;\n}\n\nexport function toPromise<R>(observable: Observable<R>): Promise<R> {\n  let completed = false;\n  return new Promise<R>((resolve, reject) => {\n    observable.subscribe({\n      next: data => {\n        if (completed) {\n          invariant.warn(\n            `Promise Wrapper does not support multiple results from Observable`,\n          );\n        } else {\n          completed = true;\n          resolve(data);\n        }\n      },\n      error: reject,\n    });\n  });\n}\n\n// backwards compat\nexport const makePromise = toPromise;\n\nexport function fromPromise<T>(promise: Promise<T>): Observable<T> {\n  return new Observable<T>(observer => {\n    promise\n      .then((value: T) => {\n        observer.next(value);\n        observer.complete();\n      })\n      .catch(observer.error.bind(observer));\n  });\n}\n\nexport function fromError<T>(errorValue: any): Observable<T> {\n  return new Observable<T>(observer => {\n    observer.error(errorValue);\n  });\n}\n\nexport function transformOperation(operation: GraphQLRequest): GraphQLRequest {\n  const transformedOperation: GraphQLRequest = {\n    variables: operation.variables || {},\n    extensions: operation.extensions || {},\n    operationName: operation.operationName,\n    query: operation.query,\n  };\n\n  // best guess at an operation name\n  if (!transformedOperation.operationName) {\n    transformedOperation.operationName =\n      typeof transformedOperation.query !== 'string'\n        ? getOperationName(transformedOperation.query)\n        : '';\n  }\n\n  return transformedOperation as Operation;\n}\n\nexport function createOperation(\n  starting: any,\n  operation: GraphQLRequest,\n): Operation {\n  let context = { ...starting };\n  const setContext = next => {\n    if (typeof next === 'function') {\n      context = { ...context, ...next(context) };\n    } else {\n      context = { ...context, ...next };\n    }\n  };\n  const getContext = () => ({ ...context });\n\n  Object.defineProperty(operation, 'setContext', {\n    enumerable: false,\n    value: setContext,\n  });\n\n  Object.defineProperty(operation, 'getContext', {\n    enumerable: false,\n    value: getContext,\n  });\n\n  Object.defineProperty(operation, 'toKey', {\n    enumerable: false,\n    value: () => getKey(operation),\n  });\n\n  return operation as Operation;\n}\n\nexport function getKey(operation: GraphQLRequest) {\n  // XXX We're assuming here that query and variables will be serialized in\n  // the same order, which might not always be true.\n  const { query, variables, operationName } = operation;\n  return JSON.stringify([operationName, query, variables]);\n}\n","import Observable from 'zen-observable-ts';\nimport { invariant, InvariantError } from 'ts-invariant';\n\nimport {\n  GraphQLRequest,\n  NextLink,\n  Operation,\n  RequestHandler,\n  FetchResult,\n} from './types';\n\nimport {\n  validateOperation,\n  isTerminating,\n  LinkError,\n  transformOperation,\n  createOperation,\n} from './linkUtils';\n\nfunction passthrough(op, forward) {\n  return forward ? forward(op) : Observable.of();\n}\n\nfunction toLink(handler: RequestHandler | ApolloLink) {\n  return typeof handler === 'function' ? new ApolloLink(handler) : handler;\n}\n\nexport function empty(): ApolloLink {\n  return new ApolloLink(() => Observable.of());\n}\n\nexport function from(links: ApolloLink[]): ApolloLink {\n  if (links.length === 0) return empty();\n  return links.map(toLink).reduce((x, y) => x.concat(y));\n}\n\nexport function split(\n  test: (op: Operation) => boolean,\n  left: ApolloLink | RequestHandler,\n  right?: ApolloLink | RequestHandler,\n): ApolloLink {\n  const leftLink = toLink(left);\n  const rightLink = toLink(right || new ApolloLink(passthrough));\n\n  if (isTerminating(leftLink) && isTerminating(rightLink)) {\n    return new ApolloLink(operation => {\n      return test(operation)\n        ? leftLink.request(operation) || Observable.of()\n        : rightLink.request(operation) || Observable.of();\n    });\n  } else {\n    return new ApolloLink((operation, forward) => {\n      return test(operation)\n        ? leftLink.request(operation, forward) || Observable.of()\n        : rightLink.request(operation, forward) || Observable.of();\n    });\n  }\n}\n\n// join two Links together\nexport const concat = (\n  first: ApolloLink | RequestHandler,\n  second: ApolloLink | RequestHandler,\n) => {\n  const firstLink = toLink(first);\n  if (isTerminating(firstLink)) {\n    invariant.warn(\n      new LinkError(\n        `You are calling concat on a terminating link, which will have no effect`,\n        firstLink,\n      ),\n    );\n    return firstLink;\n  }\n  const nextLink = toLink(second);\n\n  if (isTerminating(nextLink)) {\n    return new ApolloLink(\n      operation =>\n        firstLink.request(\n          operation,\n          op => nextLink.request(op) || Observable.of(),\n        ) || Observable.of(),\n    );\n  } else {\n    return new ApolloLink((operation, forward) => {\n      return (\n        firstLink.request(operation, op => {\n          return nextLink.request(op, forward) || Observable.of();\n        }) || Observable.of()\n      );\n    });\n  }\n};\n\nexport class ApolloLink {\n  public static empty = empty;\n  public static from = from;\n  public static split = split;\n  public static execute = execute;\n\n  constructor(request?: RequestHandler) {\n    if (request) this.request = request;\n  }\n\n  public split(\n    test: (op: Operation) => boolean,\n    left: ApolloLink | RequestHandler,\n    right?: ApolloLink | RequestHandler,\n  ): ApolloLink {\n    return this.concat(split(test, left, right || new ApolloLink(passthrough)));\n  }\n\n  public concat(next: ApolloLink | RequestHandler): ApolloLink {\n    return concat(this, next);\n  }\n\n  public request(\n    operation: Operation,\n    forward?: NextLink,\n  ): Observable<FetchResult> | null {\n    throw new InvariantError('request is not implemented');\n  }\n}\n\nexport function execute(\n  link: ApolloLink,\n  operation: GraphQLRequest,\n): Observable<FetchResult> {\n  return (\n    link.request(\n      createOperation(\n        operation.context,\n        transformOperation(validateOperation(operation)),\n      ),\n    ) || Observable.of()\n  );\n}\n","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getLocation = getLocation;\n\n\n/**\n * Takes a Source and a UTF-8 character offset, and returns the corresponding\n * line and column as a SourceLocation.\n */\n\n/**\n *  Copyright (c) 2015, Facebook, Inc.\n *  All rights reserved.\n *\n *  This source code is licensed under the BSD-style license found in the\n *  LICENSE file in the root directory of this source tree. An additional grant\n *  of patent rights can be found in the PATENTS file in the same directory.\n */\n\nfunction getLocation(source, position) {\n  var lineRegexp = /\\r\\n|[\\n\\r]/g;\n  var line = 1;\n  var column = position + 1;\n  var match = void 0;\n  while ((match = lineRegexp.exec(source.body)) && match.index < position) {\n    line += 1;\n    column = position + 1 - (match.index + match[0].length);\n  }\n  return { line: line, column: column };\n}\n\n/**\n * Represents a location in a Source.\n */","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.TokenKind = undefined;\nexports.createLexer = createLexer;\nexports.getTokenDesc = getTokenDesc;\n\nvar _error = require('../error');\n\n/**\n * Given a Source object, this returns a Lexer for that source.\n * A Lexer is a stateful stream generator in that every time\n * it is advanced, it returns the next token in the Source. Assuming the\n * source lexes, the final Token emitted by the lexer will be of kind\n * EOF, after which the lexer will repeatedly return the same EOF token\n * whenever called.\n */\nfunction createLexer(source, options) {\n  var startOfFileToken = new Tok(SOF, 0, 0, 0, 0, null);\n  var lexer = {\n    source: source,\n    options: options,\n    lastToken: startOfFileToken,\n    token: startOfFileToken,\n    line: 1,\n    lineStart: 0,\n    advance: advanceLexer\n  };\n  return lexer;\n} /*  /\n  /**\n   *  Copyright (c) 2015, Facebook, Inc.\n   *  All rights reserved.\n   *\n   *  This source code is licensed under the BSD-style license found in the\n   *  LICENSE file in the root directory of this source tree. An additional grant\n   *  of patent rights can be found in the PATENTS file in the same directory.\n   */\n\nfunction advanceLexer() {\n  var token = this.lastToken = this.token;\n  if (token.kind !== EOF) {\n    do {\n      token = token.next = readToken(this, token);\n    } while (token.kind === COMMENT);\n    this.token = token;\n  }\n  return token;\n}\n\n/**\n * The return type of createLexer.\n */\n\n\n// Each kind of token.\nvar SOF = '<SOF>';\nvar EOF = '<EOF>';\nvar BANG = '!';\nvar DOLLAR = '$';\nvar PAREN_L = '(';\nvar PAREN_R = ')';\nvar SPREAD = '...';\nvar COLON = ':';\nvar EQUALS = '=';\nvar AT = '@';\nvar BRACKET_L = '[';\nvar BRACKET_R = ']';\nvar BRACE_L = '{';\nvar PIPE = '|';\nvar BRACE_R = '}';\nvar NAME = 'Name';\nvar INT = 'Int';\nvar FLOAT = 'Float';\nvar STRING = 'String';\nvar COMMENT = 'Comment';\n\n/**\n * An exported enum describing the different kinds of tokens that the\n * lexer emits.\n */\nvar TokenKind = exports.TokenKind = {\n  SOF: SOF,\n  EOF: EOF,\n  BANG: BANG,\n  DOLLAR: DOLLAR,\n  PAREN_L: PAREN_L,\n  PAREN_R: PAREN_R,\n  SPREAD: SPREAD,\n  COLON: COLON,\n  EQUALS: EQUALS,\n  AT: AT,\n  BRACKET_L: BRACKET_L,\n  BRACKET_R: BRACKET_R,\n  BRACE_L: BRACE_L,\n  PIPE: PIPE,\n  BRACE_R: BRACE_R,\n  NAME: NAME,\n  INT: INT,\n  FLOAT: FLOAT,\n  STRING: STRING,\n  COMMENT: COMMENT\n};\n\n/**\n * A helper function to describe a token as a string for debugging\n */\nfunction getTokenDesc(token) {\n  var value = token.value;\n  return value ? token.kind + ' \"' + value + '\"' : token.kind;\n}\n\nvar charCodeAt = String.prototype.charCodeAt;\nvar slice = String.prototype.slice;\n\n/**\n * Helper function for constructing the Token object.\n */\nfunction Tok(kind, start, end, line, column, prev, value) {\n  this.kind = kind;\n  this.start = start;\n  this.end = end;\n  this.line = line;\n  this.column = column;\n  this.value = value;\n  this.prev = prev;\n  this.next = null;\n}\n\n// Print a simplified form when appearing in JSON/util.inspect.\nTok.prototype.toJSON = Tok.prototype.inspect = function toJSON() {\n  return {\n    kind: this.kind,\n    value: this.value,\n    line: this.line,\n    column: this.column\n  };\n};\n\nfunction printCharCode(code) {\n  return (\n    // NaN/undefined represents access beyond the end of the file.\n    isNaN(code) ? EOF :\n    // Trust JSON for ASCII.\n    code < 0x007F ? JSON.stringify(String.fromCharCode(code)) :\n    // Otherwise print the escaped form.\n    '\"\\\\u' + ('00' + code.toString(16).toUpperCase()).slice(-4) + '\"'\n  );\n}\n\n/**\n * Gets the next token from the source starting at the given position.\n *\n * This skips over whitespace and comments until it finds the next lexable\n * token, then lexes punctuators immediately or calls the appropriate helper\n * function for more complicated tokens.\n */\nfunction readToken(lexer, prev) {\n  var source = lexer.source;\n  var body = source.body;\n  var bodyLength = body.length;\n\n  var position = positionAfterWhitespace(body, prev.end, lexer);\n  var line = lexer.line;\n  var col = 1 + position - lexer.lineStart;\n\n  if (position >= bodyLength) {\n    return new Tok(EOF, bodyLength, bodyLength, line, col, prev);\n  }\n\n  var code = charCodeAt.call(body, position);\n\n  // SourceCharacter\n  if (code < 0x0020 && code !== 0x0009 && code !== 0x000A && code !== 0x000D) {\n    throw (0, _error.syntaxError)(source, position, 'Cannot contain the invalid character ' + printCharCode(code) + '.');\n  }\n\n  switch (code) {\n    // !\n    case 33:\n      return new Tok(BANG, position, position + 1, line, col, prev);\n    // #\n    case 35:\n      return readComment(source, position, line, col, prev);\n    // $\n    case 36:\n      return new Tok(DOLLAR, position, position + 1, line, col, prev);\n    // (\n    case 40:\n      return new Tok(PAREN_L, position, position + 1, line, col, prev);\n    // )\n    case 41:\n      return new Tok(PAREN_R, position, position + 1, line, col, prev);\n    // .\n    case 46:\n      if (charCodeAt.call(body, position + 1) === 46 && charCodeAt.call(body, position + 2) === 46) {\n        return new Tok(SPREAD, position, position + 3, line, col, prev);\n      }\n      break;\n    // :\n    case 58:\n      return new Tok(COLON, position, position + 1, line, col, prev);\n    // =\n    case 61:\n      return new Tok(EQUALS, position, position + 1, line, col, prev);\n    // @\n    case 64:\n      return new Tok(AT, position, position + 1, line, col, prev);\n    // [\n    case 91:\n      return new Tok(BRACKET_L, position, position + 1, line, col, prev);\n    // ]\n    case 93:\n      return new Tok(BRACKET_R, position, position + 1, line, col, prev);\n    // {\n    case 123:\n      return new Tok(BRACE_L, position, position + 1, line, col, prev);\n    // |\n    case 124:\n      return new Tok(PIPE, position, position + 1, line, col, prev);\n    // }\n    case 125:\n      return new Tok(BRACE_R, position, position + 1, line, col, prev);\n    // A-Z _ a-z\n    case 65:case 66:case 67:case 68:case 69:case 70:case 71:case 72:\n    case 73:case 74:case 75:case 76:case 77:case 78:case 79:case 80:\n    case 81:case 82:case 83:case 84:case 85:case 86:case 87:case 88:\n    case 89:case 90:\n    case 95:\n    case 97:case 98:case 99:case 100:case 101:case 102:case 103:case 104:\n    case 105:case 106:case 107:case 108:case 109:case 110:case 111:\n    case 112:case 113:case 114:case 115:case 116:case 117:case 118:\n    case 119:case 120:case 121:case 122:\n      return readName(source, position, line, col, prev);\n    // - 0-9\n    case 45:\n    case 48:case 49:case 50:case 51:case 52:\n    case 53:case 54:case 55:case 56:case 57:\n      return readNumber(source, position, code, line, col, prev);\n    // \"\n    case 34:\n      return readString(source, position, line, col, prev);\n  }\n\n  throw (0, _error.syntaxError)(source, position, unexpectedCharacterMessage(code));\n}\n\n/**\n * Report a message that an unexpected character was encountered.\n */\nfunction unexpectedCharacterMessage(code) {\n  if (code === 39) {\n    // '\n    return 'Unexpected single quote character (\\'), did you mean to use ' + 'a double quote (\")?';\n  }\n\n  return 'Cannot parse the unexpected character ' + printCharCode(code) + '.';\n}\n\n/**\n * Reads from body starting at startPosition until it finds a non-whitespace\n * or commented character, then returns the position of that character for\n * lexing.\n */\nfunction positionAfterWhitespace(body, startPosition, lexer) {\n  var bodyLength = body.length;\n  var position = startPosition;\n  while (position < bodyLength) {\n    var code = charCodeAt.call(body, position);\n    // tab | space | comma | BOM\n    if (code === 9 || code === 32 || code === 44 || code === 0xFEFF) {\n      ++position;\n    } else if (code === 10) {\n      // new line\n      ++position;\n      ++lexer.line;\n      lexer.lineStart = position;\n    } else if (code === 13) {\n      // carriage return\n      if (charCodeAt.call(body, position + 1) === 10) {\n        position += 2;\n      } else {\n        ++position;\n      }\n      ++lexer.line;\n      lexer.lineStart = position;\n    } else {\n      break;\n    }\n  }\n  return position;\n}\n\n/**\n * Reads a comment token from the source file.\n *\n * #[\\u0009\\u0020-\\uFFFF]*\n */\nfunction readComment(source, start, line, col, prev) {\n  var body = source.body;\n  var code = void 0;\n  var position = start;\n\n  do {\n    code = charCodeAt.call(body, ++position);\n  } while (code !== null && (\n  // SourceCharacter but not LineTerminator\n  code > 0x001F || code === 0x0009));\n\n  return new Tok(COMMENT, start, position, line, col, prev, slice.call(body, start + 1, position));\n}\n\n/**\n * Reads a number token from the source file, either a float\n * or an int depending on whether a decimal point appears.\n *\n * Int:   -?(0|[1-9][0-9]*)\n * Float: -?(0|[1-9][0-9]*)(\\.[0-9]+)?((E|e)(+|-)?[0-9]+)?\n */\nfunction readNumber(source, start, firstCode, line, col, prev) {\n  var body = source.body;\n  var code = firstCode;\n  var position = start;\n  var isFloat = false;\n\n  if (code === 45) {\n    // -\n    code = charCodeAt.call(body, ++position);\n  }\n\n  if (code === 48) {\n    // 0\n    code = charCodeAt.call(body, ++position);\n    if (code >= 48 && code <= 57) {\n      throw (0, _error.syntaxError)(source, position, 'Invalid number, unexpected digit after 0: ' + printCharCode(code) + '.');\n    }\n  } else {\n    position = readDigits(source, position, code);\n    code = charCodeAt.call(body, position);\n  }\n\n  if (code === 46) {\n    // .\n    isFloat = true;\n\n    code = charCodeAt.call(body, ++position);\n    position = readDigits(source, position, code);\n    code = charCodeAt.call(body, position);\n  }\n\n  if (code === 69 || code === 101) {\n    // E e\n    isFloat = true;\n\n    code = charCodeAt.call(body, ++position);\n    if (code === 43 || code === 45) {\n      // + -\n      code = charCodeAt.call(body, ++position);\n    }\n    position = readDigits(source, position, code);\n  }\n\n  return new Tok(isFloat ? FLOAT : INT, start, position, line, col, prev, slice.call(body, start, position));\n}\n\n/**\n * Returns the new position in the source after reading digits.\n */\nfunction readDigits(source, start, firstCode) {\n  var body = source.body;\n  var position = start;\n  var code = firstCode;\n  if (code >= 48 && code <= 57) {\n    // 0 - 9\n    do {\n      code = charCodeAt.call(body, ++position);\n    } while (code >= 48 && code <= 57); // 0 - 9\n    return position;\n  }\n  throw (0, _error.syntaxError)(source, position, 'Invalid number, expected digit but got: ' + printCharCode(code) + '.');\n}\n\n/**\n * Reads a string token from the source file.\n *\n * \"([^\"\\\\\\u000A\\u000D]|(\\\\(u[0-9a-fA-F]{4}|[\"\\\\/bfnrt])))*\"\n */\nfunction readString(source, start, line, col, prev) {\n  var body = source.body;\n  var position = start + 1;\n  var chunkStart = position;\n  var code = 0;\n  var value = '';\n\n  while (position < body.length && (code = charCodeAt.call(body, position)) !== null &&\n  // not LineTerminator\n  code !== 0x000A && code !== 0x000D &&\n  // not Quote (\")\n  code !== 34) {\n    // SourceCharacter\n    if (code < 0x0020 && code !== 0x0009) {\n      throw (0, _error.syntaxError)(source, position, 'Invalid character within String: ' + printCharCode(code) + '.');\n    }\n\n    ++position;\n    if (code === 92) {\n      // \\\n      value += slice.call(body, chunkStart, position - 1);\n      code = charCodeAt.call(body, position);\n      switch (code) {\n        case 34:\n          value += '\"';break;\n        case 47:\n          value += '/';break;\n        case 92:\n          value += '\\\\';break;\n        case 98:\n          value += '\\b';break;\n        case 102:\n          value += '\\f';break;\n        case 110:\n          value += '\\n';break;\n        case 114:\n          value += '\\r';break;\n        case 116:\n          value += '\\t';break;\n        case 117:\n          // u\n          var charCode = uniCharCode(charCodeAt.call(body, position + 1), charCodeAt.call(body, position + 2), charCodeAt.call(body, position + 3), charCodeAt.call(body, position + 4));\n          if (charCode < 0) {\n            throw (0, _error.syntaxError)(source, position, 'Invalid character escape sequence: ' + ('\\\\u' + body.slice(position + 1, position + 5) + '.'));\n          }\n          value += String.fromCharCode(charCode);\n          position += 4;\n          break;\n        default:\n          throw (0, _error.syntaxError)(source, position, 'Invalid character escape sequence: \\\\' + String.fromCharCode(code) + '.');\n      }\n      ++position;\n      chunkStart = position;\n    }\n  }\n\n  if (code !== 34) {\n    // quote (\")\n    throw (0, _error.syntaxError)(source, position, 'Unterminated string.');\n  }\n\n  value += slice.call(body, chunkStart, position);\n  return new Tok(STRING, start, position + 1, line, col, prev, value);\n}\n\n/**\n * Converts four hexidecimal chars to the integer that the\n * string represents. For example, uniCharCode('0','0','0','f')\n * will return 15, and uniCharCode('0','0','f','f') returns 255.\n *\n * Returns a negative number on error, if a char was invalid.\n *\n * This is implemented by noting that char2hex() returns -1 on error,\n * which means the result of ORing the char2hex() will also be negative.\n */\nfunction uniCharCode(a, b, c, d) {\n  return char2hex(a) << 12 | char2hex(b) << 8 | char2hex(c) << 4 | char2hex(d);\n}\n\n/**\n * Converts a hex character to its integer value.\n * '0' becomes 0, '9' becomes 9\n * 'A' becomes 10, 'F' becomes 15\n * 'a' becomes 10, 'f' becomes 15\n *\n * Returns -1 on error.\n */\nfunction char2hex(a) {\n  return a >= 48 && a <= 57 ? a - 48 : // 0-9\n  a >= 65 && a <= 70 ? a - 55 : // A-F\n  a >= 97 && a <= 102 ? a - 87 : // a-f\n  -1;\n}\n\n/**\n * Reads an alphanumeric + underscore name from the source.\n *\n * [_A-Za-z][_0-9A-Za-z]*\n */\nfunction readName(source, position, line, col, prev) {\n  var body = source.body;\n  var bodyLength = body.length;\n  var end = position + 1;\n  var code = 0;\n  while (end !== bodyLength && (code = charCodeAt.call(body, end)) !== null && (code === 95 || // _\n  code >= 48 && code <= 57 || // 0-9\n  code >= 65 && code <= 90 || // A-Z\n  code >= 97 && code <= 122 // a-z\n  )) {\n    ++end;\n  }\n  return new Tok(NAME, position, end, line, col, prev, slice.call(body, position, end));\n}","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.assertValidName = assertValidName;\nexports.formatWarning = formatWarning;\n\n/**\n *  Copyright (c) 2015, Facebook, Inc.\n *  All rights reserved.\n *\n *  This source code is licensed under the BSD-style license found in the\n *  LICENSE file in the root directory of this source tree. An additional grant\n *  of patent rights can be found in the PATENTS file in the same directory.\n */\n\nvar NAME_RX = /^[_a-zA-Z][_a-zA-Z0-9]*$/;\nvar ERROR_PREFIX_RX = /^Error: /;\n\n// Silences warnings if an environment flag is enabled\nvar noNameWarning = Boolean(process && process.env && process.env.GRAPHQL_NO_NAME_WARNING);\n\n// Ensures console warnings are only issued once.\nvar hasWarnedAboutDunder = false;\n\n/**\n * Upholds the spec rules about naming.\n */\nfunction assertValidName(name, isIntrospection) {\n  if (!name || typeof name !== 'string') {\n    throw new Error('Must be named. Unexpected name: ' + name + '.');\n  }\n  if (!isIntrospection && !hasWarnedAboutDunder && !noNameWarning && name.slice(0, 2) === '__') {\n    hasWarnedAboutDunder = true;\n    /* eslint-disable no-console */\n    if (console && console.warn) {\n      var error = new Error('Name \"' + name + '\" must not begin with \"__\", which is reserved by ' + 'GraphQL introspection. In a future release of graphql this will ' + 'become a hard error.');\n      console.warn(formatWarning(error));\n    }\n    /* eslint-enable no-console */\n  }\n  if (!NAME_RX.test(name)) {\n    throw new Error('Names must match /^[_a-zA-Z][_a-zA-Z0-9]*$/ but \"' + name + '\" does not.');\n  }\n}\n\n/**\n * Returns a human-readable warning based an the supplied Error object,\n * including stack trace information if available.\n */\nfunction formatWarning(error) {\n  var formatted = '';\n  var errorString = String(error).replace(ERROR_PREFIX_RX, '');\n  var stack = error.stack;\n  if (stack) {\n    formatted = stack.replace(ERROR_PREFIX_RX, '');\n  }\n  if (formatted.indexOf(errorString) === -1) {\n    formatted = errorString + '\\n' + formatted;\n  }\n  return formatted.trim();\n}","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n/**\n *  Copyright (c) 2015, Facebook, Inc.\n *  All rights reserved.\n *\n *  This source code is licensed under the BSD-style license found in the\n *  LICENSE file in the root directory of this source tree. An additional grant\n *  of patent rights can be found in the PATENTS file in the same directory.\n */\n\nexports.astFromValue = astFromValue;\n\nvar _iterall = require('iterall');\n\nvar _invariant = require('../jsutils/invariant');\n\nvar _invariant2 = _interopRequireDefault(_invariant);\n\nvar _isNullish = require('../jsutils/isNullish');\n\nvar _isNullish2 = _interopRequireDefault(_isNullish);\n\nvar _isInvalid = require('../jsutils/isInvalid');\n\nvar _isInvalid2 = _interopRequireDefault(_isInvalid);\n\nvar _kinds = require('../language/kinds');\n\nvar Kind = _interopRequireWildcard(_kinds);\n\nvar _definition = require('../type/definition');\n\nvar _scalars = require('../type/scalars');\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Produces a GraphQL Value AST given a JavaScript value.\n *\n * A GraphQL type must be provided, which will be used to interpret different\n * JavaScript values.\n *\n * | JSON Value    | GraphQL Value        |\n * | ------------- | -------------------- |\n * | Object        | Input Object         |\n * | Array         | List                 |\n * | Boolean       | Boolean              |\n * | String        | String / Enum Value  |\n * | Number        | Int / Float          |\n * | Mixed         | Enum Value           |\n * | null          | NullValue            |\n *\n */\nfunction astFromValue(value, type) {\n  // Ensure flow knows that we treat function params as const.\n  var _value = value;\n\n  if (type instanceof _definition.GraphQLNonNull) {\n    var astValue = astFromValue(_value, type.ofType);\n    if (astValue && astValue.kind === Kind.NULL) {\n      return null;\n    }\n    return astValue;\n  }\n\n  // only explicit null, not undefined, NaN\n  if (_value === null) {\n    return { kind: Kind.NULL };\n  }\n\n  // undefined, NaN\n  if ((0, _isInvalid2.default)(_value)) {\n    return null;\n  }\n\n  // Convert JavaScript array to GraphQL list. If the GraphQLType is a list, but\n  // the value is not an array, convert the value using the list's item type.\n  if (type instanceof _definition.GraphQLList) {\n    var itemType = type.ofType;\n    if ((0, _iterall.isCollection)(_value)) {\n      var valuesNodes = [];\n      (0, _iterall.forEach)(_value, function (item) {\n        var itemNode = astFromValue(item, itemType);\n        if (itemNode) {\n          valuesNodes.push(itemNode);\n        }\n      });\n      return { kind: Kind.LIST, values: valuesNodes };\n    }\n    return astFromValue(_value, itemType);\n  }\n\n  // Populate the fields of the input object by creating ASTs from each value\n  // in the JavaScript object according to the fields in the input type.\n  if (type instanceof _definition.GraphQLInputObjectType) {\n    if (_value === null || (typeof _value === 'undefined' ? 'undefined' : _typeof(_value)) !== 'object') {\n      return null;\n    }\n    var fields = type.getFields();\n    var fieldNodes = [];\n    Object.keys(fields).forEach(function (fieldName) {\n      var fieldType = fields[fieldName].type;\n      var fieldValue = astFromValue(_value[fieldName], fieldType);\n      if (fieldValue) {\n        fieldNodes.push({\n          kind: Kind.OBJECT_FIELD,\n          name: { kind: Kind.NAME, value: fieldName },\n          value: fieldValue\n        });\n      }\n    });\n    return { kind: Kind.OBJECT, fields: fieldNodes };\n  }\n\n  !(type instanceof _definition.GraphQLScalarType || type instanceof _definition.GraphQLEnumType) ? (0, _invariant2.default)(0, 'Must provide Input Type, cannot use: ' + String(type)) : void 0;\n\n  // Since value is an internally represented value, it must be serialized\n  // to an externally represented value before converting into an AST.\n  var serialized = type.serialize(_value);\n  if ((0, _isNullish2.default)(serialized)) {\n    return null;\n  }\n\n  // Others serialize based on their corresponding JavaScript scalar types.\n  if (typeof serialized === 'boolean') {\n    return { kind: Kind.BOOLEAN, value: serialized };\n  }\n\n  // JavaScript numbers can be Int or Float values.\n  if (typeof serialized === 'number') {\n    var stringNum = String(serialized);\n    return (/^[0-9]+$/.test(stringNum) ? { kind: Kind.INT, value: stringNum } : { kind: Kind.FLOAT, value: stringNum }\n    );\n  }\n\n  if (typeof serialized === 'string') {\n    // Enum types use Enum literals.\n    if (type instanceof _definition.GraphQLEnumType) {\n      return { kind: Kind.ENUM, value: serialized };\n    }\n\n    // ID types can use Int literals.\n    if (type === _scalars.GraphQLID && /^[0-9]+$/.test(serialized)) {\n      return { kind: Kind.INT, value: serialized };\n    }\n\n    // Use JSON stringify, which uses the same string encoding as GraphQL,\n    // then remove the quotes.\n    return {\n      kind: Kind.STRING,\n      value: JSON.stringify(serialized).slice(1, -1)\n    };\n  }\n\n  throw new TypeError('Cannot convert value to AST: ' + String(serialized));\n}","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.TypeInfo = undefined;\n\nvar _kinds = require('../language/kinds');\n\nvar Kind = _interopRequireWildcard(_kinds);\n\nvar _definition = require('../type/definition');\n\nvar _introspection = require('../type/introspection');\n\nvar _typeFromAST = require('./typeFromAST');\n\nvar _find = require('../jsutils/find');\n\nvar _find2 = _interopRequireDefault(_find);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n/**\n *  Copyright (c) 2015, Facebook, Inc.\n *  All rights reserved.\n *\n *  This source code is licensed under the BSD-style license found in the\n *  LICENSE file in the root directory of this source tree. An additional grant\n *  of patent rights can be found in the PATENTS file in the same directory.\n */\n\n/**\n * TypeInfo is a utility class which, given a GraphQL schema, can keep track\n * of the current field and type definitions at any point in a GraphQL document\n * AST during a recursive descent by calling `enter(node)` and `leave(node)`.\n */\nvar TypeInfo = exports.TypeInfo = function () {\n  function TypeInfo(schema,\n  // NOTE: this experimental optional second parameter is only needed in order\n  // to support non-spec-compliant codebases. You should never need to use it.\n  getFieldDefFn) {\n    _classCallCheck(this, TypeInfo);\n\n    this._schema = schema;\n    this._typeStack = [];\n    this._parentTypeStack = [];\n    this._inputTypeStack = [];\n    this._fieldDefStack = [];\n    this._directive = null;\n    this._argument = null;\n    this._enumValue = null;\n    this._getFieldDef = getFieldDefFn || getFieldDef;\n  }\n\n  TypeInfo.prototype.getType = function getType() {\n    if (this._typeStack.length > 0) {\n      return this._typeStack[this._typeStack.length - 1];\n    }\n  };\n\n  TypeInfo.prototype.getParentType = function getParentType() {\n    if (this._parentTypeStack.length > 0) {\n      return this._parentTypeStack[this._parentTypeStack.length - 1];\n    }\n  };\n\n  TypeInfo.prototype.getInputType = function getInputType() {\n    if (this._inputTypeStack.length > 0) {\n      return this._inputTypeStack[this._inputTypeStack.length - 1];\n    }\n  };\n\n  TypeInfo.prototype.getFieldDef = function getFieldDef() {\n    if (this._fieldDefStack.length > 0) {\n      return this._fieldDefStack[this._fieldDefStack.length - 1];\n    }\n  };\n\n  TypeInfo.prototype.getDirective = function getDirective() {\n    return this._directive;\n  };\n\n  TypeInfo.prototype.getArgument = function getArgument() {\n    return this._argument;\n  };\n\n  TypeInfo.prototype.getEnumValue = function getEnumValue() {\n    return this._enumValue;\n  };\n\n  // Flow does not yet handle this case.\n\n\n  TypeInfo.prototype.enter = function enter(node /* ASTNode */) {\n    var schema = this._schema;\n    switch (node.kind) {\n      case Kind.SELECTION_SET:\n        var namedType = (0, _definition.getNamedType)(this.getType());\n        this._parentTypeStack.push((0, _definition.isCompositeType)(namedType) ? namedType : undefined);\n        break;\n      case Kind.FIELD:\n        var parentType = this.getParentType();\n        var fieldDef = void 0;\n        if (parentType) {\n          fieldDef = this._getFieldDef(schema, parentType, node);\n        }\n        this._fieldDefStack.push(fieldDef);\n        this._typeStack.push(fieldDef && fieldDef.type);\n        break;\n      case Kind.DIRECTIVE:\n        this._directive = schema.getDirective(node.name.value);\n        break;\n      case Kind.OPERATION_DEFINITION:\n        var type = void 0;\n        if (node.operation === 'query') {\n          type = schema.getQueryType();\n        } else if (node.operation === 'mutation') {\n          type = schema.getMutationType();\n        } else if (node.operation === 'subscription') {\n          type = schema.getSubscriptionType();\n        }\n        this._typeStack.push(type);\n        break;\n      case Kind.INLINE_FRAGMENT:\n      case Kind.FRAGMENT_DEFINITION:\n        var typeConditionAST = node.typeCondition;\n        var outputType = typeConditionAST ? (0, _typeFromAST.typeFromAST)(schema, typeConditionAST) : this.getType();\n        this._typeStack.push((0, _definition.isOutputType)(outputType) ? outputType : undefined);\n        break;\n      case Kind.VARIABLE_DEFINITION:\n        var inputType = (0, _typeFromAST.typeFromAST)(schema, node.type);\n        this._inputTypeStack.push((0, _definition.isInputType)(inputType) ? inputType : undefined);\n        break;\n      case Kind.ARGUMENT:\n        var argDef = void 0;\n        var argType = void 0;\n        var fieldOrDirective = this.getDirective() || this.getFieldDef();\n        if (fieldOrDirective) {\n          argDef = (0, _find2.default)(fieldOrDirective.args, function (arg) {\n            return arg.name === node.name.value;\n          });\n          if (argDef) {\n            argType = argDef.type;\n          }\n        }\n        this._argument = argDef;\n        this._inputTypeStack.push(argType);\n        break;\n      case Kind.LIST:\n        var listType = (0, _definition.getNullableType)(this.getInputType());\n        this._inputTypeStack.push(listType instanceof _definition.GraphQLList ? listType.ofType : undefined);\n        break;\n      case Kind.OBJECT_FIELD:\n        var objectType = (0, _definition.getNamedType)(this.getInputType());\n        var fieldType = void 0;\n        if (objectType instanceof _definition.GraphQLInputObjectType) {\n          var inputField = objectType.getFields()[node.name.value];\n          fieldType = inputField ? inputField.type : undefined;\n        }\n        this._inputTypeStack.push(fieldType);\n        break;\n      case Kind.ENUM:\n        var enumType = (0, _definition.getNamedType)(this.getInputType());\n        var enumValue = void 0;\n        if (enumType instanceof _definition.GraphQLEnumType) {\n          enumValue = enumType.getValue(node.value);\n        }\n        this._enumValue = enumValue;\n        break;\n    }\n  };\n\n  TypeInfo.prototype.leave = function leave(node) {\n    switch (node.kind) {\n      case Kind.SELECTION_SET:\n        this._parentTypeStack.pop();\n        break;\n      case Kind.FIELD:\n        this._fieldDefStack.pop();\n        this._typeStack.pop();\n        break;\n      case Kind.DIRECTIVE:\n        this._directive = null;\n        break;\n      case Kind.OPERATION_DEFINITION:\n      case Kind.INLINE_FRAGMENT:\n      case Kind.FRAGMENT_DEFINITION:\n        this._typeStack.pop();\n        break;\n      case Kind.VARIABLE_DEFINITION:\n        this._inputTypeStack.pop();\n        break;\n      case Kind.ARGUMENT:\n        this._argument = null;\n        this._inputTypeStack.pop();\n        break;\n      case Kind.LIST:\n      case Kind.OBJECT_FIELD:\n        this._inputTypeStack.pop();\n        break;\n      case Kind.ENUM:\n        this._enumValue = null;\n        break;\n    }\n  };\n\n  return TypeInfo;\n}();\n\n/**\n * Not exactly the same as the executor's definition of getFieldDef, in this\n * statically evaluated environment we do not always have an Object type,\n * and need to handle Interface and Union types.\n */\n\n\nfunction getFieldDef(schema, parentType, fieldNode) {\n  var name = fieldNode.name.value;\n  if (name === _introspection.SchemaMetaFieldDef.name && schema.getQueryType() === parentType) {\n    return _introspection.SchemaMetaFieldDef;\n  }\n  if (name === _introspection.TypeMetaFieldDef.name && schema.getQueryType() === parentType) {\n    return _introspection.TypeMetaFieldDef;\n  }\n  if (name === _introspection.TypeNameMetaFieldDef.name && (0, _definition.isCompositeType)(parentType)) {\n    return _introspection.TypeNameMetaFieldDef;\n  }\n  if (parentType instanceof _definition.GraphQLObjectType || parentType instanceof _definition.GraphQLInterfaceType) {\n    return parentType.getFields()[name];\n  }\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = suggestionList;\n\n/**\n *  Copyright (c) 2015, Facebook, Inc.\n *  All rights reserved.\n *\n *  This source code is licensed under the BSD-style license found in the\n *  LICENSE file in the root directory of this source tree. An additional grant\n *  of patent rights can be found in the PATENTS file in the same directory.\n */\n\n/**\n * Given an invalid input string and a list of valid options, returns a filtered\n * list of valid options sorted based on their similarity with the input.\n */\nfunction suggestionList(input, options) {\n  var optionsByDistance = Object.create(null);\n  var oLength = options.length;\n  var inputThreshold = input.length / 2;\n  for (var i = 0; i < oLength; i++) {\n    var distance = lexicalDistance(input, options[i]);\n    var threshold = Math.max(inputThreshold, options[i].length / 2, 1);\n    if (distance <= threshold) {\n      optionsByDistance[options[i]] = distance;\n    }\n  }\n  return Object.keys(optionsByDistance).sort(function (a, b) {\n    return optionsByDistance[a] - optionsByDistance[b];\n  });\n}\n\n/**\n * Computes the lexical distance between strings A and B.\n *\n * The \"distance\" between two strings is given by counting the minimum number\n * of edits needed to transform string A into string B. An edit can be an\n * insertion, deletion, or substitution of a single character, or a swap of two\n * adjacent characters.\n *\n * This distance can be useful for detecting typos in input or sorting\n *\n * @param {string} a\n * @param {string} b\n * @return {int} distance in number of edits\n */\nfunction lexicalDistance(a, b) {\n  var i = void 0;\n  var j = void 0;\n  var d = [];\n  var aLength = a.length;\n  var bLength = b.length;\n\n  for (i = 0; i <= aLength; i++) {\n    d[i] = [i];\n  }\n\n  for (j = 1; j <= bLength; j++) {\n    d[0][j] = j;\n  }\n\n  for (i = 1; i <= aLength; i++) {\n    for (j = 1; j <= bLength; j++) {\n      var cost = a[i - 1] === b[j - 1] ? 0 : 1;\n\n      d[i][j] = Math.min(d[i - 1][j] + 1, d[i][j - 1] + 1, d[i - 1][j - 1] + cost);\n\n      if (i > 1 && j > 1 && a[i - 1] === b[j - 2] && a[i - 2] === b[j - 1]) {\n        d[i][j] = Math.min(d[i][j], d[i - 2][j - 2] + cost);\n      }\n    }\n  }\n\n  return d[aLength][bLength];\n}","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = quotedOrList;\n\n/**\n *  Copyright (c) 2015, Facebook, Inc.\n *  All rights reserved.\n *\n *  This source code is licensed under the BSD-style license found in the\n *  LICENSE file in the root directory of this source tree. An additional grant\n *  of patent rights can be found in the PATENTS file in the same directory.\n */\n\nvar MAX_LENGTH = 5;\n\n/**\n * Given [ A, B, C ] return '\"A\", \"B\", or \"C\"'.\n */\nfunction quotedOrList(items) {\n  var selected = items.slice(0, MAX_LENGTH);\n  return selected.map(function (item) {\n    return '\"' + item + '\"';\n  }).reduce(function (list, quoted, index) {\n    return list + (selected.length > 2 ? ', ' : ' ') + (index === selected.length - 1 ? 'or ' : '') + quoted;\n  });\n}","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.defaultFieldResolver = undefined;\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n/**\n *  Copyright (c) 2015, Facebook, Inc.\n *  All rights reserved.\n *\n *  This source code is licensed under the BSD-style license found in the\n *  LICENSE file in the root directory of this source tree. An additional grant\n *  of patent rights can be found in the PATENTS file in the same directory.\n */\n\nexports.execute = execute;\nexports.responsePathAsArray = responsePathAsArray;\nexports.addPath = addPath;\nexports.assertValidExecutionArguments = assertValidExecutionArguments;\nexports.buildExecutionContext = buildExecutionContext;\nexports.getOperationRootType = getOperationRootType;\nexports.collectFields = collectFields;\nexports.buildResolveInfo = buildResolveInfo;\nexports.resolveFieldValueOrError = resolveFieldValueOrError;\nexports.getFieldDef = getFieldDef;\n\nvar _iterall = require('iterall');\n\nvar _error = require('../error');\n\nvar _invariant = require('../jsutils/invariant');\n\nvar _invariant2 = _interopRequireDefault(_invariant);\n\nvar _isNullish = require('../jsutils/isNullish');\n\nvar _isNullish2 = _interopRequireDefault(_isNullish);\n\nvar _typeFromAST = require('../utilities/typeFromAST');\n\nvar _kinds = require('../language/kinds');\n\nvar Kind = _interopRequireWildcard(_kinds);\n\nvar _values = require('./values');\n\nvar _definition = require('../type/definition');\n\nvar _schema = require('../type/schema');\n\nvar _introspection = require('../type/introspection');\n\nvar _directives = require('../type/directives');\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Terminology\n *\n * \"Definitions\" are the generic name for top-level statements in the document.\n * Examples of this include:\n * 1) Operations (such as a query)\n * 2) Fragments\n *\n * \"Operations\" are a generic name for requests in the document.\n * Examples of this include:\n * 1) query,\n * 2) mutation\n *\n * \"Selections\" are the definitions that can appear legally and at\n * single level of the query. These include:\n * 1) field references e.g \"a\"\n * 2) fragment \"spreads\" e.g. \"...c\"\n * 3) inline fragment \"spreads\" e.g. \"...on Type { a }\"\n */\n\n/**\n * Data that must be available at all points during query execution.\n *\n * Namely, schema of the type system that is currently executing,\n * and the fragments defined in the query document\n */\n\n\n/**\n * The result of GraphQL execution.\n *\n *   - `errors` is included when any errors occurred as a non-empty array.\n *   - `data` is the result of a successful execution of the query.\n */\n\n\n/**\n * Implements the \"Evaluating requests\" section of the GraphQL specification.\n *\n * Returns a Promise that will eventually be resolved and never rejected.\n *\n * If the arguments to this function do not result in a legal execution context,\n * a GraphQLError will be thrown immediately explaining the invalid input.\n *\n * Accepts either an object with named arguments, or individual arguments.\n */\n\n/* eslint-disable no-redeclare */\nfunction execute(argsOrSchema, document, rootValue, contextValue, variableValues, operationName, fieldResolver) {\n  // Extract arguments from object args if provided.\n  var args = arguments.length === 1 ? argsOrSchema : undefined;\n  var schema = args ? args.schema : argsOrSchema;\n  return args ? executeImpl(schema, args.document, args.rootValue, args.contextValue, args.variableValues, args.operationName, args.fieldResolver) : executeImpl(schema, document, rootValue, contextValue, variableValues, operationName, fieldResolver);\n}\n\nfunction executeImpl(schema, document, rootValue, contextValue, variableValues, operationName, fieldResolver) {\n  // If arguments are missing or incorrect, throw an error.\n  assertValidExecutionArguments(schema, document, variableValues);\n\n  // If a valid context cannot be created due to incorrect arguments,\n  // a \"Response\" with only errors is returned.\n  var context = void 0;\n  try {\n    context = buildExecutionContext(schema, document, rootValue, contextValue, variableValues, operationName, fieldResolver);\n  } catch (error) {\n    return Promise.resolve({ errors: [error] });\n  }\n\n  // Return a Promise that will eventually resolve to the data described by\n  // The \"Response\" section of the GraphQL specification.\n  //\n  // If errors are encountered while executing a GraphQL field, only that\n  // field and its descendants will be omitted, and sibling fields will still\n  // be executed. An execution which encounters errors will still result in a\n  // resolved Promise.\n  return Promise.resolve(executeOperation(context, context.operation, rootValue)).then(function (data) {\n    return context.errors.length === 0 ? { data: data } : { errors: context.errors, data: data };\n  });\n}\n\n/**\n * Given a ResponsePath (found in the `path` entry in the information provided\n * as the last argument to a field resolver), return an Array of the path keys.\n */\nfunction responsePathAsArray(path) {\n  var flattened = [];\n  var curr = path;\n  while (curr) {\n    flattened.push(curr.key);\n    curr = curr.prev;\n  }\n  return flattened.reverse();\n}\n\n/**\n * Given a ResponsePath and a key, return a new ResponsePath containing the\n * new key.\n */\nfunction addPath(prev, key) {\n  return { prev: prev, key: key };\n}\n\n/**\n * Essential assertions before executing to provide developer feedback for\n * improper use of the GraphQL library.\n */\nfunction assertValidExecutionArguments(schema, document, rawVariableValues) {\n  !schema ? (0, _invariant2.default)(0, 'Must provide schema') : void 0;\n  !document ? (0, _invariant2.default)(0, 'Must provide document') : void 0;\n  !(schema instanceof _schema.GraphQLSchema) ? (0, _invariant2.default)(0, 'Schema must be an instance of GraphQLSchema. Also ensure that there are ' + 'not multiple versions of GraphQL installed in your node_modules directory.') : void 0;\n\n  // Variables, if provided, must be an object.\n  !(!rawVariableValues || (typeof rawVariableValues === 'undefined' ? 'undefined' : _typeof(rawVariableValues)) === 'object') ? (0, _invariant2.default)(0, 'Variables must be provided as an Object where each property is a ' + 'variable value. Perhaps look to see if an unparsed JSON string ' + 'was provided.') : void 0;\n}\n\n/**\n * Constructs a ExecutionContext object from the arguments passed to\n * execute, which we will pass throughout the other execution methods.\n *\n * Throws a GraphQLError if a valid execution context cannot be created.\n */\nfunction buildExecutionContext(schema, document, rootValue, contextValue, rawVariableValues, operationName, fieldResolver) {\n  var errors = [];\n  var operation = void 0;\n  var fragments = Object.create(null);\n  document.definitions.forEach(function (definition) {\n    switch (definition.kind) {\n      case Kind.OPERATION_DEFINITION:\n        if (!operationName && operation) {\n          throw new _error.GraphQLError('Must provide operation name if query contains multiple operations.');\n        }\n        if (!operationName || definition.name && definition.name.value === operationName) {\n          operation = definition;\n        }\n        break;\n      case Kind.FRAGMENT_DEFINITION:\n        fragments[definition.name.value] = definition;\n        break;\n      default:\n        throw new _error.GraphQLError('GraphQL cannot execute a request containing a ' + definition.kind + '.', [definition]);\n    }\n  });\n  if (!operation) {\n    if (operationName) {\n      throw new _error.GraphQLError('Unknown operation named \"' + operationName + '\".');\n    } else {\n      throw new _error.GraphQLError('Must provide an operation.');\n    }\n  }\n  var variableValues = (0, _values.getVariableValues)(schema, operation.variableDefinitions || [], rawVariableValues || {});\n\n  return {\n    schema: schema,\n    fragments: fragments,\n    rootValue: rootValue,\n    contextValue: contextValue,\n    operation: operation,\n    variableValues: variableValues,\n    fieldResolver: fieldResolver || defaultFieldResolver,\n    errors: errors\n  };\n}\n\n/**\n * Implements the \"Evaluating operations\" section of the spec.\n */\nfunction executeOperation(exeContext, operation, rootValue) {\n  var type = getOperationRootType(exeContext.schema, operation);\n  var fields = collectFields(exeContext, type, operation.selectionSet, Object.create(null), Object.create(null));\n\n  var path = undefined;\n\n  // Errors from sub-fields of a NonNull type may propagate to the top level,\n  // at which point we still log the error and null the parent field, which\n  // in this case is the entire response.\n  //\n  // Similar to completeValueCatchingError.\n  try {\n    var result = operation.operation === 'mutation' ? executeFieldsSerially(exeContext, type, rootValue, path, fields) : executeFields(exeContext, type, rootValue, path, fields);\n    var promise = getPromise(result);\n    if (promise) {\n      return promise.then(undefined, function (error) {\n        exeContext.errors.push(error);\n        return Promise.resolve(null);\n      });\n    }\n    return result;\n  } catch (error) {\n    exeContext.errors.push(error);\n    return null;\n  }\n}\n\n/**\n * Extracts the root type of the operation from the schema.\n */\nfunction getOperationRootType(schema, operation) {\n  switch (operation.operation) {\n    case 'query':\n      return schema.getQueryType();\n    case 'mutation':\n      var mutationType = schema.getMutationType();\n      if (!mutationType) {\n        throw new _error.GraphQLError('Schema is not configured for mutations', [operation]);\n      }\n      return mutationType;\n    case 'subscription':\n      var subscriptionType = schema.getSubscriptionType();\n      if (!subscriptionType) {\n        throw new _error.GraphQLError('Schema is not configured for subscriptions', [operation]);\n      }\n      return subscriptionType;\n    default:\n      throw new _error.GraphQLError('Can only execute queries, mutations and subscriptions', [operation]);\n  }\n}\n\n/**\n * Implements the \"Evaluating selection sets\" section of the spec\n * for \"write\" mode.\n */\nfunction executeFieldsSerially(exeContext, parentType, sourceValue, path, fields) {\n  return Object.keys(fields).reduce(function (prevPromise, responseName) {\n    return prevPromise.then(function (results) {\n      var fieldNodes = fields[responseName];\n      var fieldPath = addPath(path, responseName);\n      var result = resolveField(exeContext, parentType, sourceValue, fieldNodes, fieldPath);\n      if (result === undefined) {\n        return results;\n      }\n      var promise = getPromise(result);\n      if (promise) {\n        return promise.then(function (resolvedResult) {\n          results[responseName] = resolvedResult;\n          return results;\n        });\n      }\n      results[responseName] = result;\n      return results;\n    });\n  }, Promise.resolve({}));\n}\n\n/**\n * Implements the \"Evaluating selection sets\" section of the spec\n * for \"read\" mode.\n */\nfunction executeFields(exeContext, parentType, sourceValue, path, fields) {\n  var containsPromise = false;\n\n  var finalResults = Object.keys(fields).reduce(function (results, responseName) {\n    var fieldNodes = fields[responseName];\n    var fieldPath = addPath(path, responseName);\n    var result = resolveField(exeContext, parentType, sourceValue, fieldNodes, fieldPath);\n    if (result === undefined) {\n      return results;\n    }\n    results[responseName] = result;\n    if (getPromise(result)) {\n      containsPromise = true;\n    }\n    return results;\n  }, Object.create(null));\n\n  // If there are no promises, we can just return the object\n  if (!containsPromise) {\n    return finalResults;\n  }\n\n  // Otherwise, results is a map from field name to the result\n  // of resolving that field, which is possibly a promise. Return\n  // a promise that will return this same map, but with any\n  // promises replaced with the values they resolved to.\n  return promiseForObject(finalResults);\n}\n\n/**\n * Given a selectionSet, adds all of the fields in that selection to\n * the passed in map of fields, and returns it at the end.\n *\n * CollectFields requires the \"runtime type\" of an object. For a field which\n * returns an Interface or Union type, the \"runtime type\" will be the actual\n * Object type returned by that field.\n */\nfunction collectFields(exeContext, runtimeType, selectionSet, fields, visitedFragmentNames) {\n  for (var i = 0; i < selectionSet.selections.length; i++) {\n    var selection = selectionSet.selections[i];\n    switch (selection.kind) {\n      case Kind.FIELD:\n        if (!shouldIncludeNode(exeContext, selection)) {\n          continue;\n        }\n        var _name = getFieldEntryKey(selection);\n        if (!fields[_name]) {\n          fields[_name] = [];\n        }\n        fields[_name].push(selection);\n        break;\n      case Kind.INLINE_FRAGMENT:\n        if (!shouldIncludeNode(exeContext, selection) || !doesFragmentConditionMatch(exeContext, selection, runtimeType)) {\n          continue;\n        }\n        collectFields(exeContext, runtimeType, selection.selectionSet, fields, visitedFragmentNames);\n        break;\n      case Kind.FRAGMENT_SPREAD:\n        var fragName = selection.name.value;\n        if (visitedFragmentNames[fragName] || !shouldIncludeNode(exeContext, selection)) {\n          continue;\n        }\n        visitedFragmentNames[fragName] = true;\n        var fragment = exeContext.fragments[fragName];\n        if (!fragment || !doesFragmentConditionMatch(exeContext, fragment, runtimeType)) {\n          continue;\n        }\n        collectFields(exeContext, runtimeType, fragment.selectionSet, fields, visitedFragmentNames);\n        break;\n    }\n  }\n  return fields;\n}\n\n/**\n * Determines if a field should be included based on the @include and @skip\n * directives, where @skip has higher precidence than @include.\n */\nfunction shouldIncludeNode(exeContext, node) {\n  var skip = (0, _values.getDirectiveValues)(_directives.GraphQLSkipDirective, node, exeContext.variableValues);\n  if (skip && skip.if === true) {\n    return false;\n  }\n\n  var include = (0, _values.getDirectiveValues)(_directives.GraphQLIncludeDirective, node, exeContext.variableValues);\n  if (include && include.if === false) {\n    return false;\n  }\n  return true;\n}\n\n/**\n * Determines if a fragment is applicable to the given type.\n */\nfunction doesFragmentConditionMatch(exeContext, fragment, type) {\n  var typeConditionNode = fragment.typeCondition;\n  if (!typeConditionNode) {\n    return true;\n  }\n  var conditionalType = (0, _typeFromAST.typeFromAST)(exeContext.schema, typeConditionNode);\n  if (conditionalType === type) {\n    return true;\n  }\n  if ((0, _definition.isAbstractType)(conditionalType)) {\n    return exeContext.schema.isPossibleType(conditionalType, type);\n  }\n  return false;\n}\n\n/**\n * This function transforms a JS object `{[key: string]: Promise<T>}` into\n * a `Promise<{[key: string]: T}>`\n *\n * This is akin to bluebird's `Promise.props`, but implemented only using\n * `Promise.all` so it will work with any implementation of ES6 promises.\n */\nfunction promiseForObject(object) {\n  var keys = Object.keys(object);\n  var valuesAndPromises = keys.map(function (name) {\n    return object[name];\n  });\n  return Promise.all(valuesAndPromises).then(function (values) {\n    return values.reduce(function (resolvedObject, value, i) {\n      resolvedObject[keys[i]] = value;\n      return resolvedObject;\n    }, Object.create(null));\n  });\n}\n\n/**\n * Implements the logic to compute the key of a given field's entry\n */\nfunction getFieldEntryKey(node) {\n  return node.alias ? node.alias.value : node.name.value;\n}\n\n/**\n * Resolves the field on the given source object. In particular, this\n * figures out the value that the field returns by calling its resolve function,\n * then calls completeValue to complete promises, serialize scalars, or execute\n * the sub-selection-set for objects.\n */\nfunction resolveField(exeContext, parentType, source, fieldNodes, path) {\n  var fieldNode = fieldNodes[0];\n  var fieldName = fieldNode.name.value;\n\n  var fieldDef = getFieldDef(exeContext.schema, parentType, fieldName);\n  if (!fieldDef) {\n    return;\n  }\n\n  var resolveFn = fieldDef.resolve || exeContext.fieldResolver;\n\n  var info = buildResolveInfo(exeContext, fieldDef, fieldNodes, parentType, path);\n\n  // Get the resolve function, regardless of if its result is normal\n  // or abrupt (error).\n  var result = resolveFieldValueOrError(exeContext, fieldDef, fieldNodes, resolveFn, source, info);\n\n  return completeValueCatchingError(exeContext, fieldDef.type, fieldNodes, info, path, result);\n}\n\nfunction buildResolveInfo(exeContext, fieldDef, fieldNodes, parentType, path) {\n  // The resolve function's optional fourth argument is a collection of\n  // information about the current execution state.\n  return {\n    fieldName: fieldNodes[0].name.value,\n    fieldNodes: fieldNodes,\n    returnType: fieldDef.type,\n    parentType: parentType,\n    path: path,\n    schema: exeContext.schema,\n    fragments: exeContext.fragments,\n    rootValue: exeContext.rootValue,\n    operation: exeContext.operation,\n    variableValues: exeContext.variableValues\n  };\n}\n\n// Isolates the \"ReturnOrAbrupt\" behavior to not de-opt the `resolveField`\n// function. Returns the result of resolveFn or the abrupt-return Error object.\nfunction resolveFieldValueOrError(exeContext, fieldDef, fieldNodes, resolveFn, source, info) {\n  try {\n    // Build a JS object of arguments from the field.arguments AST, using the\n    // variables scope to fulfill any variable references.\n    // TODO: find a way to memoize, in case this field is within a List type.\n    var args = (0, _values.getArgumentValues)(fieldDef, fieldNodes[0], exeContext.variableValues);\n\n    // The resolve function's optional third argument is a context value that\n    // is provided to every resolve function within an execution. It is commonly\n    // used to represent an authenticated user, or request-specific caches.\n    var context = exeContext.contextValue;\n\n    return resolveFn(source, args, context, info);\n  } catch (error) {\n    // Sometimes a non-error is thrown, wrap it as an Error for a\n    // consistent interface.\n    return error instanceof Error ? error : new Error(error);\n  }\n}\n\n// This is a small wrapper around completeValue which detects and logs errors\n// in the execution context.\nfunction completeValueCatchingError(exeContext, returnType, fieldNodes, info, path, result) {\n  // If the field type is non-nullable, then it is resolved without any\n  // protection from errors, however it still properly locates the error.\n  if (returnType instanceof _definition.GraphQLNonNull) {\n    return completeValueWithLocatedError(exeContext, returnType, fieldNodes, info, path, result);\n  }\n\n  // Otherwise, error protection is applied, logging the error and resolving\n  // a null value for this field if one is encountered.\n  try {\n    var completed = completeValueWithLocatedError(exeContext, returnType, fieldNodes, info, path, result);\n    var promise = getPromise(completed);\n    if (promise) {\n      // If `completeValueWithLocatedError` returned a rejected promise, log\n      // the rejection error and resolve to null.\n      // Note: we don't rely on a `catch` method, but we do expect \"thenable\"\n      // to take a second callback for the error case.\n      return promise.then(undefined, function (error) {\n        exeContext.errors.push(error);\n        return Promise.resolve(null);\n      });\n    }\n    return completed;\n  } catch (error) {\n    // If `completeValueWithLocatedError` returned abruptly (threw an error),\n    // log the error and return null.\n    exeContext.errors.push(error);\n    return null;\n  }\n}\n\n// This is a small wrapper around completeValue which annotates errors with\n// location information.\nfunction completeValueWithLocatedError(exeContext, returnType, fieldNodes, info, path, result) {\n  try {\n    var completed = completeValue(exeContext, returnType, fieldNodes, info, path, result);\n    var promise = getPromise(completed);\n    if (promise) {\n      return promise.then(undefined, function (error) {\n        return Promise.reject((0, _error.locatedError)(error, fieldNodes, responsePathAsArray(path)));\n      });\n    }\n    return completed;\n  } catch (error) {\n    throw (0, _error.locatedError)(error, fieldNodes, responsePathAsArray(path));\n  }\n}\n\n/**\n * Implements the instructions for completeValue as defined in the\n * \"Field entries\" section of the spec.\n *\n * If the field type is Non-Null, then this recursively completes the value\n * for the inner type. It throws a field error if that completion returns null,\n * as per the \"Nullability\" section of the spec.\n *\n * If the field type is a List, then this recursively completes the value\n * for the inner type on each item in the list.\n *\n * If the field type is a Scalar or Enum, ensures the completed value is a legal\n * value of the type by calling the `serialize` method of GraphQL type\n * definition.\n *\n * If the field is an abstract type, determine the runtime type of the value\n * and then complete based on that type\n *\n * Otherwise, the field type expects a sub-selection set, and will complete the\n * value by evaluating all sub-selections.\n */\nfunction completeValue(exeContext, returnType, fieldNodes, info, path, result) {\n  // If result is a Promise, apply-lift over completeValue.\n  var promise = getPromise(result);\n  if (promise) {\n    return promise.then(function (resolved) {\n      return completeValue(exeContext, returnType, fieldNodes, info, path, resolved);\n    });\n  }\n\n  // If result is an Error, throw a located error.\n  if (result instanceof Error) {\n    throw result;\n  }\n\n  // If field type is NonNull, complete for inner type, and throw field error\n  // if result is null.\n  if (returnType instanceof _definition.GraphQLNonNull) {\n    var completed = completeValue(exeContext, returnType.ofType, fieldNodes, info, path, result);\n    if (completed === null) {\n      throw new Error('Cannot return null for non-nullable field ' + info.parentType.name + '.' + info.fieldName + '.');\n    }\n    return completed;\n  }\n\n  // If result value is null-ish (null, undefined, or NaN) then return null.\n  if ((0, _isNullish2.default)(result)) {\n    return null;\n  }\n\n  // If field type is List, complete each item in the list with the inner type\n  if (returnType instanceof _definition.GraphQLList) {\n    return completeListValue(exeContext, returnType, fieldNodes, info, path, result);\n  }\n\n  // If field type is a leaf type, Scalar or Enum, serialize to a valid value,\n  // returning null if serialization is not possible.\n  if ((0, _definition.isLeafType)(returnType)) {\n    return completeLeafValue(returnType, result);\n  }\n\n  // If field type is an abstract type, Interface or Union, determine the\n  // runtime Object type and complete for that type.\n  if ((0, _definition.isAbstractType)(returnType)) {\n    return completeAbstractValue(exeContext, returnType, fieldNodes, info, path, result);\n  }\n\n  // If field type is Object, execute and complete all sub-selections.\n  if (returnType instanceof _definition.GraphQLObjectType) {\n    return completeObjectValue(exeContext, returnType, fieldNodes, info, path, result);\n  }\n\n  // Not reachable. All possible output types have been considered.\n  throw new Error('Cannot complete value of unexpected type \"' + String(returnType) + '\".');\n}\n\n/**\n * Complete a list value by completing each item in the list with the\n * inner type\n */\nfunction completeListValue(exeContext, returnType, fieldNodes, info, path, result) {\n  !(0, _iterall.isCollection)(result) ? (0, _invariant2.default)(0, 'Expected Iterable, but did not find one for field ' + info.parentType.name + '.' + info.fieldName + '.') : void 0;\n\n  // This is specified as a simple map, however we're optimizing the path\n  // where the list contains no Promises by avoiding creating another Promise.\n  var itemType = returnType.ofType;\n  var containsPromise = false;\n  var completedResults = [];\n  (0, _iterall.forEach)(result, function (item, index) {\n    // No need to modify the info object containing the path,\n    // since from here on it is not ever accessed by resolver functions.\n    var fieldPath = addPath(path, index);\n    var completedItem = completeValueCatchingError(exeContext, itemType, fieldNodes, info, fieldPath, item);\n\n    if (!containsPromise && getPromise(completedItem)) {\n      containsPromise = true;\n    }\n    completedResults.push(completedItem);\n  });\n\n  return containsPromise ? Promise.all(completedResults) : completedResults;\n}\n\n/**\n * Complete a Scalar or Enum by serializing to a valid value, returning\n * null if serialization is not possible.\n */\nfunction completeLeafValue(returnType, result) {\n  !returnType.serialize ? (0, _invariant2.default)(0, 'Missing serialize method on type') : void 0;\n  var serializedResult = returnType.serialize(result);\n  if ((0, _isNullish2.default)(serializedResult)) {\n    throw new Error('Expected a value of type \"' + String(returnType) + '\" but ' + ('received: ' + String(result)));\n  }\n  return serializedResult;\n}\n\n/**\n * Complete a value of an abstract type by determining the runtime object type\n * of that value, then complete the value for that type.\n */\nfunction completeAbstractValue(exeContext, returnType, fieldNodes, info, path, result) {\n  var runtimeType = returnType.resolveType ? returnType.resolveType(result, exeContext.contextValue, info) : defaultResolveTypeFn(result, exeContext.contextValue, info, returnType);\n\n  var promise = getPromise(runtimeType);\n  if (promise) {\n    return promise.then(function (resolvedRuntimeType) {\n      return completeObjectValue(exeContext, ensureValidRuntimeType(resolvedRuntimeType, exeContext, returnType, fieldNodes, info, result), fieldNodes, info, path, result);\n    });\n  }\n\n  return completeObjectValue(exeContext, ensureValidRuntimeType(runtimeType, exeContext, returnType, fieldNodes, info, result), fieldNodes, info, path, result);\n}\n\nfunction ensureValidRuntimeType(runtimeTypeOrName, exeContext, returnType, fieldNodes, info, result) {\n  var runtimeType = typeof runtimeTypeOrName === 'string' ? exeContext.schema.getType(runtimeTypeOrName) : runtimeTypeOrName;\n\n  if (!(runtimeType instanceof _definition.GraphQLObjectType)) {\n    throw new _error.GraphQLError('Abstract type ' + returnType.name + ' must resolve to an Object type at ' + ('runtime for field ' + info.parentType.name + '.' + info.fieldName + ' with ') + ('value \"' + String(result) + '\", received \"' + String(runtimeType) + '\".'), fieldNodes);\n  }\n\n  if (!exeContext.schema.isPossibleType(returnType, runtimeType)) {\n    throw new _error.GraphQLError('Runtime Object type \"' + runtimeType.name + '\" is not a possible type ' + ('for \"' + returnType.name + '\".'), fieldNodes);\n  }\n\n  return runtimeType;\n}\n\n/**\n * Complete an Object value by executing all sub-selections.\n */\nfunction completeObjectValue(exeContext, returnType, fieldNodes, info, path, result) {\n  // If there is an isTypeOf predicate function, call it with the\n  // current result. If isTypeOf returns false, then raise an error rather\n  // than continuing execution.\n  if (returnType.isTypeOf) {\n    var isTypeOf = returnType.isTypeOf(result, exeContext.contextValue, info);\n\n    var promise = getPromise(isTypeOf);\n    if (promise) {\n      return promise.then(function (isTypeOfResult) {\n        if (!isTypeOfResult) {\n          throw invalidReturnTypeError(returnType, result, fieldNodes);\n        }\n        return collectAndExecuteSubfields(exeContext, returnType, fieldNodes, info, path, result);\n      });\n    }\n\n    if (!isTypeOf) {\n      throw invalidReturnTypeError(returnType, result, fieldNodes);\n    }\n  }\n\n  return collectAndExecuteSubfields(exeContext, returnType, fieldNodes, info, path, result);\n}\n\nfunction invalidReturnTypeError(returnType, result, fieldNodes) {\n  return new _error.GraphQLError('Expected value of type \"' + returnType.name + '\" but got: ' + String(result) + '.', fieldNodes);\n}\n\nfunction collectAndExecuteSubfields(exeContext, returnType, fieldNodes, info, path, result) {\n  // Collect sub-fields to execute to complete this value.\n  var subFieldNodes = Object.create(null);\n  var visitedFragmentNames = Object.create(null);\n  for (var i = 0; i < fieldNodes.length; i++) {\n    var selectionSet = fieldNodes[i].selectionSet;\n    if (selectionSet) {\n      subFieldNodes = collectFields(exeContext, returnType, selectionSet, subFieldNodes, visitedFragmentNames);\n    }\n  }\n\n  return executeFields(exeContext, returnType, result, path, subFieldNodes);\n}\n\n/**\n * If a resolveType function is not given, then a default resolve behavior is\n * used which tests each possible type for the abstract type by calling\n * isTypeOf for the object being coerced, returning the first type that matches.\n */\nfunction defaultResolveTypeFn(value, context, info, abstractType) {\n  var possibleTypes = info.schema.getPossibleTypes(abstractType);\n  var promisedIsTypeOfResults = [];\n\n  for (var i = 0; i < possibleTypes.length; i++) {\n    var type = possibleTypes[i];\n\n    if (type.isTypeOf) {\n      var isTypeOfResult = type.isTypeOf(value, context, info);\n\n      var promise = getPromise(isTypeOfResult);\n      if (promise) {\n        promisedIsTypeOfResults[i] = promise;\n      } else if (isTypeOfResult) {\n        return type;\n      }\n    }\n  }\n\n  if (promisedIsTypeOfResults.length) {\n    return Promise.all(promisedIsTypeOfResults).then(function (isTypeOfResults) {\n      for (var _i = 0; _i < isTypeOfResults.length; _i++) {\n        if (isTypeOfResults[_i]) {\n          return possibleTypes[_i];\n        }\n      }\n    });\n  }\n}\n\n/**\n * If a resolve function is not given, then a default resolve behavior is used\n * which takes the property of the source object of the same name as the field\n * and returns it as the result, or if it's a function, returns the result\n * of calling that function while passing along args and context.\n */\nvar defaultFieldResolver = exports.defaultFieldResolver = function defaultFieldResolver(source, args, context, info) {\n  // ensure source is a value for which property access is acceptable.\n  if ((typeof source === 'undefined' ? 'undefined' : _typeof(source)) === 'object' || typeof source === 'function') {\n    var property = source[info.fieldName];\n    if (typeof property === 'function') {\n      return source[info.fieldName](args, context, info);\n    }\n    return property;\n  }\n};\n\n/**\n * Only returns the value if it acts like a Promise, i.e. has a \"then\" function,\n * otherwise returns void.\n */\nfunction getPromise(value) {\n  if ((typeof value === 'undefined' ? 'undefined' : _typeof(value)) === 'object' && value !== null && typeof value.then === 'function') {\n    return value;\n  }\n}\n\n/**\n * This method looks up the field on the given type defintion.\n * It has special casing for the two introspection fields, __schema\n * and __typename. __typename is special because it can always be\n * queried as a field, even in situations where no other fields\n * are allowed, like on a Union. __schema could get automatically\n * added to the query type, but that would require mutating type\n * definitions, which would cause issues.\n */\nfunction getFieldDef(schema, parentType, fieldName) {\n  if (fieldName === _introspection.SchemaMetaFieldDef.name && schema.getQueryType() === parentType) {\n    return _introspection.SchemaMetaFieldDef;\n  } else if (fieldName === _introspection.TypeMetaFieldDef.name && schema.getQueryType() === parentType) {\n    return _introspection.TypeMetaFieldDef;\n  } else if (fieldName === _introspection.TypeNameMetaFieldDef.name) {\n    return _introspection.TypeNameMetaFieldDef;\n  }\n  return parentType.getFields()[fieldName];\n}","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n/**\n *  Copyright (c) 2015, Facebook, Inc.\n *  All rights reserved.\n *\n *  This source code is licensed under the BSD-style license found in the\n *  LICENSE file in the root directory of this source tree. An additional grant\n *  of patent rights can be found in the PATENTS file in the same directory.\n */\n\nexports.getVariableValues = getVariableValues;\nexports.getArgumentValues = getArgumentValues;\nexports.getDirectiveValues = getDirectiveValues;\n\nvar _iterall = require('iterall');\n\nvar _error = require('../error');\n\nvar _find = require('../jsutils/find');\n\nvar _find2 = _interopRequireDefault(_find);\n\nvar _invariant = require('../jsutils/invariant');\n\nvar _invariant2 = _interopRequireDefault(_invariant);\n\nvar _isNullish = require('../jsutils/isNullish');\n\nvar _isNullish2 = _interopRequireDefault(_isNullish);\n\nvar _isInvalid = require('../jsutils/isInvalid');\n\nvar _isInvalid2 = _interopRequireDefault(_isInvalid);\n\nvar _keyMap = require('../jsutils/keyMap');\n\nvar _keyMap2 = _interopRequireDefault(_keyMap);\n\nvar _typeFromAST = require('../utilities/typeFromAST');\n\nvar _valueFromAST = require('../utilities/valueFromAST');\n\nvar _isValidJSValue = require('../utilities/isValidJSValue');\n\nvar _isValidLiteralValue = require('../utilities/isValidLiteralValue');\n\nvar _kinds = require('../language/kinds');\n\nvar Kind = _interopRequireWildcard(_kinds);\n\nvar _printer = require('../language/printer');\n\nvar _definition = require('../type/definition');\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Prepares an object map of variableValues of the correct type based on the\n * provided variable definitions and arbitrary input. If the input cannot be\n * parsed to match the variable definitions, a GraphQLError will be thrown.\n */\nfunction getVariableValues(schema, varDefNodes, inputs) {\n  var coercedValues = Object.create(null);\n  for (var i = 0; i < varDefNodes.length; i++) {\n    var varDefNode = varDefNodes[i];\n    var varName = varDefNode.variable.name.value;\n    var varType = (0, _typeFromAST.typeFromAST)(schema, varDefNode.type);\n    if (!(0, _definition.isInputType)(varType)) {\n      throw new _error.GraphQLError('Variable \"$' + varName + '\" expected value of type ' + ('\"' + (0, _printer.print)(varDefNode.type) + '\" which cannot be used as an input type.'), [varDefNode.type]);\n    }\n\n    var value = inputs[varName];\n    if ((0, _isInvalid2.default)(value)) {\n      var defaultValue = varDefNode.defaultValue;\n      if (defaultValue) {\n        coercedValues[varName] = (0, _valueFromAST.valueFromAST)(defaultValue, varType);\n      }\n      if (varType instanceof _definition.GraphQLNonNull) {\n        throw new _error.GraphQLError('Variable \"$' + varName + '\" of required type ' + ('\"' + String(varType) + '\" was not provided.'), [varDefNode]);\n      }\n    } else {\n      var errors = (0, _isValidJSValue.isValidJSValue)(value, varType);\n      if (errors.length) {\n        var message = errors ? '\\n' + errors.join('\\n') : '';\n        throw new _error.GraphQLError('Variable \"$' + varName + '\" got invalid value ' + (JSON.stringify(value) + '.' + message), [varDefNode]);\n      }\n\n      var coercedValue = coerceValue(varType, value);\n      !!(0, _isInvalid2.default)(coercedValue) ? (0, _invariant2.default)(0, 'Should have reported error.') : void 0;\n      coercedValues[varName] = coercedValue;\n    }\n  }\n  return coercedValues;\n}\n\n/**\n * Prepares an object map of argument values given a list of argument\n * definitions and list of argument AST nodes.\n */\nfunction getArgumentValues(def, node, variableValues) {\n  var argDefs = def.args;\n  var argNodes = node.arguments;\n  if (!argDefs || !argNodes) {\n    return {};\n  }\n  var coercedValues = Object.create(null);\n  var argNodeMap = (0, _keyMap2.default)(argNodes, function (arg) {\n    return arg.name.value;\n  });\n  for (var i = 0; i < argDefs.length; i++) {\n    var argDef = argDefs[i];\n    var name = argDef.name;\n    var argType = argDef.type;\n    var argumentNode = argNodeMap[name];\n    var defaultValue = argDef.defaultValue;\n    if (!argumentNode) {\n      if (!(0, _isInvalid2.default)(defaultValue)) {\n        coercedValues[name] = defaultValue;\n      } else if (argType instanceof _definition.GraphQLNonNull) {\n        throw new _error.GraphQLError('Argument \"' + name + '\" of required type ' + ('\"' + String(argType) + '\" was not provided.'), [node]);\n      }\n    } else if (argumentNode.value.kind === Kind.VARIABLE) {\n      var variableName = argumentNode.value.name.value;\n      if (variableValues && !(0, _isInvalid2.default)(variableValues[variableName])) {\n        // Note: this does not check that this variable value is correct.\n        // This assumes that this query has been validated and the variable\n        // usage here is of the correct type.\n        coercedValues[name] = variableValues[variableName];\n      } else if (!(0, _isInvalid2.default)(defaultValue)) {\n        coercedValues[name] = defaultValue;\n      } else if (argType instanceof _definition.GraphQLNonNull) {\n        throw new _error.GraphQLError('Argument \"' + name + '\" of required type \"' + String(argType) + '\" was ' + ('provided the variable \"$' + variableName + '\" which was not provided ') + 'a runtime value.', [argumentNode.value]);\n      }\n    } else {\n      var valueNode = argumentNode.value;\n      var coercedValue = (0, _valueFromAST.valueFromAST)(valueNode, argType, variableValues);\n      if ((0, _isInvalid2.default)(coercedValue)) {\n        var errors = (0, _isValidLiteralValue.isValidLiteralValue)(argType, valueNode);\n        var message = errors ? '\\n' + errors.join('\\n') : '';\n        throw new _error.GraphQLError('Argument \"' + name + '\" got invalid value ' + (0, _printer.print)(valueNode) + '.' + message, [argumentNode.value]);\n      }\n      coercedValues[name] = coercedValue;\n    }\n  }\n  return coercedValues;\n}\n\n/**\n * Prepares an object map of argument values given a directive definition\n * and a AST node which may contain directives. Optionally also accepts a map\n * of variable values.\n *\n * If the directive does not exist on the node, returns undefined.\n */\nfunction getDirectiveValues(directiveDef, node, variableValues) {\n  var directiveNode = node.directives && (0, _find2.default)(node.directives, function (directive) {\n    return directive.name.value === directiveDef.name;\n  });\n\n  if (directiveNode) {\n    return getArgumentValues(directiveDef, directiveNode, variableValues);\n  }\n}\n\n/**\n * Given a type and any value, return a runtime value coerced to match the type.\n */\nfunction coerceValue(type, value) {\n  // Ensure flow knows that we treat function params as const.\n  var _value = value;\n\n  if ((0, _isInvalid2.default)(_value)) {\n    return; // Intentionally return no value.\n  }\n\n  if (type instanceof _definition.GraphQLNonNull) {\n    if (_value === null) {\n      return; // Intentionally return no value.\n    }\n    return coerceValue(type.ofType, _value);\n  }\n\n  if (_value === null) {\n    // Intentionally return the value null.\n    return null;\n  }\n\n  if (type instanceof _definition.GraphQLList) {\n    var itemType = type.ofType;\n    if ((0, _iterall.isCollection)(_value)) {\n      var coercedValues = [];\n      var valueIter = (0, _iterall.createIterator)(_value);\n      if (!valueIter) {\n        return; // Intentionally return no value.\n      }\n      var step = void 0;\n      while (!(step = valueIter.next()).done) {\n        var itemValue = coerceValue(itemType, step.value);\n        if ((0, _isInvalid2.default)(itemValue)) {\n          return; // Intentionally return no value.\n        }\n        coercedValues.push(itemValue);\n      }\n      return coercedValues;\n    }\n    var coercedValue = coerceValue(itemType, _value);\n    if ((0, _isInvalid2.default)(coercedValue)) {\n      return; // Intentionally return no value.\n    }\n    return [coerceValue(itemType, _value)];\n  }\n\n  if (type instanceof _definition.GraphQLInputObjectType) {\n    if ((typeof _value === 'undefined' ? 'undefined' : _typeof(_value)) !== 'object') {\n      return; // Intentionally return no value.\n    }\n    var coercedObj = Object.create(null);\n    var fields = type.getFields();\n    var fieldNames = Object.keys(fields);\n    for (var i = 0; i < fieldNames.length; i++) {\n      var fieldName = fieldNames[i];\n      var field = fields[fieldName];\n      if ((0, _isInvalid2.default)(_value[fieldName])) {\n        if (!(0, _isInvalid2.default)(field.defaultValue)) {\n          coercedObj[fieldName] = field.defaultValue;\n        } else if (field.type instanceof _definition.GraphQLNonNull) {\n          return; // Intentionally return no value.\n        }\n        continue;\n      }\n      var fieldValue = coerceValue(field.type, _value[fieldName]);\n      if ((0, _isInvalid2.default)(fieldValue)) {\n        return; // Intentionally return no value.\n      }\n      coercedObj[fieldName] = fieldValue;\n    }\n    return coercedObj;\n  }\n\n  !(type instanceof _definition.GraphQLScalarType || type instanceof _definition.GraphQLEnumType) ? (0, _invariant2.default)(0, 'Must be input type') : void 0;\n\n  var parsed = type.parseValue(_value);\n  if ((0, _isNullish2.default)(parsed)) {\n    // null or invalid values represent a failure to parse correctly,\n    // in which case no value is returned.\n    return;\n  }\n\n  return parsed;\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = keyValMap;\n\n/**\n *  Copyright (c) 2015, Facebook, Inc.\n *  All rights reserved.\n *\n *  This source code is licensed under the BSD-style license found in the\n *  LICENSE file in the root directory of this source tree. An additional grant\n *  of patent rights can be found in the PATENTS file in the same directory.\n */\n\n/**\n * Creates a keyed JS object from an array, given a function to produce the keys\n * and a function to produce the values from each item in the array.\n *\n *     const phoneBook = [\n *       { name: 'Jon', num: '555-1234' },\n *       { name: 'Jenny', num: '867-5309' }\n *     ]\n *\n *     // { Jon: '555-1234', Jenny: '867-5309' }\n *     const phonesByName = keyValMap(\n *       phoneBook,\n *       entry => entry.name,\n *       entry => entry.num\n *     )\n *\n */\nfunction keyValMap(list, keyFn, valFn) {\n  return list.reduce(function (map, item) {\n    return map[keyFn(item)] = valFn(item), map;\n  }, Object.create(null));\n}","// @flow\nconst t = require(\"../index\");\n\ntype Validator = {\n  validate: Function,\n  optional?: boolean\n};\n\nexport const BUILDER_KEYS: { [type: string]: Array<string> } = {};\nexport const NODE_FIELDS: {\n  [type: string]: { [fieldKey: string]: Validator }\n} = {};\nexport const ALIAS_KEYS: { [type: string]: Array<string> } = {};\n\ntype Option = {\n  fields?: { [fieldKey: string]: Validator },\n  aliases?: Array<string>,\n  builder?: Array<string> // Node properties to be transformed into params\n};\n\n/**\n * Used to define an AST node.\n * @param {String} type The AST node name\n * @param {Object} opts Type definition object\n * @returns {void}\n */\nexport default function defineType(\n  type: string,\n  { fields = {}, aliases = [], builder = [] }: Option = {}\n) {\n  for (const key in fields) {\n    const field = fields[key];\n\n    // Sets field as optional if builder exist but validator does not.\n    if (builder.indexOf(key) === -1) {\n      field.optional = true;\n    }\n  }\n\n  BUILDER_KEYS[type] = builder;\n  NODE_FIELDS[type] = fields;\n  ALIAS_KEYS[type] = aliases;\n}\n\nfunction getType(val) {\n  if (Array.isArray(val)) {\n    return \"array\";\n  } else if (val === null) {\n    return \"null\";\n  } else if (val === undefined) {\n    return \"undefined\";\n  } else {\n    return typeof val;\n  }\n}\n\n// Validation helpers\n\nexport function chain(...fns: Array<Function>): Function {\n  return function validate(...args) {\n    fns.forEach(fn => fn(...args));\n  };\n}\n\nexport function assertEach(callback: Function): Function {\n  function validator(node, key, val) {\n    if (!Array.isArray(val)) {\n      return;\n    }\n\n    val.forEach((it, i) => callback(node, `${key}[${i}]`, it));\n  }\n  return validator;\n}\n\nexport function assertOneOf(...vals: Array<string>): Function {\n  function validate(node, key, val) {\n    if (vals.indexOf(val.kind) < 0) {\n      throw new TypeError(\n        `Property ${key} expected value to be one of ${JSON.stringify(\n          vals\n        )} but got ${JSON.stringify(val)}`\n      );\n    }\n  }\n\n  return validate;\n}\n\nexport function assertNodeType(...types: Array<string>): Function {\n  function validate(node, key, val) {\n    const valid = types.every(type => t.is(type, val));\n\n    if (!valid) {\n      throw new TypeError(\n        `Property ${key} of ${node.type} expected node to be of a type ${JSON.stringify(\n          types\n        )} ` + `but instead got ${JSON.stringify(val && val.type)}`\n      );\n    }\n  }\n\n  return validate;\n}\n\nexport function assertNodeOrValueType(...types: Array<string>): Function {\n  function validate(node, key, val) {\n    const valid = types.every(type => getType(val) === type || t.is(type, val));\n\n    if (!valid) {\n      throw new TypeError(\n        `Property ${key} of ${node.type} expected node to be of a type ${JSON.stringify(\n          types\n        )} ` + `but instead got ${JSON.stringify(val && val.type)}`\n      );\n    }\n  }\n\n  return validate;\n}\n\nexport function assertValueType(type: string): Function {\n  function validate(node, key, val) {\n    const valid = getType(val) === type;\n\n    if (!valid) {\n      throw new TypeError(\n        `Property ${key} expected type of ${type} but got ${getType(val)}`\n      );\n    }\n  }\n\n  return validate;\n}\n\nexport function assertArrayOf(cb: Function): Function {\n  return chain(assertValueType(\"array\"), assertEach(cb));\n}\n","/* tslint:disable */\n\nimport zenObservable from 'zen-observable';\n\nnamespace Observable {\n\n}\n\nimport { ZenObservable } from './types';\n\nexport { ZenObservable };\n\nexport type Observer<T> = ZenObservable.Observer<T>;\nexport type Subscriber<T> = ZenObservable.Subscriber<T>;\nexport type ObservableLike<T> = ZenObservable.ObservableLike<T>;\n\nexport const Observable: {\n  new <T>(subscriber: Subscriber<T>): Observable<T>;\n  from<R>(\n    observable: Observable<R> | ZenObservable.ObservableLike<R> | ArrayLike<R>,\n  ): Observable<R>;\n  of<R>(...args: Array<R>): Observable<R>;\n} = <any>zenObservable;\n\nexport interface Observable<T> {\n  subscribe(\n    observerOrNext: ((value: T) => void) | ZenObservable.Observer<T>,\n    error?: (error: any) => void,\n    complete?: () => void,\n  ): ZenObservable.Subscription;\n\n  forEach(fn: (value: T) => void): Promise<void>;\n\n  map<R>(fn: (value: T) => R): Observable<R>;\n\n  filter(fn: (value: T) => boolean): Observable<T>;\n\n  reduce<R = T>(\n    fn: (previousValue: R | T, currentValue: T) => R | T,\n    initialValue?: R | T,\n  ): Observable<R | T>;\n\n  flatMap<R>(fn: (value: T) => ZenObservable.ObservableLike<R>): Observable<R>;\n\n  from<R>(\n    observable: Observable<R> | ZenObservable.ObservableLike<R> | ArrayLike<R>,\n  ): Observable<R>;\n  of<R>(...args: Array<R>): Observable<R>;\n}\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from, pack) {\r\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n        if (ar || !(i in from)) {\r\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n            ar[i] = from[i];\r\n        }\r\n    }\r\n    return to.concat(ar || from);\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n}\r\n","import { Operation } from 'apollo-link';\nimport { print } from 'graphql/language/printer';\nimport { InvariantError } from 'ts-invariant';\n\n/*\n * Http Utilities: shared across links that make http requests\n */\n\n// XXX replace with actual typings when available\ndeclare var AbortController: any;\n\n//Used for any Error for data from the server\n//on a request with a Status >= 300\n//response contains no data or errors\nexport type ServerError = Error & {\n  response: Response;\n  result: Record<string, any>;\n  statusCode: number;\n};\n\n//Thrown when server's resonse is cannot be parsed\nexport type ServerParseError = Error & {\n  response: Response;\n  statusCode: number;\n  bodyText: string;\n};\n\nexport type ClientParseError = InvariantError & {\n  parseError: Error;\n};\n\nexport interface HttpQueryOptions {\n  includeQuery?: boolean;\n  includeExtensions?: boolean;\n}\n\nexport interface HttpConfig {\n  http?: HttpQueryOptions;\n  options?: any;\n  headers?: any; //overrides headers in options\n  credentials?: any;\n}\n\nexport interface UriFunction {\n  (operation: Operation): string;\n}\n\n// The body of a GraphQL-over-HTTP-POST request.\nexport interface Body {\n  query?: string;\n  operationName?: string;\n  variables?: Record<string, any>;\n  extensions?: Record<string, any>;\n}\n\nexport interface HttpOptions {\n  /**\n   * The URI to use when fetching operations.\n   *\n   * Defaults to '/graphql'.\n   */\n  uri?: string | UriFunction;\n\n  /**\n   * Passes the extensions field to your graphql server.\n   *\n   * Defaults to false.\n   */\n  includeExtensions?: boolean;\n\n  /**\n   * A `fetch`-compatible API to use when making requests.\n   */\n  fetch?: WindowOrWorkerGlobalScope['fetch'];\n\n  /**\n   * An object representing values to be sent as headers on the request.\n   */\n  headers?: any;\n\n  /**\n   * The credentials policy you want to use for the fetch call.\n   */\n  credentials?: string;\n\n  /**\n   * Any overrides of the fetch options argument to pass to the fetch call.\n   */\n  fetchOptions?: any;\n}\n\nconst defaultHttpOptions: HttpQueryOptions = {\n  includeQuery: true,\n  includeExtensions: false,\n};\n\nconst defaultHeaders = {\n  // headers are case insensitive (https://stackoverflow.com/a/5259004)\n  accept: '*/*',\n  'content-type': 'application/json',\n};\n\nconst defaultOptions = {\n  method: 'POST',\n};\n\nexport const fallbackHttpConfig = {\n  http: defaultHttpOptions,\n  headers: defaultHeaders,\n  options: defaultOptions,\n};\n\nexport const throwServerError = (response, result, message) => {\n  const error = new Error(message) as ServerError;\n\n  error.name = 'ServerError';\n  error.response = response;\n  error.statusCode = response.status;\n  error.result = result;\n\n  throw error;\n};\n\n//TODO: when conditional types come in ts 2.8, operations should be a generic type that extends Operation | Array<Operation>\nexport const parseAndCheckHttpResponse = operations => (response: Response) => {\n  return (\n    response\n      .text()\n      .then(bodyText => {\n        try {\n          return JSON.parse(bodyText);\n        } catch (err) {\n          const parseError = err as ServerParseError;\n          parseError.name = 'ServerParseError';\n          parseError.response = response;\n          parseError.statusCode = response.status;\n          parseError.bodyText = bodyText;\n          return Promise.reject(parseError);\n        }\n      })\n      //TODO: when conditional types come out then result should be T extends Array ? Array<FetchResult> : FetchResult\n      .then((result: any) => {\n        if (response.status >= 300) {\n          //Network error\n          throwServerError(\n            response,\n            result,\n            `Response not successful: Received status code ${response.status}`,\n          );\n        }\n        //TODO should really error per response in a Batch based on properties\n        //    - could be done in a validation link\n        if (\n          !Array.isArray(result) &&\n          !result.hasOwnProperty('data') &&\n          !result.hasOwnProperty('errors')\n        ) {\n          //Data error\n          throwServerError(\n            response,\n            result,\n            `Server response was missing for query '${\n              Array.isArray(operations)\n                ? operations.map(op => op.operationName)\n                : operations.operationName\n            }'.`,\n          );\n        }\n        return result;\n      })\n  );\n};\n\nexport const checkFetcher = (fetcher: WindowOrWorkerGlobalScope['fetch']) => {\n  if (!fetcher && typeof fetch === 'undefined') {\n    let library: string = 'unfetch';\n    if (typeof window === 'undefined') library = 'node-fetch';\n    throw new InvariantError(`\nfetch is not found globally and no fetcher passed, to fix pass a fetch for\nyour environment like https://www.npmjs.com/package/${library}.\n\nFor example:\nimport fetch from '${library}';\nimport { createHttpLink } from 'apollo-link-http';\n\nconst link = createHttpLink({ uri: '/graphql', fetch: fetch });`);\n  }\n};\n\nexport const createSignalIfSupported = () => {\n  if (typeof AbortController === 'undefined')\n    return { controller: false, signal: false };\n\n  const controller = new AbortController();\n  const signal = controller.signal;\n  return { controller, signal };\n};\n\nexport const selectHttpOptionsAndBody = (\n  operation: Operation,\n  fallbackConfig: HttpConfig,\n  ...configs: Array<HttpConfig>\n) => {\n  let options: HttpConfig & Record<string, any> = {\n    ...fallbackConfig.options,\n    headers: fallbackConfig.headers,\n    credentials: fallbackConfig.credentials,\n  };\n  let http: HttpQueryOptions = fallbackConfig.http;\n\n  /*\n   * use the rest of the configs to populate the options\n   * configs later in the list will overwrite earlier fields\n   */\n  configs.forEach(config => {\n    options = {\n      ...options,\n      ...config.options,\n      headers: {\n        ...options.headers,\n        ...config.headers,\n      },\n    };\n    if (config.credentials) options.credentials = config.credentials;\n\n    http = {\n      ...http,\n      ...config.http,\n    };\n  });\n\n  //The body depends on the http options\n  const { operationName, extensions, variables, query } = operation;\n  const body: Body = { operationName, variables };\n\n  if (http.includeExtensions) (body as any).extensions = extensions;\n\n  // not sending the query (i.e persisted queries)\n  if (http.includeQuery) (body as any).query = print(query);\n\n  return {\n    options,\n    body,\n  };\n};\n\nexport const serializeFetchParameter = (p, label) => {\n  let serialized;\n  try {\n    serialized = JSON.stringify(p);\n  } catch (e) {\n    const parseError = new InvariantError(\n      `Network request failed. ${label} is not serializable: ${e.message}`,\n    ) as ClientParseError;\n    parseError.parseError = e;\n    throw parseError;\n  }\n  return serialized;\n};\n\n//selects \"/graphql\" by default\nexport const selectURI = (\n  operation,\n  fallbackURI?: string | ((operation: Operation) => string),\n) => {\n  const context = operation.getContext();\n  const contextURI = context.uri;\n\n  if (contextURI) {\n    return contextURI;\n  } else if (typeof fallbackURI === 'function') {\n    return fallbackURI(operation);\n  } else {\n    return (fallbackURI as string) || '/graphql';\n  }\n};\n","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Source = undefined;\n\nvar _invariant = require('../jsutils/invariant');\n\nvar _invariant2 = _interopRequireDefault(_invariant);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n/**\n *  Copyright (c) 2015, Facebook, Inc.\n *  All rights reserved.\n *\n *  This source code is licensed under the BSD-style license found in the\n *  LICENSE file in the root directory of this source tree. An additional grant\n *  of patent rights can be found in the PATENTS file in the same directory.\n */\n\n/**\n * A representation of source input to GraphQL.\n * `name` and `locationOffset` are optional. They are useful for clients who\n * store GraphQL documents in source files; for example, if the GraphQL input\n * starts at line 40 in a file named Foo.graphql, it might be useful for name to\n * be \"Foo.graphql\" and location to be `{ line: 40, column: 0 }`.\n * line and column in locationOffset are 1-indexed\n */\nvar Source = exports.Source = function Source(body, name, locationOffset) {\n  _classCallCheck(this, Source);\n\n  this.body = body;\n  this.name = name || 'GraphQL request';\n  this.locationOffset = locationOffset || { line: 1, column: 1 };\n  !(this.locationOffset.line > 0) ? (0, _invariant2.default)(0, 'line in locationOffset is 1-indexed and must be positive') : void 0;\n  !(this.locationOffset.column > 0) ? (0, _invariant2.default)(0, 'column in locationOffset is 1-indexed and must be positive') : void 0;\n};","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ValidationContext = undefined;\nexports.validate = validate;\n\nvar _invariant = require('../jsutils/invariant');\n\nvar _invariant2 = _interopRequireDefault(_invariant);\n\nvar _error = require('../error');\n\nvar _visitor = require('../language/visitor');\n\nvar _kinds = require('../language/kinds');\n\nvar Kind = _interopRequireWildcard(_kinds);\n\nvar _schema = require('../type/schema');\n\nvar _TypeInfo = require('../utilities/TypeInfo');\n\nvar _specifiedRules = require('./specifiedRules');\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n/**\n *  Copyright (c) 2015, Facebook, Inc.\n *  All rights reserved.\n *\n *  This source code is licensed under the BSD-style license found in the\n *  LICENSE file in the root directory of this source tree. An additional grant\n *  of patent rights can be found in the PATENTS file in the same directory.\n */\n\n/**\n * Implements the \"Validation\" section of the spec.\n *\n * Validation runs synchronously, returning an array of encountered errors, or\n * an empty array if no errors were encountered and the document is valid.\n *\n * A list of specific validation rules may be provided. If not provided, the\n * default list of rules defined by the GraphQL specification will be used.\n *\n * Each validation rules is a function which returns a visitor\n * (see the language/visitor API). Visitor methods are expected to return\n * GraphQLErrors, or Arrays of GraphQLErrors when invalid.\n *\n * Optionally a custom TypeInfo instance may be provided. If not provided, one\n * will be created from the provided schema.\n */\nfunction validate(schema, ast, rules, typeInfo) {\n  !schema ? (0, _invariant2.default)(0, 'Must provide schema') : void 0;\n  !ast ? (0, _invariant2.default)(0, 'Must provide document') : void 0;\n  !(schema instanceof _schema.GraphQLSchema) ? (0, _invariant2.default)(0, 'Schema must be an instance of GraphQLSchema. Also ensure that there are ' + 'not multiple versions of GraphQL installed in your node_modules directory.') : void 0;\n  return visitUsingRules(schema, typeInfo || new _TypeInfo.TypeInfo(schema), ast, rules || _specifiedRules.specifiedRules);\n}\n\n/**\n * This uses a specialized visitor which runs multiple visitors in parallel,\n * while maintaining the visitor skip and break API.\n *\n * @internal\n */\nfunction visitUsingRules(schema, typeInfo, documentAST, rules) {\n  var context = new ValidationContext(schema, documentAST, typeInfo);\n  var visitors = rules.map(function (rule) {\n    return rule(context);\n  });\n  // Visit the whole document with each instance of all provided rules.\n  (0, _visitor.visit)(documentAST, (0, _visitor.visitWithTypeInfo)(typeInfo, (0, _visitor.visitInParallel)(visitors)));\n  return context.getErrors();\n}\n\n/**\n * An instance of this class is passed as the \"this\" context to all validators,\n * allowing access to commonly useful contextual information from within a\n * validation rule.\n */\nvar ValidationContext = exports.ValidationContext = function () {\n  function ValidationContext(schema, ast, typeInfo) {\n    _classCallCheck(this, ValidationContext);\n\n    this._schema = schema;\n    this._ast = ast;\n    this._typeInfo = typeInfo;\n    this._errors = [];\n    this._fragmentSpreads = new Map();\n    this._recursivelyReferencedFragments = new Map();\n    this._variableUsages = new Map();\n    this._recursiveVariableUsages = new Map();\n  }\n\n  ValidationContext.prototype.reportError = function reportError(error) {\n    this._errors.push(error);\n  };\n\n  ValidationContext.prototype.getErrors = function getErrors() {\n    return this._errors;\n  };\n\n  ValidationContext.prototype.getSchema = function getSchema() {\n    return this._schema;\n  };\n\n  ValidationContext.prototype.getDocument = function getDocument() {\n    return this._ast;\n  };\n\n  ValidationContext.prototype.getFragment = function getFragment(name) {\n    var fragments = this._fragments;\n    if (!fragments) {\n      this._fragments = fragments = this.getDocument().definitions.reduce(function (frags, statement) {\n        if (statement.kind === Kind.FRAGMENT_DEFINITION) {\n          frags[statement.name.value] = statement;\n        }\n        return frags;\n      }, Object.create(null));\n    }\n    return fragments[name];\n  };\n\n  ValidationContext.prototype.getFragmentSpreads = function getFragmentSpreads(node) {\n    var spreads = this._fragmentSpreads.get(node);\n    if (!spreads) {\n      spreads = [];\n      var setsToVisit = [node];\n      while (setsToVisit.length !== 0) {\n        var set = setsToVisit.pop();\n        for (var i = 0; i < set.selections.length; i++) {\n          var selection = set.selections[i];\n          if (selection.kind === Kind.FRAGMENT_SPREAD) {\n            spreads.push(selection);\n          } else if (selection.selectionSet) {\n            setsToVisit.push(selection.selectionSet);\n          }\n        }\n      }\n      this._fragmentSpreads.set(node, spreads);\n    }\n    return spreads;\n  };\n\n  ValidationContext.prototype.getRecursivelyReferencedFragments = function getRecursivelyReferencedFragments(operation) {\n    var fragments = this._recursivelyReferencedFragments.get(operation);\n    if (!fragments) {\n      fragments = [];\n      var collectedNames = Object.create(null);\n      var nodesToVisit = [operation.selectionSet];\n      while (nodesToVisit.length !== 0) {\n        var _node = nodesToVisit.pop();\n        var spreads = this.getFragmentSpreads(_node);\n        for (var i = 0; i < spreads.length; i++) {\n          var fragName = spreads[i].name.value;\n          if (collectedNames[fragName] !== true) {\n            collectedNames[fragName] = true;\n            var fragment = this.getFragment(fragName);\n            if (fragment) {\n              fragments.push(fragment);\n              nodesToVisit.push(fragment.selectionSet);\n            }\n          }\n        }\n      }\n      this._recursivelyReferencedFragments.set(operation, fragments);\n    }\n    return fragments;\n  };\n\n  ValidationContext.prototype.getVariableUsages = function getVariableUsages(node) {\n    var usages = this._variableUsages.get(node);\n    if (!usages) {\n      var newUsages = [];\n      var typeInfo = new _TypeInfo.TypeInfo(this._schema);\n      (0, _visitor.visit)(node, (0, _visitor.visitWithTypeInfo)(typeInfo, {\n        VariableDefinition: function VariableDefinition() {\n          return false;\n        },\n        Variable: function Variable(variable) {\n          newUsages.push({ node: variable, type: typeInfo.getInputType() });\n        }\n      }));\n      usages = newUsages;\n      this._variableUsages.set(node, usages);\n    }\n    return usages;\n  };\n\n  ValidationContext.prototype.getRecursiveVariableUsages = function getRecursiveVariableUsages(operation) {\n    var usages = this._recursiveVariableUsages.get(operation);\n    if (!usages) {\n      usages = this.getVariableUsages(operation);\n      var fragments = this.getRecursivelyReferencedFragments(operation);\n      for (var i = 0; i < fragments.length; i++) {\n        Array.prototype.push.apply(usages, this.getVariableUsages(fragments[i]));\n      }\n      this._recursiveVariableUsages.set(operation, usages);\n    }\n    return usages;\n  };\n\n  ValidationContext.prototype.getType = function getType() {\n    return this._typeInfo.getType();\n  };\n\n  ValidationContext.prototype.getParentType = function getParentType() {\n    return this._typeInfo.getParentType();\n  };\n\n  ValidationContext.prototype.getInputType = function getInputType() {\n    return this._typeInfo.getInputType();\n  };\n\n  ValidationContext.prototype.getFieldDef = function getFieldDef() {\n    return this._typeInfo.getFieldDef();\n  };\n\n  ValidationContext.prototype.getDirective = function getDirective() {\n    return this._typeInfo.getDirective();\n  };\n\n  ValidationContext.prototype.getArgument = function getArgument() {\n    return this._typeInfo.getArgument();\n  };\n\n  return ValidationContext;\n}();","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.specifiedRules = undefined;\n\nvar _UniqueOperationNames = require('./rules/UniqueOperationNames');\n\nvar _LoneAnonymousOperation = require('./rules/LoneAnonymousOperation');\n\nvar _SingleFieldSubscriptions = require('./rules/SingleFieldSubscriptions');\n\nvar _KnownTypeNames = require('./rules/KnownTypeNames');\n\nvar _FragmentsOnCompositeTypes = require('./rules/FragmentsOnCompositeTypes');\n\nvar _VariablesAreInputTypes = require('./rules/VariablesAreInputTypes');\n\nvar _ScalarLeafs = require('./rules/ScalarLeafs');\n\nvar _FieldsOnCorrectType = require('./rules/FieldsOnCorrectType');\n\nvar _UniqueFragmentNames = require('./rules/UniqueFragmentNames');\n\nvar _KnownFragmentNames = require('./rules/KnownFragmentNames');\n\nvar _NoUnusedFragments = require('./rules/NoUnusedFragments');\n\nvar _PossibleFragmentSpreads = require('./rules/PossibleFragmentSpreads');\n\nvar _NoFragmentCycles = require('./rules/NoFragmentCycles');\n\nvar _UniqueVariableNames = require('./rules/UniqueVariableNames');\n\nvar _NoUndefinedVariables = require('./rules/NoUndefinedVariables');\n\nvar _NoUnusedVariables = require('./rules/NoUnusedVariables');\n\nvar _KnownDirectives = require('./rules/KnownDirectives');\n\nvar _UniqueDirectivesPerLocation = require('./rules/UniqueDirectivesPerLocation');\n\nvar _KnownArgumentNames = require('./rules/KnownArgumentNames');\n\nvar _UniqueArgumentNames = require('./rules/UniqueArgumentNames');\n\nvar _ArgumentsOfCorrectType = require('./rules/ArgumentsOfCorrectType');\n\nvar _ProvidedNonNullArguments = require('./rules/ProvidedNonNullArguments');\n\nvar _DefaultValuesOfCorrectType = require('./rules/DefaultValuesOfCorrectType');\n\nvar _VariablesInAllowedPosition = require('./rules/VariablesInAllowedPosition');\n\nvar _OverlappingFieldsCanBeMerged = require('./rules/OverlappingFieldsCanBeMerged');\n\nvar _UniqueInputFieldNames = require('./rules/UniqueInputFieldNames');\n\n/**\n * This set includes all validation rules defined by the GraphQL spec.\n *\n * The order of the rules in this list has been adjusted to lead to the\n * most clear output when encountering multiple validation errors.\n */\n\n\n// Spec Section: \"Field Selection Merging\"\n\n\n// Spec Section: \"Variable Default Values Are Correctly Typed\"\n\n\n// Spec Section: \"Argument Values Type Correctness\"\n\n\n// Spec Section: \"Argument Names\"\n\n\n// Spec Section: \"Directives Are Defined\"\n\n\n// Spec Section: \"All Variable Used Defined\"\n\n\n// Spec Section: \"Fragments must not form cycles\"\n\n\n// Spec Section: \"Fragments must be used\"\n\n\n// Spec Section: \"Fragment Name Uniqueness\"\n\n\n// Spec Section: \"Leaf Field Selections\"\n\n\n// Spec Section: \"Fragments on Composite Types\"\n\n\n// Spec Section: \"Subscriptions with Single Root Field\"\n\n/**\n *  Copyright (c) 2015, Facebook, Inc.\n *  All rights reserved.\n *\n *  This source code is licensed under the BSD-style license found in the\n *  LICENSE file in the root directory of this source tree. An additional grant\n *  of patent rights can be found in the PATENTS file in the same directory.\n */\n\n// Spec Section: \"Operation Name Uniqueness\"\nvar specifiedRules = exports.specifiedRules = [_UniqueOperationNames.UniqueOperationNames, _LoneAnonymousOperation.LoneAnonymousOperation, _SingleFieldSubscriptions.SingleFieldSubscriptions, _KnownTypeNames.KnownTypeNames, _FragmentsOnCompositeTypes.FragmentsOnCompositeTypes, _VariablesAreInputTypes.VariablesAreInputTypes, _ScalarLeafs.ScalarLeafs, _FieldsOnCorrectType.FieldsOnCorrectType, _UniqueFragmentNames.UniqueFragmentNames, _KnownFragmentNames.KnownFragmentNames, _NoUnusedFragments.NoUnusedFragments, _PossibleFragmentSpreads.PossibleFragmentSpreads, _NoFragmentCycles.NoFragmentCycles, _UniqueVariableNames.UniqueVariableNames, _NoUndefinedVariables.NoUndefinedVariables, _NoUnusedVariables.NoUnusedVariables, _KnownDirectives.KnownDirectives, _UniqueDirectivesPerLocation.UniqueDirectivesPerLocation, _KnownArgumentNames.KnownArgumentNames, _UniqueArgumentNames.UniqueArgumentNames, _ArgumentsOfCorrectType.ArgumentsOfCorrectType, _ProvidedNonNullArguments.ProvidedNonNullArguments, _DefaultValuesOfCorrectType.DefaultValuesOfCorrectType, _VariablesInAllowedPosition.VariablesInAllowedPosition, _OverlappingFieldsCanBeMerged.OverlappingFieldsCanBeMerged, _UniqueInputFieldNames.UniqueInputFieldNames];\n\n// Spec Section: \"Input Object Field Uniqueness\"\n\n\n// Spec Section: \"All Variable Usages Are Allowed\"\n\n\n// Spec Section: \"Argument Optionality\"\n\n\n// Spec Section: \"Argument Uniqueness\"\n\n\n// Spec Section: \"Directives Are Unique Per Location\"\n\n\n// Spec Section: \"All Variables Used\"\n\n\n// Spec Section: \"Variable Uniqueness\"\n\n\n// Spec Section: \"Fragment spread is possible\"\n\n\n// Spec Section: \"Fragment spread target defined\"\n\n\n// Spec Section: \"Field Selections on Objects, Interfaces, and Unions Types\"\n\n\n// Spec Section: \"Variables are Input Types\"\n\n\n// Spec Section: \"Fragment Spread Type Existence\"\n\n\n// Spec Section: \"Lone Anonymous Operation\"","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.duplicateOperationNameMessage = duplicateOperationNameMessage;\nexports.UniqueOperationNames = UniqueOperationNames;\n\nvar _error = require('../../error');\n\n/**\n *  Copyright (c) 2015, Facebook, Inc.\n *  All rights reserved.\n *\n *  This source code is licensed under the BSD-style license found in the\n *  LICENSE file in the root directory of this source tree. An additional grant\n *  of patent rights can be found in the PATENTS file in the same directory.\n */\n\nfunction duplicateOperationNameMessage(operationName) {\n  return 'There can be only one operation named \"' + operationName + '\".';\n}\n\n/**\n * Unique operation names\n *\n * A GraphQL document is only valid if all defined operations have unique names.\n */\nfunction UniqueOperationNames(context) {\n  var knownOperationNames = Object.create(null);\n  return {\n    OperationDefinition: function OperationDefinition(node) {\n      var operationName = node.name;\n      if (operationName) {\n        if (knownOperationNames[operationName.value]) {\n          context.reportError(new _error.GraphQLError(duplicateOperationNameMessage(operationName.value), [knownOperationNames[operationName.value], operationName]));\n        } else {\n          knownOperationNames[operationName.value] = operationName;\n        }\n      }\n      return false;\n    },\n\n    FragmentDefinition: function FragmentDefinition() {\n      return false;\n    }\n  };\n}","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.anonOperationNotAloneMessage = anonOperationNotAloneMessage;\nexports.LoneAnonymousOperation = LoneAnonymousOperation;\n\nvar _error = require('../../error');\n\nvar _kinds = require('../../language/kinds');\n\nfunction anonOperationNotAloneMessage() {\n  return 'This anonymous operation must be the only defined operation.';\n}\n\n/**\n * Lone anonymous operation\n *\n * A GraphQL document is only valid if when it contains an anonymous operation\n * (the query short-hand) that it contains only that one operation definition.\n */\n\n/**\n *  Copyright (c) 2015, Facebook, Inc.\n *  All rights reserved.\n *\n *  This source code is licensed under the BSD-style license found in the\n *  LICENSE file in the root directory of this source tree. An additional grant\n *  of patent rights can be found in the PATENTS file in the same directory.\n */\n\nfunction LoneAnonymousOperation(context) {\n  var operationCount = 0;\n  return {\n    Document: function Document(node) {\n      operationCount = node.definitions.filter(function (definition) {\n        return definition.kind === _kinds.OPERATION_DEFINITION;\n      }).length;\n    },\n    OperationDefinition: function OperationDefinition(node) {\n      if (!node.name && operationCount > 1) {\n        context.reportError(new _error.GraphQLError(anonOperationNotAloneMessage(), [node]));\n      }\n    }\n  };\n}","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.singleFieldOnlyMessage = singleFieldOnlyMessage;\nexports.SingleFieldSubscriptions = SingleFieldSubscriptions;\n\nvar _error = require('../../error');\n\n/**\n *  Copyright (c) 2015, Facebook, Inc.\n *  All rights reserved.\n *\n *  This source code is licensed under the BSD-style license found in the\n *  LICENSE file in the root directory of this source tree. An additional grant\n *  of patent rights can be found in the PATENTS file in the same directory.\n */\n\nfunction singleFieldOnlyMessage(name) {\n  return (name ? 'Subscription \"' + name + '\" ' : 'Anonymous Subscription ') + 'must select only one top level field.';\n}\n\n/**\n * Subscriptions must only include one field.\n *\n * A GraphQL subscription is valid only if it contains a single root field.\n */\nfunction SingleFieldSubscriptions(context) {\n  return {\n    OperationDefinition: function OperationDefinition(node) {\n      if (node.operation === 'subscription') {\n        if (node.selectionSet.selections.length !== 1) {\n          context.reportError(new _error.GraphQLError(singleFieldOnlyMessage(node.name && node.name.value), node.selectionSet.selections.slice(1)));\n        }\n      }\n    }\n  };\n}","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.unknownTypeMessage = unknownTypeMessage;\nexports.KnownTypeNames = KnownTypeNames;\n\nvar _error = require('../../error');\n\nvar _suggestionList = require('../../jsutils/suggestionList');\n\nvar _suggestionList2 = _interopRequireDefault(_suggestionList);\n\nvar _quotedOrList = require('../../jsutils/quotedOrList');\n\nvar _quotedOrList2 = _interopRequireDefault(_quotedOrList);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n *  Copyright (c) 2015, Facebook, Inc.\n *  All rights reserved.\n *\n *  This source code is licensed under the BSD-style license found in the\n *  LICENSE file in the root directory of this source tree. An additional grant\n *  of patent rights can be found in the PATENTS file in the same directory.\n */\n\nfunction unknownTypeMessage(type, suggestedTypes) {\n  var message = 'Unknown type \"' + String(type) + '\".';\n  if (suggestedTypes.length) {\n    message += ' Did you mean ' + (0, _quotedOrList2.default)(suggestedTypes) + '?';\n  }\n  return message;\n}\n\n/**\n * Known type names\n *\n * A GraphQL document is only valid if referenced types (specifically\n * variable definitions and fragment conditions) are defined by the type schema.\n */\nfunction KnownTypeNames(context) {\n  return {\n    // TODO: when validating IDL, re-enable these. Experimental version does not\n    // add unreferenced types, resulting in false-positive errors. Squelched\n    // errors for now.\n    ObjectTypeDefinition: function ObjectTypeDefinition() {\n      return false;\n    },\n    InterfaceTypeDefinition: function InterfaceTypeDefinition() {\n      return false;\n    },\n    UnionTypeDefinition: function UnionTypeDefinition() {\n      return false;\n    },\n    InputObjectTypeDefinition: function InputObjectTypeDefinition() {\n      return false;\n    },\n    NamedType: function NamedType(node) {\n      var schema = context.getSchema();\n      var typeName = node.name.value;\n      var type = schema.getType(typeName);\n      if (!type) {\n        context.reportError(new _error.GraphQLError(unknownTypeMessage(typeName, (0, _suggestionList2.default)(typeName, Object.keys(schema.getTypeMap()))), [node]));\n      }\n    }\n  };\n}","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.inlineFragmentOnNonCompositeErrorMessage = inlineFragmentOnNonCompositeErrorMessage;\nexports.fragmentOnNonCompositeErrorMessage = fragmentOnNonCompositeErrorMessage;\nexports.FragmentsOnCompositeTypes = FragmentsOnCompositeTypes;\n\nvar _error = require('../../error');\n\nvar _printer = require('../../language/printer');\n\nvar _definition = require('../../type/definition');\n\nvar _typeFromAST = require('../../utilities/typeFromAST');\n\nfunction inlineFragmentOnNonCompositeErrorMessage(type) {\n  return 'Fragment cannot condition on non composite type \"' + String(type) + '\".';\n}\n/**\n *  Copyright (c) 2015, Facebook, Inc.\n *  All rights reserved.\n *\n *  This source code is licensed under the BSD-style license found in the\n *  LICENSE file in the root directory of this source tree. An additional grant\n *  of patent rights can be found in the PATENTS file in the same directory.\n */\n\nfunction fragmentOnNonCompositeErrorMessage(fragName, type) {\n  return 'Fragment \"' + fragName + '\" cannot condition on non composite ' + ('type \"' + String(type) + '\".');\n}\n\n/**\n * Fragments on composite type\n *\n * Fragments use a type condition to determine if they apply, since fragments\n * can only be spread into a composite type (object, interface, or union), the\n * type condition must also be a composite type.\n */\nfunction FragmentsOnCompositeTypes(context) {\n  return {\n    InlineFragment: function InlineFragment(node) {\n      if (node.typeCondition) {\n        var type = (0, _typeFromAST.typeFromAST)(context.getSchema(), node.typeCondition);\n        if (type && !(0, _definition.isCompositeType)(type)) {\n          context.reportError(new _error.GraphQLError(inlineFragmentOnNonCompositeErrorMessage((0, _printer.print)(node.typeCondition)), [node.typeCondition]));\n        }\n      }\n    },\n    FragmentDefinition: function FragmentDefinition(node) {\n      var type = (0, _typeFromAST.typeFromAST)(context.getSchema(), node.typeCondition);\n      if (type && !(0, _definition.isCompositeType)(type)) {\n        context.reportError(new _error.GraphQLError(fragmentOnNonCompositeErrorMessage(node.name.value, (0, _printer.print)(node.typeCondition)), [node.typeCondition]));\n      }\n    }\n  };\n}","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.nonInputTypeOnVarMessage = nonInputTypeOnVarMessage;\nexports.VariablesAreInputTypes = VariablesAreInputTypes;\n\nvar _error = require('../../error');\n\nvar _printer = require('../../language/printer');\n\nvar _definition = require('../../type/definition');\n\nvar _typeFromAST = require('../../utilities/typeFromAST');\n\nfunction nonInputTypeOnVarMessage(variableName, typeName) {\n  return 'Variable \"$' + variableName + '\" cannot be non-input type \"' + typeName + '\".';\n}\n\n/**\n * Variables are input types\n *\n * A GraphQL operation is only valid if all the variables it defines are of\n * input types (scalar, enum, or input object).\n */\n\n/**\n *  Copyright (c) 2015, Facebook, Inc.\n *  All rights reserved.\n *\n *  This source code is licensed under the BSD-style license found in the\n *  LICENSE file in the root directory of this source tree. An additional grant\n *  of patent rights can be found in the PATENTS file in the same directory.\n */\n\nfunction VariablesAreInputTypes(context) {\n  return {\n    VariableDefinition: function VariableDefinition(node) {\n      var type = (0, _typeFromAST.typeFromAST)(context.getSchema(), node.type);\n\n      // If the variable type is not an input type, return an error.\n      if (type && !(0, _definition.isInputType)(type)) {\n        var variableName = node.variable.name.value;\n        context.reportError(new _error.GraphQLError(nonInputTypeOnVarMessage(variableName, (0, _printer.print)(node.type)), [node.type]));\n      }\n    }\n  };\n}","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.noSubselectionAllowedMessage = noSubselectionAllowedMessage;\nexports.requiredSubselectionMessage = requiredSubselectionMessage;\nexports.ScalarLeafs = ScalarLeafs;\n\nvar _error = require('../../error');\n\nvar _definition = require('../../type/definition');\n\nfunction noSubselectionAllowedMessage(fieldName, type) {\n  return 'Field \"' + fieldName + '\" must not have a selection since ' + ('type \"' + String(type) + '\" has no subfields.');\n}\n/**\n *  Copyright (c) 2015, Facebook, Inc.\n *  All rights reserved.\n *\n *  This source code is licensed under the BSD-style license found in the\n *  LICENSE file in the root directory of this source tree. An additional grant\n *  of patent rights can be found in the PATENTS file in the same directory.\n */\n\nfunction requiredSubselectionMessage(fieldName, type) {\n  return 'Field \"' + fieldName + '\" of type \"' + String(type) + '\" must have a ' + ('selection of subfields. Did you mean \"' + fieldName + ' { ... }\"?');\n}\n\n/**\n * Scalar leafs\n *\n * A GraphQL document is valid only if all leaf fields (fields without\n * sub selections) are of scalar or enum types.\n */\nfunction ScalarLeafs(context) {\n  return {\n    Field: function Field(node) {\n      var type = context.getType();\n      if (type) {\n        if ((0, _definition.isLeafType)((0, _definition.getNamedType)(type))) {\n          if (node.selectionSet) {\n            context.reportError(new _error.GraphQLError(noSubselectionAllowedMessage(node.name.value, type), [node.selectionSet]));\n          }\n        } else if (!node.selectionSet) {\n          context.reportError(new _error.GraphQLError(requiredSubselectionMessage(node.name.value, type), [node]));\n        }\n      }\n    }\n  };\n}","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.undefinedFieldMessage = undefinedFieldMessage;\nexports.FieldsOnCorrectType = FieldsOnCorrectType;\n\nvar _error = require('../../error');\n\nvar _suggestionList = require('../../jsutils/suggestionList');\n\nvar _suggestionList2 = _interopRequireDefault(_suggestionList);\n\nvar _quotedOrList = require('../../jsutils/quotedOrList');\n\nvar _quotedOrList2 = _interopRequireDefault(_quotedOrList);\n\nvar _definition = require('../../type/definition');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction undefinedFieldMessage(fieldName, type, suggestedTypeNames, suggestedFieldNames) {\n  var message = 'Cannot query field \"' + fieldName + '\" on type \"' + type + '\".';\n  if (suggestedTypeNames.length !== 0) {\n    var suggestions = (0, _quotedOrList2.default)(suggestedTypeNames);\n    message += ' Did you mean to use an inline fragment on ' + suggestions + '?';\n  } else if (suggestedFieldNames.length !== 0) {\n    message += ' Did you mean ' + (0, _quotedOrList2.default)(suggestedFieldNames) + '?';\n  }\n  return message;\n}\n\n/**\n * Fields on correct type\n *\n * A GraphQL document is only valid if all fields selected are defined by the\n * parent type, or are an allowed meta field such as __typename.\n */\n\n/**\n *  Copyright (c) 2015, Facebook, Inc.\n *  All rights reserved.\n *\n *  This source code is licensed under the BSD-style license found in the\n *  LICENSE file in the root directory of this source tree. An additional grant\n *  of patent rights can be found in the PATENTS file in the same directory.\n */\n\nfunction FieldsOnCorrectType(context) {\n  return {\n    Field: function Field(node) {\n      var type = context.getParentType();\n      if (type) {\n        var fieldDef = context.getFieldDef();\n        if (!fieldDef) {\n          // This field doesn't exist, lets look for suggestions.\n          var schema = context.getSchema();\n          var fieldName = node.name.value;\n          // First determine if there are any suggested types to condition on.\n          var suggestedTypeNames = getSuggestedTypeNames(schema, type, fieldName);\n          // If there are no suggested types, then perhaps this was a typo?\n          var suggestedFieldNames = suggestedTypeNames.length !== 0 ? [] : getSuggestedFieldNames(schema, type, fieldName);\n\n          // Report an error, including helpful suggestions.\n          context.reportError(new _error.GraphQLError(undefinedFieldMessage(fieldName, type.name, suggestedTypeNames, suggestedFieldNames), [node]));\n        }\n      }\n    }\n  };\n}\n\n/**\n * Go through all of the implementations of type, as well as the interfaces\n * that they implement. If any of those types include the provided field,\n * suggest them, sorted by how often the type is referenced,  starting\n * with Interfaces.\n */\nfunction getSuggestedTypeNames(schema, type, fieldName) {\n  if ((0, _definition.isAbstractType)(type)) {\n    var suggestedObjectTypes = [];\n    var interfaceUsageCount = Object.create(null);\n    schema.getPossibleTypes(type).forEach(function (possibleType) {\n      if (!possibleType.getFields()[fieldName]) {\n        return;\n      }\n      // This object type defines this field.\n      suggestedObjectTypes.push(possibleType.name);\n      possibleType.getInterfaces().forEach(function (possibleInterface) {\n        if (!possibleInterface.getFields()[fieldName]) {\n          return;\n        }\n        // This interface type defines this field.\n        interfaceUsageCount[possibleInterface.name] = (interfaceUsageCount[possibleInterface.name] || 0) + 1;\n      });\n    });\n\n    // Suggest interface types based on how common they are.\n    var suggestedInterfaceTypes = Object.keys(interfaceUsageCount).sort(function (a, b) {\n      return interfaceUsageCount[b] - interfaceUsageCount[a];\n    });\n\n    // Suggest both interface and object types.\n    return suggestedInterfaceTypes.concat(suggestedObjectTypes);\n  }\n\n  // Otherwise, must be an Object type, which does not have possible fields.\n  return [];\n}\n\n/**\n * For the field name provided, determine if there are any similar field names\n * that may be the result of a typo.\n */\nfunction getSuggestedFieldNames(schema, type, fieldName) {\n  if (type instanceof _definition.GraphQLObjectType || type instanceof _definition.GraphQLInterfaceType) {\n    var possibleFieldNames = Object.keys(type.getFields());\n    return (0, _suggestionList2.default)(fieldName, possibleFieldNames);\n  }\n  // Otherwise, must be a Union type, which does not define fields.\n  return [];\n}","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.duplicateFragmentNameMessage = duplicateFragmentNameMessage;\nexports.UniqueFragmentNames = UniqueFragmentNames;\n\nvar _error = require('../../error');\n\n/**\n *  Copyright (c) 2015, Facebook, Inc.\n *  All rights reserved.\n *\n *  This source code is licensed under the BSD-style license found in the\n *  LICENSE file in the root directory of this source tree. An additional grant\n *  of patent rights can be found in the PATENTS file in the same directory.\n */\n\nfunction duplicateFragmentNameMessage(fragName) {\n  return 'There can be only one fragment named \"' + fragName + '\".';\n}\n\n/**\n * Unique fragment names\n *\n * A GraphQL document is only valid if all defined fragments have unique names.\n */\nfunction UniqueFragmentNames(context) {\n  var knownFragmentNames = Object.create(null);\n  return {\n    OperationDefinition: function OperationDefinition() {\n      return false;\n    },\n    FragmentDefinition: function FragmentDefinition(node) {\n      var fragmentName = node.name.value;\n      if (knownFragmentNames[fragmentName]) {\n        context.reportError(new _error.GraphQLError(duplicateFragmentNameMessage(fragmentName), [knownFragmentNames[fragmentName], node.name]));\n      } else {\n        knownFragmentNames[fragmentName] = node.name;\n      }\n      return false;\n    }\n  };\n}","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.unknownFragmentMessage = unknownFragmentMessage;\nexports.KnownFragmentNames = KnownFragmentNames;\n\nvar _error = require('../../error');\n\n/**\n *  Copyright (c) 2015, Facebook, Inc.\n *  All rights reserved.\n *\n *  This source code is licensed under the BSD-style license found in the\n *  LICENSE file in the root directory of this source tree. An additional grant\n *  of patent rights can be found in the PATENTS file in the same directory.\n */\n\nfunction unknownFragmentMessage(fragName) {\n  return 'Unknown fragment \"' + fragName + '\".';\n}\n\n/**\n * Known fragment names\n *\n * A GraphQL document is only valid if all `...Fragment` fragment spreads refer\n * to fragments defined in the same document.\n */\nfunction KnownFragmentNames(context) {\n  return {\n    FragmentSpread: function FragmentSpread(node) {\n      var fragmentName = node.name.value;\n      var fragment = context.getFragment(fragmentName);\n      if (!fragment) {\n        context.reportError(new _error.GraphQLError(unknownFragmentMessage(fragmentName), [node.name]));\n      }\n    }\n  };\n}","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.unusedFragMessage = unusedFragMessage;\nexports.NoUnusedFragments = NoUnusedFragments;\n\nvar _error = require('../../error');\n\n/**\n *  Copyright (c) 2015, Facebook, Inc.\n *  All rights reserved.\n *\n *  This source code is licensed under the BSD-style license found in the\n *  LICENSE file in the root directory of this source tree. An additional grant\n *  of patent rights can be found in the PATENTS file in the same directory.\n */\n\nfunction unusedFragMessage(fragName) {\n  return 'Fragment \"' + fragName + '\" is never used.';\n}\n\n/**\n * No unused fragments\n *\n * A GraphQL document is only valid if all fragment definitions are spread\n * within operations, or spread within other fragments spread within operations.\n */\nfunction NoUnusedFragments(context) {\n  var operationDefs = [];\n  var fragmentDefs = [];\n\n  return {\n    OperationDefinition: function OperationDefinition(node) {\n      operationDefs.push(node);\n      return false;\n    },\n    FragmentDefinition: function FragmentDefinition(node) {\n      fragmentDefs.push(node);\n      return false;\n    },\n\n    Document: {\n      leave: function leave() {\n        var fragmentNameUsed = Object.create(null);\n        operationDefs.forEach(function (operation) {\n          context.getRecursivelyReferencedFragments(operation).forEach(function (fragment) {\n            fragmentNameUsed[fragment.name.value] = true;\n          });\n        });\n\n        fragmentDefs.forEach(function (fragmentDef) {\n          var fragName = fragmentDef.name.value;\n          if (fragmentNameUsed[fragName] !== true) {\n            context.reportError(new _error.GraphQLError(unusedFragMessage(fragName), [fragmentDef]));\n          }\n        });\n      }\n    }\n  };\n}","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.typeIncompatibleSpreadMessage = typeIncompatibleSpreadMessage;\nexports.typeIncompatibleAnonSpreadMessage = typeIncompatibleAnonSpreadMessage;\nexports.PossibleFragmentSpreads = PossibleFragmentSpreads;\n\nvar _error = require('../../error');\n\nvar _typeComparators = require('../../utilities/typeComparators');\n\nvar _typeFromAST = require('../../utilities/typeFromAST');\n\n/**\n *  Copyright (c) 2015, Facebook, Inc.\n *  All rights reserved.\n *\n *  This source code is licensed under the BSD-style license found in the\n *  LICENSE file in the root directory of this source tree. An additional grant\n *  of patent rights can be found in the PATENTS file in the same directory.\n */\n\nfunction typeIncompatibleSpreadMessage(fragName, parentType, fragType) {\n  return 'Fragment \"' + fragName + '\" cannot be spread here as objects of ' + ('type \"' + String(parentType) + '\" can never be of type \"' + String(fragType) + '\".');\n}\n\nfunction typeIncompatibleAnonSpreadMessage(parentType, fragType) {\n  return 'Fragment cannot be spread here as objects of ' + ('type \"' + String(parentType) + '\" can never be of type \"' + String(fragType) + '\".');\n}\n\n/**\n * Possible fragment spread\n *\n * A fragment spread is only valid if the type condition could ever possibly\n * be true: if there is a non-empty intersection of the possible parent types,\n * and possible types which pass the type condition.\n */\nfunction PossibleFragmentSpreads(context) {\n  return {\n    InlineFragment: function InlineFragment(node) {\n      var fragType = context.getType();\n      var parentType = context.getParentType();\n      if (fragType && parentType && !(0, _typeComparators.doTypesOverlap)(context.getSchema(), fragType, parentType)) {\n        context.reportError(new _error.GraphQLError(typeIncompatibleAnonSpreadMessage(parentType, fragType), [node]));\n      }\n    },\n    FragmentSpread: function FragmentSpread(node) {\n      var fragName = node.name.value;\n      var fragType = getFragmentType(context, fragName);\n      var parentType = context.getParentType();\n      if (fragType && parentType && !(0, _typeComparators.doTypesOverlap)(context.getSchema(), fragType, parentType)) {\n        context.reportError(new _error.GraphQLError(typeIncompatibleSpreadMessage(fragName, parentType, fragType), [node]));\n      }\n    }\n  };\n}\n\nfunction getFragmentType(context, name) {\n  var frag = context.getFragment(name);\n  return frag && (0, _typeFromAST.typeFromAST)(context.getSchema(), frag.typeCondition);\n}","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.cycleErrorMessage = cycleErrorMessage;\nexports.NoFragmentCycles = NoFragmentCycles;\n\nvar _error = require('../../error');\n\n/**\n *  Copyright (c) 2015, Facebook, Inc.\n *  All rights reserved.\n *\n *  This source code is licensed under the BSD-style license found in the\n *  LICENSE file in the root directory of this source tree. An additional grant\n *  of patent rights can be found in the PATENTS file in the same directory.\n */\n\nfunction cycleErrorMessage(fragName, spreadNames) {\n  var via = spreadNames.length ? ' via ' + spreadNames.join(', ') : '';\n  return 'Cannot spread fragment \"' + fragName + '\" within itself' + via + '.';\n}\n\nfunction NoFragmentCycles(context) {\n  // Tracks already visited fragments to maintain O(N) and to ensure that cycles\n  // are not redundantly reported.\n  var visitedFrags = Object.create(null);\n\n  // Array of AST nodes used to produce meaningful errors\n  var spreadPath = [];\n\n  // Position in the spread path\n  var spreadPathIndexByName = Object.create(null);\n\n  return {\n    OperationDefinition: function OperationDefinition() {\n      return false;\n    },\n    FragmentDefinition: function FragmentDefinition(node) {\n      if (!visitedFrags[node.name.value]) {\n        detectCycleRecursive(node);\n      }\n      return false;\n    }\n  };\n\n  // This does a straight-forward DFS to find cycles.\n  // It does not terminate when a cycle was found but continues to explore\n  // the graph to find all possible cycles.\n  function detectCycleRecursive(fragment) {\n    var fragmentName = fragment.name.value;\n    visitedFrags[fragmentName] = true;\n\n    var spreadNodes = context.getFragmentSpreads(fragment.selectionSet);\n    if (spreadNodes.length === 0) {\n      return;\n    }\n\n    spreadPathIndexByName[fragmentName] = spreadPath.length;\n\n    for (var i = 0; i < spreadNodes.length; i++) {\n      var spreadNode = spreadNodes[i];\n      var spreadName = spreadNode.name.value;\n      var cycleIndex = spreadPathIndexByName[spreadName];\n\n      if (cycleIndex === undefined) {\n        spreadPath.push(spreadNode);\n        if (!visitedFrags[spreadName]) {\n          var spreadFragment = context.getFragment(spreadName);\n          if (spreadFragment) {\n            detectCycleRecursive(spreadFragment);\n          }\n        }\n        spreadPath.pop();\n      } else {\n        var cyclePath = spreadPath.slice(cycleIndex);\n        context.reportError(new _error.GraphQLError(cycleErrorMessage(spreadName, cyclePath.map(function (s) {\n          return s.name.value;\n        })), cyclePath.concat(spreadNode)));\n      }\n    }\n\n    spreadPathIndexByName[fragmentName] = undefined;\n  }\n}","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.duplicateVariableMessage = duplicateVariableMessage;\nexports.UniqueVariableNames = UniqueVariableNames;\n\nvar _error = require('../../error');\n\nfunction duplicateVariableMessage(variableName) {\n  return 'There can be only one variable named \"' + variableName + '\".';\n}\n\n/**\n * Unique variable names\n *\n * A GraphQL operation is only valid if all its variables are uniquely named.\n */\n\n/**\n *  Copyright (c) 2015, Facebook, Inc.\n *  All rights reserved.\n *\n *  This source code is licensed under the BSD-style license found in the\n *  LICENSE file in the root directory of this source tree. An additional grant\n *  of patent rights can be found in the PATENTS file in the same directory.\n */\n\nfunction UniqueVariableNames(context) {\n  var knownVariableNames = Object.create(null);\n  return {\n    OperationDefinition: function OperationDefinition() {\n      knownVariableNames = Object.create(null);\n    },\n    VariableDefinition: function VariableDefinition(node) {\n      var variableName = node.variable.name.value;\n      if (knownVariableNames[variableName]) {\n        context.reportError(new _error.GraphQLError(duplicateVariableMessage(variableName), [knownVariableNames[variableName], node.variable.name]));\n      } else {\n        knownVariableNames[variableName] = node.variable.name;\n      }\n    }\n  };\n}","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.undefinedVarMessage = undefinedVarMessage;\nexports.NoUndefinedVariables = NoUndefinedVariables;\n\nvar _error = require('../../error');\n\n/**\n *  Copyright (c) 2015, Facebook, Inc.\n *  All rights reserved.\n *\n *  This source code is licensed under the BSD-style license found in the\n *  LICENSE file in the root directory of this source tree. An additional grant\n *  of patent rights can be found in the PATENTS file in the same directory.\n */\n\nfunction undefinedVarMessage(varName, opName) {\n  return opName ? 'Variable \"$' + varName + '\" is not defined by operation \"' + opName + '\".' : 'Variable \"$' + varName + '\" is not defined.';\n}\n\n/**\n * No undefined variables\n *\n * A GraphQL operation is only valid if all variables encountered, both directly\n * and via fragment spreads, are defined by that operation.\n */\nfunction NoUndefinedVariables(context) {\n  var variableNameDefined = Object.create(null);\n\n  return {\n    OperationDefinition: {\n      enter: function enter() {\n        variableNameDefined = Object.create(null);\n      },\n      leave: function leave(operation) {\n        var usages = context.getRecursiveVariableUsages(operation);\n\n        usages.forEach(function (_ref) {\n          var node = _ref.node;\n\n          var varName = node.name.value;\n          if (variableNameDefined[varName] !== true) {\n            context.reportError(new _error.GraphQLError(undefinedVarMessage(varName, operation.name && operation.name.value), [node, operation]));\n          }\n        });\n      }\n    },\n    VariableDefinition: function VariableDefinition(node) {\n      variableNameDefined[node.variable.name.value] = true;\n    }\n  };\n}","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.unusedVariableMessage = unusedVariableMessage;\nexports.NoUnusedVariables = NoUnusedVariables;\n\nvar _error = require('../../error');\n\n/**\n *  Copyright (c) 2015, Facebook, Inc.\n *  All rights reserved.\n *\n *  This source code is licensed under the BSD-style license found in the\n *  LICENSE file in the root directory of this source tree. An additional grant\n *  of patent rights can be found in the PATENTS file in the same directory.\n */\n\nfunction unusedVariableMessage(varName, opName) {\n  return opName ? 'Variable \"$' + varName + '\" is never used in operation \"' + opName + '\".' : 'Variable \"$' + varName + '\" is never used.';\n}\n\n/**\n * No unused variables\n *\n * A GraphQL operation is only valid if all variables defined by an operation\n * are used, either directly or within a spread fragment.\n */\nfunction NoUnusedVariables(context) {\n  var variableDefs = [];\n\n  return {\n    OperationDefinition: {\n      enter: function enter() {\n        variableDefs = [];\n      },\n      leave: function leave(operation) {\n        var variableNameUsed = Object.create(null);\n        var usages = context.getRecursiveVariableUsages(operation);\n        var opName = operation.name ? operation.name.value : null;\n\n        usages.forEach(function (_ref) {\n          var node = _ref.node;\n\n          variableNameUsed[node.name.value] = true;\n        });\n\n        variableDefs.forEach(function (variableDef) {\n          var variableName = variableDef.variable.name.value;\n          if (variableNameUsed[variableName] !== true) {\n            context.reportError(new _error.GraphQLError(unusedVariableMessage(variableName, opName), [variableDef]));\n          }\n        });\n      }\n    },\n    VariableDefinition: function VariableDefinition(def) {\n      variableDefs.push(def);\n    }\n  };\n}","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.unknownDirectiveMessage = unknownDirectiveMessage;\nexports.misplacedDirectiveMessage = misplacedDirectiveMessage;\nexports.KnownDirectives = KnownDirectives;\n\nvar _error = require('../../error');\n\nvar _find = require('../../jsutils/find');\n\nvar _find2 = _interopRequireDefault(_find);\n\nvar _kinds = require('../../language/kinds');\n\nvar Kind = _interopRequireWildcard(_kinds);\n\nvar _directives = require('../../type/directives');\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction unknownDirectiveMessage(directiveName) {\n  return 'Unknown directive \"' + directiveName + '\".';\n}\n/**\n *  Copyright (c) 2015, Facebook, Inc.\n *  All rights reserved.\n *\n *  This source code is licensed under the BSD-style license found in the\n *  LICENSE file in the root directory of this source tree. An additional grant\n *  of patent rights can be found in the PATENTS file in the same directory.\n */\n\nfunction misplacedDirectiveMessage(directiveName, location) {\n  return 'Directive \"' + directiveName + '\" may not be used on ' + location + '.';\n}\n\n/**\n * Known directives\n *\n * A GraphQL document is only valid if all `@directives` are known by the\n * schema and legally positioned.\n */\nfunction KnownDirectives(context) {\n  return {\n    Directive: function Directive(node, key, parent, path, ancestors) {\n      var directiveDef = (0, _find2.default)(context.getSchema().getDirectives(), function (def) {\n        return def.name === node.name.value;\n      });\n      if (!directiveDef) {\n        context.reportError(new _error.GraphQLError(unknownDirectiveMessage(node.name.value), [node]));\n        return;\n      }\n      var candidateLocation = getDirectiveLocationForASTPath(ancestors);\n      if (!candidateLocation) {\n        context.reportError(new _error.GraphQLError(misplacedDirectiveMessage(node.name.value, node.type), [node]));\n      } else if (directiveDef.locations.indexOf(candidateLocation) === -1) {\n        context.reportError(new _error.GraphQLError(misplacedDirectiveMessage(node.name.value, candidateLocation), [node]));\n      }\n    }\n  };\n}\n\nfunction getDirectiveLocationForASTPath(ancestors) {\n  var appliedTo = ancestors[ancestors.length - 1];\n  switch (appliedTo.kind) {\n    case Kind.OPERATION_DEFINITION:\n      switch (appliedTo.operation) {\n        case 'query':\n          return _directives.DirectiveLocation.QUERY;\n        case 'mutation':\n          return _directives.DirectiveLocation.MUTATION;\n        case 'subscription':\n          return _directives.DirectiveLocation.SUBSCRIPTION;\n      }\n      break;\n    case Kind.FIELD:\n      return _directives.DirectiveLocation.FIELD;\n    case Kind.FRAGMENT_SPREAD:\n      return _directives.DirectiveLocation.FRAGMENT_SPREAD;\n    case Kind.INLINE_FRAGMENT:\n      return _directives.DirectiveLocation.INLINE_FRAGMENT;\n    case Kind.FRAGMENT_DEFINITION:\n      return _directives.DirectiveLocation.FRAGMENT_DEFINITION;\n    case Kind.SCHEMA_DEFINITION:\n      return _directives.DirectiveLocation.SCHEMA;\n    case Kind.SCALAR_TYPE_DEFINITION:\n      return _directives.DirectiveLocation.SCALAR;\n    case Kind.OBJECT_TYPE_DEFINITION:\n      return _directives.DirectiveLocation.OBJECT;\n    case Kind.FIELD_DEFINITION:\n      return _directives.DirectiveLocation.FIELD_DEFINITION;\n    case Kind.INTERFACE_TYPE_DEFINITION:\n      return _directives.DirectiveLocation.INTERFACE;\n    case Kind.UNION_TYPE_DEFINITION:\n      return _directives.DirectiveLocation.UNION;\n    case Kind.ENUM_TYPE_DEFINITION:\n      return _directives.DirectiveLocation.ENUM;\n    case Kind.ENUM_VALUE_DEFINITION:\n      return _directives.DirectiveLocation.ENUM_VALUE;\n    case Kind.INPUT_OBJECT_TYPE_DEFINITION:\n      return _directives.DirectiveLocation.INPUT_OBJECT;\n    case Kind.INPUT_VALUE_DEFINITION:\n      var parentNode = ancestors[ancestors.length - 3];\n      return parentNode.kind === Kind.INPUT_OBJECT_TYPE_DEFINITION ? _directives.DirectiveLocation.INPUT_FIELD_DEFINITION : _directives.DirectiveLocation.ARGUMENT_DEFINITION;\n  }\n}","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.duplicateDirectiveMessage = duplicateDirectiveMessage;\nexports.UniqueDirectivesPerLocation = UniqueDirectivesPerLocation;\n\nvar _error = require('../../error');\n\n/**\n *  Copyright (c) 2015, Facebook, Inc.\n *  All rights reserved.\n *\n *  This source code is licensed under the BSD-style license found in the\n *  LICENSE file in the root directory of this source tree. An additional grant\n *  of patent rights can be found in the PATENTS file in the same directory.\n */\n\nfunction duplicateDirectiveMessage(directiveName) {\n  return 'The directive \"' + directiveName + '\" can only be used once at ' + 'this location.';\n}\n\n/**\n * Unique directive names per location\n *\n * A GraphQL document is only valid if all directives at a given location\n * are uniquely named.\n */\nfunction UniqueDirectivesPerLocation(context) {\n  return {\n    // Many different AST nodes may contain directives. Rather than listing\n    // them all, just listen for entering any node, and check to see if it\n    // defines any directives.\n    enter: function enter(node) {\n      if (node.directives) {\n        var knownDirectives = Object.create(null);\n        node.directives.forEach(function (directive) {\n          var directiveName = directive.name.value;\n          if (knownDirectives[directiveName]) {\n            context.reportError(new _error.GraphQLError(duplicateDirectiveMessage(directiveName), [knownDirectives[directiveName], directive]));\n          } else {\n            knownDirectives[directiveName] = directive;\n          }\n        });\n      }\n    }\n  };\n}","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.unknownArgMessage = unknownArgMessage;\nexports.unknownDirectiveArgMessage = unknownDirectiveArgMessage;\nexports.KnownArgumentNames = KnownArgumentNames;\n\nvar _error = require('../../error');\n\nvar _find = require('../../jsutils/find');\n\nvar _find2 = _interopRequireDefault(_find);\n\nvar _invariant = require('../../jsutils/invariant');\n\nvar _invariant2 = _interopRequireDefault(_invariant);\n\nvar _suggestionList = require('../../jsutils/suggestionList');\n\nvar _suggestionList2 = _interopRequireDefault(_suggestionList);\n\nvar _quotedOrList = require('../../jsutils/quotedOrList');\n\nvar _quotedOrList2 = _interopRequireDefault(_quotedOrList);\n\nvar _kinds = require('../../language/kinds');\n\nvar Kind = _interopRequireWildcard(_kinds);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction unknownArgMessage(argName, fieldName, type, suggestedArgs) {\n  var message = 'Unknown argument \"' + argName + '\" on field \"' + fieldName + '\" of ' + ('type \"' + String(type) + '\".');\n  if (suggestedArgs.length) {\n    message += ' Did you mean ' + (0, _quotedOrList2.default)(suggestedArgs) + '?';\n  }\n  return message;\n}\n/**\n *  Copyright (c) 2015, Facebook, Inc.\n *  All rights reserved.\n *\n *  This source code is licensed under the BSD-style license found in the\n *  LICENSE file in the root directory of this source tree. An additional grant\n *  of patent rights can be found in the PATENTS file in the same directory.\n */\n\nfunction unknownDirectiveArgMessage(argName, directiveName, suggestedArgs) {\n  var message = 'Unknown argument \"' + argName + '\" on directive \"@' + directiveName + '\".';\n  if (suggestedArgs.length) {\n    message += ' Did you mean ' + (0, _quotedOrList2.default)(suggestedArgs) + '?';\n  }\n  return message;\n}\n\n/**\n * Known argument names\n *\n * A GraphQL field is only valid if all supplied arguments are defined by\n * that field.\n */\nfunction KnownArgumentNames(context) {\n  return {\n    Argument: function Argument(node, key, parent, path, ancestors) {\n      var argumentOf = ancestors[ancestors.length - 1];\n      if (argumentOf.kind === Kind.FIELD) {\n        var fieldDef = context.getFieldDef();\n        if (fieldDef) {\n          var fieldArgDef = (0, _find2.default)(fieldDef.args, function (arg) {\n            return arg.name === node.name.value;\n          });\n          if (!fieldArgDef) {\n            var parentType = context.getParentType();\n            !parentType ? (0, _invariant2.default)(0) : void 0;\n            context.reportError(new _error.GraphQLError(unknownArgMessage(node.name.value, fieldDef.name, parentType.name, (0, _suggestionList2.default)(node.name.value, fieldDef.args.map(function (arg) {\n              return arg.name;\n            }))), [node]));\n          }\n        }\n      } else if (argumentOf.kind === Kind.DIRECTIVE) {\n        var directive = context.getDirective();\n        if (directive) {\n          var directiveArgDef = (0, _find2.default)(directive.args, function (arg) {\n            return arg.name === node.name.value;\n          });\n          if (!directiveArgDef) {\n            context.reportError(new _error.GraphQLError(unknownDirectiveArgMessage(node.name.value, directive.name, (0, _suggestionList2.default)(node.name.value, directive.args.map(function (arg) {\n              return arg.name;\n            }))), [node]));\n          }\n        }\n      }\n    }\n  };\n}","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.duplicateArgMessage = duplicateArgMessage;\nexports.UniqueArgumentNames = UniqueArgumentNames;\n\nvar _error = require('../../error');\n\n/**\n *  Copyright (c) 2015, Facebook, Inc.\n *  All rights reserved.\n *\n *  This source code is licensed under the BSD-style license found in the\n *  LICENSE file in the root directory of this source tree. An additional grant\n *  of patent rights can be found in the PATENTS file in the same directory.\n */\n\nfunction duplicateArgMessage(argName) {\n  return 'There can be only one argument named \"' + argName + '\".';\n}\n\n/**\n * Unique argument names\n *\n * A GraphQL field or directive is only valid if all supplied arguments are\n * uniquely named.\n */\nfunction UniqueArgumentNames(context) {\n  var knownArgNames = Object.create(null);\n  return {\n    Field: function Field() {\n      knownArgNames = Object.create(null);\n    },\n    Directive: function Directive() {\n      knownArgNames = Object.create(null);\n    },\n    Argument: function Argument(node) {\n      var argName = node.name.value;\n      if (knownArgNames[argName]) {\n        context.reportError(new _error.GraphQLError(duplicateArgMessage(argName), [knownArgNames[argName], node.name]));\n      } else {\n        knownArgNames[argName] = node.name;\n      }\n      return false;\n    }\n  };\n}","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.badValueMessage = badValueMessage;\nexports.ArgumentsOfCorrectType = ArgumentsOfCorrectType;\n\nvar _error = require('../../error');\n\nvar _printer = require('../../language/printer');\n\nvar _isValidLiteralValue = require('../../utilities/isValidLiteralValue');\n\n/**\n *  Copyright (c) 2015, Facebook, Inc.\n *  All rights reserved.\n *\n *  This source code is licensed under the BSD-style license found in the\n *  LICENSE file in the root directory of this source tree. An additional grant\n *  of patent rights can be found in the PATENTS file in the same directory.\n */\n\nfunction badValueMessage(argName, type, value, verboseErrors) {\n  var message = verboseErrors ? '\\n' + verboseErrors.join('\\n') : '';\n  return 'Argument \"' + argName + '\" has invalid value ' + value + '.' + message;\n}\n\n/**\n * Argument values of correct type\n *\n * A GraphQL document is only valid if all field argument literal values are\n * of the type expected by their position.\n */\nfunction ArgumentsOfCorrectType(context) {\n  return {\n    Argument: function Argument(node) {\n      var argDef = context.getArgument();\n      if (argDef) {\n        var errors = (0, _isValidLiteralValue.isValidLiteralValue)(argDef.type, node.value);\n        if (errors && errors.length > 0) {\n          context.reportError(new _error.GraphQLError(badValueMessage(node.name.value, argDef.type, (0, _printer.print)(node.value), errors), [node.value]));\n        }\n      }\n      return false;\n    }\n  };\n}","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.missingFieldArgMessage = missingFieldArgMessage;\nexports.missingDirectiveArgMessage = missingDirectiveArgMessage;\nexports.ProvidedNonNullArguments = ProvidedNonNullArguments;\n\nvar _error = require('../../error');\n\nvar _keyMap = require('../../jsutils/keyMap');\n\nvar _keyMap2 = _interopRequireDefault(_keyMap);\n\nvar _definition = require('../../type/definition');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n *  Copyright (c) 2015, Facebook, Inc.\n *  All rights reserved.\n *\n *  This source code is licensed under the BSD-style license found in the\n *  LICENSE file in the root directory of this source tree. An additional grant\n *  of patent rights can be found in the PATENTS file in the same directory.\n */\n\nfunction missingFieldArgMessage(fieldName, argName, type) {\n  return 'Field \"' + fieldName + '\" argument \"' + argName + '\" of type ' + ('\"' + String(type) + '\" is required but not provided.');\n}\n\nfunction missingDirectiveArgMessage(directiveName, argName, type) {\n  return 'Directive \"@' + directiveName + '\" argument \"' + argName + '\" of type ' + ('\"' + String(type) + '\" is required but not provided.');\n}\n\n/**\n * Provided required arguments\n *\n * A field or directive is only valid if all required (non-null) field arguments\n * have been provided.\n */\nfunction ProvidedNonNullArguments(context) {\n  return {\n    Field: {\n      // Validate on leave to allow for deeper errors to appear first.\n      leave: function leave(node) {\n        var fieldDef = context.getFieldDef();\n        if (!fieldDef) {\n          return false;\n        }\n        var argNodes = node.arguments || [];\n\n        var argNodeMap = (0, _keyMap2.default)(argNodes, function (arg) {\n          return arg.name.value;\n        });\n        fieldDef.args.forEach(function (argDef) {\n          var argNode = argNodeMap[argDef.name];\n          if (!argNode && argDef.type instanceof _definition.GraphQLNonNull) {\n            context.reportError(new _error.GraphQLError(missingFieldArgMessage(node.name.value, argDef.name, argDef.type), [node]));\n          }\n        });\n      }\n    },\n\n    Directive: {\n      // Validate on leave to allow for deeper errors to appear first.\n      leave: function leave(node) {\n        var directiveDef = context.getDirective();\n        if (!directiveDef) {\n          return false;\n        }\n        var argNodes = node.arguments || [];\n\n        var argNodeMap = (0, _keyMap2.default)(argNodes, function (arg) {\n          return arg.name.value;\n        });\n        directiveDef.args.forEach(function (argDef) {\n          var argNode = argNodeMap[argDef.name];\n          if (!argNode && argDef.type instanceof _definition.GraphQLNonNull) {\n            context.reportError(new _error.GraphQLError(missingDirectiveArgMessage(node.name.value, argDef.name, argDef.type), [node]));\n          }\n        });\n      }\n    }\n  };\n}","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.defaultForNonNullArgMessage = defaultForNonNullArgMessage;\nexports.badValueForDefaultArgMessage = badValueForDefaultArgMessage;\nexports.DefaultValuesOfCorrectType = DefaultValuesOfCorrectType;\n\nvar _error = require('../../error');\n\nvar _printer = require('../../language/printer');\n\nvar _definition = require('../../type/definition');\n\nvar _isValidLiteralValue = require('../../utilities/isValidLiteralValue');\n\nfunction defaultForNonNullArgMessage(varName, type, guessType) {\n  return 'Variable \"$' + varName + '\" of type \"' + String(type) + '\" is required and ' + 'will not use the default value. ' + ('Perhaps you meant to use type \"' + String(guessType) + '\".');\n}\n/**\n *  Copyright (c) 2015, Facebook, Inc.\n *  All rights reserved.\n *\n *  This source code is licensed under the BSD-style license found in the\n *  LICENSE file in the root directory of this source tree. An additional grant\n *  of patent rights can be found in the PATENTS file in the same directory.\n */\n\nfunction badValueForDefaultArgMessage(varName, type, value, verboseErrors) {\n  var message = verboseErrors ? '\\n' + verboseErrors.join('\\n') : '';\n  return 'Variable \"$' + varName + '\" of type \"' + String(type) + '\" has invalid ' + ('default value ' + value + '.' + message);\n}\n\n/**\n * Variable default values of correct type\n *\n * A GraphQL document is only valid if all variable default values are of the\n * type expected by their definition.\n */\nfunction DefaultValuesOfCorrectType(context) {\n  return {\n    VariableDefinition: function VariableDefinition(node) {\n      var name = node.variable.name.value;\n      var defaultValue = node.defaultValue;\n      var type = context.getInputType();\n      if (type instanceof _definition.GraphQLNonNull && defaultValue) {\n        context.reportError(new _error.GraphQLError(defaultForNonNullArgMessage(name, type, type.ofType), [defaultValue]));\n      }\n      if (type && defaultValue) {\n        var errors = (0, _isValidLiteralValue.isValidLiteralValue)(type, defaultValue);\n        if (errors && errors.length > 0) {\n          context.reportError(new _error.GraphQLError(badValueForDefaultArgMessage(name, type, (0, _printer.print)(defaultValue), errors), [defaultValue]));\n        }\n      }\n      return false;\n    },\n\n    SelectionSet: function SelectionSet() {\n      return false;\n    },\n    FragmentDefinition: function FragmentDefinition() {\n      return false;\n    }\n  };\n}","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.badVarPosMessage = badVarPosMessage;\nexports.VariablesInAllowedPosition = VariablesInAllowedPosition;\n\nvar _error = require('../../error');\n\nvar _definition = require('../../type/definition');\n\nvar _typeComparators = require('../../utilities/typeComparators');\n\nvar _typeFromAST = require('../../utilities/typeFromAST');\n\nfunction badVarPosMessage(varName, varType, expectedType) {\n  return 'Variable \"$' + varName + '\" of type \"' + String(varType) + '\" used in ' + ('position expecting type \"' + String(expectedType) + '\".');\n}\n\n/**\n * Variables passed to field arguments conform to type\n */\n\n/**\n *  Copyright (c) 2015, Facebook, Inc.\n *  All rights reserved.\n *\n *  This source code is licensed under the BSD-style license found in the\n *  LICENSE file in the root directory of this source tree. An additional grant\n *  of patent rights can be found in the PATENTS file in the same directory.\n */\n\nfunction VariablesInAllowedPosition(context) {\n  var varDefMap = Object.create(null);\n\n  return {\n    OperationDefinition: {\n      enter: function enter() {\n        varDefMap = Object.create(null);\n      },\n      leave: function leave(operation) {\n        var usages = context.getRecursiveVariableUsages(operation);\n\n        usages.forEach(function (_ref) {\n          var node = _ref.node,\n              type = _ref.type;\n\n          var varName = node.name.value;\n          var varDef = varDefMap[varName];\n          if (varDef && type) {\n            // A var type is allowed if it is the same or more strict (e.g. is\n            // a subtype of) than the expected type. It can be more strict if\n            // the variable type is non-null when the expected type is nullable.\n            // If both are list types, the variable item type can be more strict\n            // than the expected item type (contravariant).\n            var schema = context.getSchema();\n            var varType = (0, _typeFromAST.typeFromAST)(schema, varDef.type);\n            if (varType && !(0, _typeComparators.isTypeSubTypeOf)(schema, effectiveType(varType, varDef), type)) {\n              context.reportError(new _error.GraphQLError(badVarPosMessage(varName, varType, type), [varDef, node]));\n            }\n          }\n        });\n      }\n    },\n    VariableDefinition: function VariableDefinition(node) {\n      varDefMap[node.variable.name.value] = node;\n    }\n  };\n}\n\n// If a variable definition has a default value, it's effectively non-null.\nfunction effectiveType(varType, varDef) {\n  return !varDef.defaultValue || varType instanceof _definition.GraphQLNonNull ? varType : new _definition.GraphQLNonNull(varType);\n}","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.fieldsConflictMessage = fieldsConflictMessage;\nexports.OverlappingFieldsCanBeMerged = OverlappingFieldsCanBeMerged;\n\nvar _error = require('../../error');\n\nvar _find = require('../../jsutils/find');\n\nvar _find2 = _interopRequireDefault(_find);\n\nvar _kinds = require('../../language/kinds');\n\nvar Kind = _interopRequireWildcard(_kinds);\n\nvar _printer = require('../../language/printer');\n\nvar _definition = require('../../type/definition');\n\nvar _typeFromAST = require('../../utilities/typeFromAST');\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n/**\n *  Copyright (c) 2015, Facebook, Inc.\n *  All rights reserved.\n *\n *  This source code is licensed under the BSD-style license found in the\n *  LICENSE file in the root directory of this source tree. An additional grant\n *  of patent rights can be found in the PATENTS file in the same directory.\n */\n\nfunction fieldsConflictMessage(responseName, reason) {\n  return 'Fields \"' + responseName + '\" conflict because ' + reasonMessage(reason) + '. Use different aliases on the fields to fetch both if this was ' + 'intentional.';\n}\n\nfunction reasonMessage(reason) {\n  if (Array.isArray(reason)) {\n    return reason.map(function (_ref) {\n      var responseName = _ref[0],\n          subreason = _ref[1];\n      return 'subfields \"' + responseName + '\" conflict because ' + reasonMessage(subreason);\n    }).join(' and ');\n  }\n  return reason;\n}\n\n/**\n * Overlapping fields can be merged\n *\n * A selection set is only valid if all fields (including spreading any\n * fragments) either correspond to distinct response names or can be merged\n * without ambiguity.\n */\nfunction OverlappingFieldsCanBeMerged(context) {\n  // A memoization for when two fragments are compared \"between\" each other for\n  // conflicts. Two fragments may be compared many times, so memoizing this can\n  // dramatically improve the performance of this validator.\n  var comparedFragments = new PairSet();\n\n  // A cache for the \"field map\" and list of fragment names found in any given\n  // selection set. Selection sets may be asked for this information multiple\n  // times, so this improves the performance of this validator.\n  var cachedFieldsAndFragmentNames = new Map();\n\n  return {\n    SelectionSet: function SelectionSet(selectionSet) {\n      var conflicts = findConflictsWithinSelectionSet(context, cachedFieldsAndFragmentNames, comparedFragments, context.getParentType(), selectionSet);\n      conflicts.forEach(function (_ref2) {\n        var _ref2$ = _ref2[0],\n            responseName = _ref2$[0],\n            reason = _ref2$[1],\n            fields1 = _ref2[1],\n            fields2 = _ref2[2];\n        return context.reportError(new _error.GraphQLError(fieldsConflictMessage(responseName, reason), fields1.concat(fields2)));\n      });\n    }\n  };\n}\n// Field name and reason.\n\n// Reason is a string, or a nested list of conflicts.\n\n// Tuple defining a field node in a context.\n\n// Map of array of those.\n\n\n/**\n * Algorithm:\n *\n * Conflicts occur when two fields exist in a query which will produce the same\n * response name, but represent differing values, thus creating a conflict.\n * The algorithm below finds all conflicts via making a series of comparisons\n * between fields. In order to compare as few fields as possible, this makes\n * a series of comparisons \"within\" sets of fields and \"between\" sets of fields.\n *\n * Given any selection set, a collection produces both a set of fields by\n * also including all inline fragments, as well as a list of fragments\n * referenced by fragment spreads.\n *\n * A) Each selection set represented in the document first compares \"within\" its\n * collected set of fields, finding any conflicts between every pair of\n * overlapping fields.\n * Note: This is the *only time* that a the fields \"within\" a set are compared\n * to each other. After this only fields \"between\" sets are compared.\n *\n * B) Also, if any fragment is referenced in a selection set, then a\n * comparison is made \"between\" the original set of fields and the\n * referenced fragment.\n *\n * C) Also, if multiple fragments are referenced, then comparisons\n * are made \"between\" each referenced fragment.\n *\n * D) When comparing \"between\" a set of fields and a referenced fragment, first\n * a comparison is made between each field in the original set of fields and\n * each field in the the referenced set of fields.\n *\n * E) Also, if any fragment is referenced in the referenced selection set,\n * then a comparison is made \"between\" the original set of fields and the\n * referenced fragment (recursively referring to step D).\n *\n * F) When comparing \"between\" two fragments, first a comparison is made between\n * each field in the first referenced set of fields and each field in the the\n * second referenced set of fields.\n *\n * G) Also, any fragments referenced by the first must be compared to the\n * second, and any fragments referenced by the second must be compared to the\n * first (recursively referring to step F).\n *\n * H) When comparing two fields, if both have selection sets, then a comparison\n * is made \"between\" both selection sets, first comparing the set of fields in\n * the first selection set with the set of fields in the second.\n *\n * I) Also, if any fragment is referenced in either selection set, then a\n * comparison is made \"between\" the other set of fields and the\n * referenced fragment.\n *\n * J) Also, if two fragments are referenced in both selection sets, then a\n * comparison is made \"between\" the two fragments.\n *\n */\n\n// Find all conflicts found \"within\" a selection set, including those found\n// via spreading in fragments. Called when visiting each SelectionSet in the\n// GraphQL Document.\nfunction findConflictsWithinSelectionSet(context, cachedFieldsAndFragmentNames, comparedFragments, parentType, selectionSet) {\n  var conflicts = [];\n\n  var _getFieldsAndFragment = getFieldsAndFragmentNames(context, cachedFieldsAndFragmentNames, parentType, selectionSet),\n      fieldMap = _getFieldsAndFragment[0],\n      fragmentNames = _getFieldsAndFragment[1];\n\n  // (A) Find find all conflicts \"within\" the fields of this selection set.\n  // Note: this is the *only place* `collectConflictsWithin` is called.\n\n\n  collectConflictsWithin(context, conflicts, cachedFieldsAndFragmentNames, comparedFragments, fieldMap);\n\n  // (B) Then collect conflicts between these fields and those represented by\n  // each spread fragment name found.\n  for (var i = 0; i < fragmentNames.length; i++) {\n    collectConflictsBetweenFieldsAndFragment(context, conflicts, cachedFieldsAndFragmentNames, comparedFragments, false, fieldMap, fragmentNames[i]);\n    // (C) Then compare this fragment with all other fragments found in this\n    // selection set to collect conflicts between fragments spread together.\n    // This compares each item in the list of fragment names to every other item\n    // in that same list (except for itself).\n    for (var j = i + 1; j < fragmentNames.length; j++) {\n      collectConflictsBetweenFragments(context, conflicts, cachedFieldsAndFragmentNames, comparedFragments, false, fragmentNames[i], fragmentNames[j]);\n    }\n  }\n  return conflicts;\n}\n\n// Collect all conflicts found between a set of fields and a fragment reference\n// including via spreading in any nested fragments.\nfunction collectConflictsBetweenFieldsAndFragment(context, conflicts, cachedFieldsAndFragmentNames, comparedFragments, areMutuallyExclusive, fieldMap, fragmentName) {\n  var fragment = context.getFragment(fragmentName);\n  if (!fragment) {\n    return;\n  }\n\n  var _getReferencedFieldsA = getReferencedFieldsAndFragmentNames(context, cachedFieldsAndFragmentNames, fragment),\n      fieldMap2 = _getReferencedFieldsA[0],\n      fragmentNames2 = _getReferencedFieldsA[1];\n\n  // (D) First collect any conflicts between the provided collection of fields\n  // and the collection of fields represented by the given fragment.\n\n\n  collectConflictsBetween(context, conflicts, cachedFieldsAndFragmentNames, comparedFragments, areMutuallyExclusive, fieldMap, fieldMap2);\n\n  // (E) Then collect any conflicts between the provided collection of fields\n  // and any fragment names found in the given fragment.\n  for (var i = 0; i < fragmentNames2.length; i++) {\n    collectConflictsBetweenFieldsAndFragment(context, conflicts, cachedFieldsAndFragmentNames, comparedFragments, areMutuallyExclusive, fieldMap, fragmentNames2[i]);\n  }\n}\n\n// Collect all conflicts found between two fragments, including via spreading in\n// any nested fragments.\nfunction collectConflictsBetweenFragments(context, conflicts, cachedFieldsAndFragmentNames, comparedFragments, areMutuallyExclusive, fragmentName1, fragmentName2) {\n  var fragment1 = context.getFragment(fragmentName1);\n  var fragment2 = context.getFragment(fragmentName2);\n  if (!fragment1 || !fragment2) {\n    return;\n  }\n\n  // No need to compare a fragment to itself.\n  if (fragment1 === fragment2) {\n    return;\n  }\n\n  // Memoize so two fragments are not compared for conflicts more than once.\n  if (comparedFragments.has(fragmentName1, fragmentName2, areMutuallyExclusive)) {\n    return;\n  }\n  comparedFragments.add(fragmentName1, fragmentName2, areMutuallyExclusive);\n\n  var _getReferencedFieldsA2 = getReferencedFieldsAndFragmentNames(context, cachedFieldsAndFragmentNames, fragment1),\n      fieldMap1 = _getReferencedFieldsA2[0],\n      fragmentNames1 = _getReferencedFieldsA2[1];\n\n  var _getReferencedFieldsA3 = getReferencedFieldsAndFragmentNames(context, cachedFieldsAndFragmentNames, fragment2),\n      fieldMap2 = _getReferencedFieldsA3[0],\n      fragmentNames2 = _getReferencedFieldsA3[1];\n\n  // (F) First, collect all conflicts between these two collections of fields\n  // (not including any nested fragments).\n\n\n  collectConflictsBetween(context, conflicts, cachedFieldsAndFragmentNames, comparedFragments, areMutuallyExclusive, fieldMap1, fieldMap2);\n\n  // (G) Then collect conflicts between the first fragment and any nested\n  // fragments spread in the second fragment.\n  for (var j = 0; j < fragmentNames2.length; j++) {\n    collectConflictsBetweenFragments(context, conflicts, cachedFieldsAndFragmentNames, comparedFragments, areMutuallyExclusive, fragmentName1, fragmentNames2[j]);\n  }\n\n  // (G) Then collect conflicts between the second fragment and any nested\n  // fragments spread in the first fragment.\n  for (var i = 0; i < fragmentNames1.length; i++) {\n    collectConflictsBetweenFragments(context, conflicts, cachedFieldsAndFragmentNames, comparedFragments, areMutuallyExclusive, fragmentNames1[i], fragmentName2);\n  }\n}\n\n// Find all conflicts found between two selection sets, including those found\n// via spreading in fragments. Called when determining if conflicts exist\n// between the sub-fields of two overlapping fields.\nfunction findConflictsBetweenSubSelectionSets(context, cachedFieldsAndFragmentNames, comparedFragments, areMutuallyExclusive, parentType1, selectionSet1, parentType2, selectionSet2) {\n  var conflicts = [];\n\n  var _getFieldsAndFragment2 = getFieldsAndFragmentNames(context, cachedFieldsAndFragmentNames, parentType1, selectionSet1),\n      fieldMap1 = _getFieldsAndFragment2[0],\n      fragmentNames1 = _getFieldsAndFragment2[1];\n\n  var _getFieldsAndFragment3 = getFieldsAndFragmentNames(context, cachedFieldsAndFragmentNames, parentType2, selectionSet2),\n      fieldMap2 = _getFieldsAndFragment3[0],\n      fragmentNames2 = _getFieldsAndFragment3[1];\n\n  // (H) First, collect all conflicts between these two collections of field.\n\n\n  collectConflictsBetween(context, conflicts, cachedFieldsAndFragmentNames, comparedFragments, areMutuallyExclusive, fieldMap1, fieldMap2);\n\n  // (I) Then collect conflicts between the first collection of fields and\n  // those referenced by each fragment name associated with the second.\n  for (var j = 0; j < fragmentNames2.length; j++) {\n    collectConflictsBetweenFieldsAndFragment(context, conflicts, cachedFieldsAndFragmentNames, comparedFragments, areMutuallyExclusive, fieldMap1, fragmentNames2[j]);\n  }\n\n  // (I) Then collect conflicts between the second collection of fields and\n  // those referenced by each fragment name associated with the first.\n  for (var i = 0; i < fragmentNames1.length; i++) {\n    collectConflictsBetweenFieldsAndFragment(context, conflicts, cachedFieldsAndFragmentNames, comparedFragments, areMutuallyExclusive, fieldMap2, fragmentNames1[i]);\n  }\n\n  // (J) Also collect conflicts between any fragment names by the first and\n  // fragment names by the second. This compares each item in the first set of\n  // names to each item in the second set of names.\n  for (var _i = 0; _i < fragmentNames1.length; _i++) {\n    for (var _j = 0; _j < fragmentNames2.length; _j++) {\n      collectConflictsBetweenFragments(context, conflicts, cachedFieldsAndFragmentNames, comparedFragments, areMutuallyExclusive, fragmentNames1[_i], fragmentNames2[_j]);\n    }\n  }\n  return conflicts;\n}\n\n// Collect all Conflicts \"within\" one collection of fields.\nfunction collectConflictsWithin(context, conflicts, cachedFieldsAndFragmentNames, comparedFragments, fieldMap) {\n  // A field map is a keyed collection, where each key represents a response\n  // name and the value at that key is a list of all fields which provide that\n  // response name. For every response name, if there are multiple fields, they\n  // must be compared to find a potential conflict.\n  Object.keys(fieldMap).forEach(function (responseName) {\n    var fields = fieldMap[responseName];\n    // This compares every field in the list to every other field in this list\n    // (except to itself). If the list only has one item, nothing needs to\n    // be compared.\n    if (fields.length > 1) {\n      for (var i = 0; i < fields.length; i++) {\n        for (var j = i + 1; j < fields.length; j++) {\n          var conflict = findConflict(context, cachedFieldsAndFragmentNames, comparedFragments, false, // within one collection is never mutually exclusive\n          responseName, fields[i], fields[j]);\n          if (conflict) {\n            conflicts.push(conflict);\n          }\n        }\n      }\n    }\n  });\n}\n\n// Collect all Conflicts between two collections of fields. This is similar to,\n// but different from the `collectConflictsWithin` function above. This check\n// assumes that `collectConflictsWithin` has already been called on each\n// provided collection of fields. This is true because this validator traverses\n// each individual selection set.\nfunction collectConflictsBetween(context, conflicts, cachedFieldsAndFragmentNames, comparedFragments, parentFieldsAreMutuallyExclusive, fieldMap1, fieldMap2) {\n  // A field map is a keyed collection, where each key represents a response\n  // name and the value at that key is a list of all fields which provide that\n  // response name. For any response name which appears in both provided field\n  // maps, each field from the first field map must be compared to every field\n  // in the second field map to find potential conflicts.\n  Object.keys(fieldMap1).forEach(function (responseName) {\n    var fields2 = fieldMap2[responseName];\n    if (fields2) {\n      var fields1 = fieldMap1[responseName];\n      for (var i = 0; i < fields1.length; i++) {\n        for (var j = 0; j < fields2.length; j++) {\n          var conflict = findConflict(context, cachedFieldsAndFragmentNames, comparedFragments, parentFieldsAreMutuallyExclusive, responseName, fields1[i], fields2[j]);\n          if (conflict) {\n            conflicts.push(conflict);\n          }\n        }\n      }\n    }\n  });\n}\n\n// Determines if there is a conflict between two particular fields, including\n// comparing their sub-fields.\nfunction findConflict(context, cachedFieldsAndFragmentNames, comparedFragments, parentFieldsAreMutuallyExclusive, responseName, field1, field2) {\n  var parentType1 = field1[0],\n      node1 = field1[1],\n      def1 = field1[2];\n  var parentType2 = field2[0],\n      node2 = field2[1],\n      def2 = field2[2];\n\n  // If it is known that two fields could not possibly apply at the same\n  // time, due to the parent types, then it is safe to permit them to diverge\n  // in aliased field or arguments used as they will not present any ambiguity\n  // by differing.\n  // It is known that two parent types could never overlap if they are\n  // different Object types. Interface or Union types might overlap - if not\n  // in the current state of the schema, then perhaps in some future version,\n  // thus may not safely diverge.\n\n  var areMutuallyExclusive = parentFieldsAreMutuallyExclusive || parentType1 !== parentType2 && parentType1 instanceof _definition.GraphQLObjectType && parentType2 instanceof _definition.GraphQLObjectType;\n\n  // The return type for each field.\n  var type1 = def1 && def1.type;\n  var type2 = def2 && def2.type;\n\n  if (!areMutuallyExclusive) {\n    // Two aliases must refer to the same field.\n    var name1 = node1.name.value;\n    var name2 = node2.name.value;\n    if (name1 !== name2) {\n      return [[responseName, name1 + ' and ' + name2 + ' are different fields'], [node1], [node2]];\n    }\n\n    // Two field calls must have the same arguments.\n    if (!sameArguments(node1.arguments || [], node2.arguments || [])) {\n      return [[responseName, 'they have differing arguments'], [node1], [node2]];\n    }\n  }\n\n  if (type1 && type2 && doTypesConflict(type1, type2)) {\n    return [[responseName, 'they return conflicting types ' + String(type1) + ' and ' + String(type2)], [node1], [node2]];\n  }\n\n  // Collect and compare sub-fields. Use the same \"visited fragment names\" list\n  // for both collections so fields in a fragment reference are never\n  // compared to themselves.\n  var selectionSet1 = node1.selectionSet;\n  var selectionSet2 = node2.selectionSet;\n  if (selectionSet1 && selectionSet2) {\n    var conflicts = findConflictsBetweenSubSelectionSets(context, cachedFieldsAndFragmentNames, comparedFragments, areMutuallyExclusive, (0, _definition.getNamedType)(type1), selectionSet1, (0, _definition.getNamedType)(type2), selectionSet2);\n    return subfieldConflicts(conflicts, responseName, node1, node2);\n  }\n}\n\nfunction sameArguments(arguments1, arguments2) {\n  if (arguments1.length !== arguments2.length) {\n    return false;\n  }\n  return arguments1.every(function (argument1) {\n    var argument2 = (0, _find2.default)(arguments2, function (argument) {\n      return argument.name.value === argument1.name.value;\n    });\n    if (!argument2) {\n      return false;\n    }\n    return sameValue(argument1.value, argument2.value);\n  });\n}\n\nfunction sameValue(value1, value2) {\n  return !value1 && !value2 || (0, _printer.print)(value1) === (0, _printer.print)(value2);\n}\n\n// Two types conflict if both types could not apply to a value simultaneously.\n// Composite types are ignored as their individual field types will be compared\n// later recursively. However List and Non-Null types must match.\nfunction doTypesConflict(type1, type2) {\n  if (type1 instanceof _definition.GraphQLList) {\n    return type2 instanceof _definition.GraphQLList ? doTypesConflict(type1.ofType, type2.ofType) : true;\n  }\n  if (type2 instanceof _definition.GraphQLList) {\n    return type1 instanceof _definition.GraphQLList ? doTypesConflict(type1.ofType, type2.ofType) : true;\n  }\n  if (type1 instanceof _definition.GraphQLNonNull) {\n    return type2 instanceof _definition.GraphQLNonNull ? doTypesConflict(type1.ofType, type2.ofType) : true;\n  }\n  if (type2 instanceof _definition.GraphQLNonNull) {\n    return type1 instanceof _definition.GraphQLNonNull ? doTypesConflict(type1.ofType, type2.ofType) : true;\n  }\n  if ((0, _definition.isLeafType)(type1) || (0, _definition.isLeafType)(type2)) {\n    return type1 !== type2;\n  }\n  return false;\n}\n\n// Given a selection set, return the collection of fields (a mapping of response\n// name to field nodes and definitions) as well as a list of fragment names\n// referenced via fragment spreads.\nfunction getFieldsAndFragmentNames(context, cachedFieldsAndFragmentNames, parentType, selectionSet) {\n  var cached = cachedFieldsAndFragmentNames.get(selectionSet);\n  if (!cached) {\n    var nodeAndDefs = Object.create(null);\n    var fragmentNames = Object.create(null);\n    _collectFieldsAndFragmentNames(context, parentType, selectionSet, nodeAndDefs, fragmentNames);\n    cached = [nodeAndDefs, Object.keys(fragmentNames)];\n    cachedFieldsAndFragmentNames.set(selectionSet, cached);\n  }\n  return cached;\n}\n\n// Given a reference to a fragment, return the represented collection of fields\n// as well as a list of nested fragment names referenced via fragment spreads.\nfunction getReferencedFieldsAndFragmentNames(context, cachedFieldsAndFragmentNames, fragment) {\n  // Short-circuit building a type from the node if possible.\n  var cached = cachedFieldsAndFragmentNames.get(fragment.selectionSet);\n  if (cached) {\n    return cached;\n  }\n\n  var fragmentType = (0, _typeFromAST.typeFromAST)(context.getSchema(), fragment.typeCondition);\n  return getFieldsAndFragmentNames(context, cachedFieldsAndFragmentNames, fragmentType, fragment.selectionSet);\n}\n\nfunction _collectFieldsAndFragmentNames(context, parentType, selectionSet, nodeAndDefs, fragmentNames) {\n  for (var i = 0; i < selectionSet.selections.length; i++) {\n    var selection = selectionSet.selections[i];\n    switch (selection.kind) {\n      case Kind.FIELD:\n        var fieldName = selection.name.value;\n        var fieldDef = void 0;\n        if (parentType instanceof _definition.GraphQLObjectType || parentType instanceof _definition.GraphQLInterfaceType) {\n          fieldDef = parentType.getFields()[fieldName];\n        }\n        var responseName = selection.alias ? selection.alias.value : fieldName;\n        if (!nodeAndDefs[responseName]) {\n          nodeAndDefs[responseName] = [];\n        }\n        nodeAndDefs[responseName].push([parentType, selection, fieldDef]);\n        break;\n      case Kind.FRAGMENT_SPREAD:\n        fragmentNames[selection.name.value] = true;\n        break;\n      case Kind.INLINE_FRAGMENT:\n        var typeCondition = selection.typeCondition;\n        var inlineFragmentType = typeCondition ? (0, _typeFromAST.typeFromAST)(context.getSchema(), typeCondition) : parentType;\n        _collectFieldsAndFragmentNames(context, inlineFragmentType, selection.selectionSet, nodeAndDefs, fragmentNames);\n        break;\n    }\n  }\n}\n\n// Given a series of Conflicts which occurred between two sub-fields, generate\n// a single Conflict.\nfunction subfieldConflicts(conflicts, responseName, node1, node2) {\n  if (conflicts.length > 0) {\n    return [[responseName, conflicts.map(function (_ref3) {\n      var reason = _ref3[0];\n      return reason;\n    })], conflicts.reduce(function (allFields, _ref4) {\n      var fields1 = _ref4[1];\n      return allFields.concat(fields1);\n    }, [node1]), conflicts.reduce(function (allFields, _ref5) {\n      var fields2 = _ref5[2];\n      return allFields.concat(fields2);\n    }, [node2])];\n  }\n}\n\n/**\n * A way to keep track of pairs of things when the ordering of the pair does\n * not matter. We do this by maintaining a sort of double adjacency sets.\n */\n\nvar PairSet = function () {\n  function PairSet() {\n    _classCallCheck(this, PairSet);\n\n    this._data = Object.create(null);\n  }\n\n  PairSet.prototype.has = function has(a, b, areMutuallyExclusive) {\n    var first = this._data[a];\n    var result = first && first[b];\n    if (result === undefined) {\n      return false;\n    }\n    // areMutuallyExclusive being false is a superset of being true,\n    // hence if we want to know if this PairSet \"has\" these two with no\n    // exclusivity, we have to ensure it was added as such.\n    if (areMutuallyExclusive === false) {\n      return result === false;\n    }\n    return true;\n  };\n\n  PairSet.prototype.add = function add(a, b, areMutuallyExclusive) {\n    _pairSetAdd(this._data, a, b, areMutuallyExclusive);\n    _pairSetAdd(this._data, b, a, areMutuallyExclusive);\n  };\n\n  return PairSet;\n}();\n\nfunction _pairSetAdd(data, a, b, areMutuallyExclusive) {\n  var map = data[a];\n  if (!map) {\n    map = Object.create(null);\n    data[a] = map;\n  }\n  map[b] = areMutuallyExclusive;\n}","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.duplicateInputFieldMessage = duplicateInputFieldMessage;\nexports.UniqueInputFieldNames = UniqueInputFieldNames;\n\nvar _error = require('../../error');\n\n/**\n *  Copyright (c) 2015, Facebook, Inc.\n *  All rights reserved.\n *\n *  This source code is licensed under the BSD-style license found in the\n *  LICENSE file in the root directory of this source tree. An additional grant\n *  of patent rights can be found in the PATENTS file in the same directory.\n */\n\nfunction duplicateInputFieldMessage(fieldName) {\n  return 'There can be only one input field named \"' + fieldName + '\".';\n}\n\n/**\n * Unique input field names\n *\n * A GraphQL input object value is only valid if all supplied fields are\n * uniquely named.\n */\nfunction UniqueInputFieldNames(context) {\n  var knownNameStack = [];\n  var knownNames = Object.create(null);\n\n  return {\n    ObjectValue: {\n      enter: function enter() {\n        knownNameStack.push(knownNames);\n        knownNames = Object.create(null);\n      },\n      leave: function leave() {\n        knownNames = knownNameStack.pop();\n      }\n    },\n    ObjectField: function ObjectField(node) {\n      var fieldName = node.name.value;\n      if (knownNames[fieldName]) {\n        context.reportError(new _error.GraphQLError(duplicateInputFieldMessage(fieldName), [knownNames[fieldName], node.name]));\n      } else {\n        knownNames[fieldName] = node.name;\n      }\n      return false;\n    }\n  };\n}","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n/**\n *  Copyright (c) 2015, Facebook, Inc.\n *  All rights reserved.\n *\n *  This source code is licensed under the BSD-style license found in the\n *  LICENSE file in the root directory of this source tree. An additional grant\n *  of patent rights can be found in the PATENTS file in the same directory.\n */\n\nexports.isValidJSValue = isValidJSValue;\n\nvar _iterall = require('iterall');\n\nvar _invariant = require('../jsutils/invariant');\n\nvar _invariant2 = _interopRequireDefault(_invariant);\n\nvar _isNullish = require('../jsutils/isNullish');\n\nvar _isNullish2 = _interopRequireDefault(_isNullish);\n\nvar _definition = require('../type/definition');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Given a JavaScript value and a GraphQL type, determine if the value will be\n * accepted for that type. This is primarily useful for validating the\n * runtime values of query variables.\n */\nfunction isValidJSValue(value, type) {\n  // A value must be provided if the type is non-null.\n  if (type instanceof _definition.GraphQLNonNull) {\n    if ((0, _isNullish2.default)(value)) {\n      return ['Expected \"' + String(type) + '\", found null.'];\n    }\n    return isValidJSValue(value, type.ofType);\n  }\n\n  if ((0, _isNullish2.default)(value)) {\n    return [];\n  }\n\n  // Lists accept a non-list value as a list of one.\n  if (type instanceof _definition.GraphQLList) {\n    var itemType = type.ofType;\n    if ((0, _iterall.isCollection)(value)) {\n      var errors = [];\n      (0, _iterall.forEach)(value, function (item, index) {\n        errors.push.apply(errors, isValidJSValue(item, itemType).map(function (error) {\n          return 'In element #' + index + ': ' + error;\n        }));\n      });\n      return errors;\n    }\n    return isValidJSValue(value, itemType);\n  }\n\n  // Input objects check each defined field.\n  if (type instanceof _definition.GraphQLInputObjectType) {\n    if ((typeof value === 'undefined' ? 'undefined' : _typeof(value)) !== 'object' || value === null) {\n      return ['Expected \"' + type.name + '\", found not an object.'];\n    }\n    var fields = type.getFields();\n\n    var _errors = [];\n\n    // Ensure every provided field is defined.\n    Object.keys(value).forEach(function (providedField) {\n      if (!fields[providedField]) {\n        _errors.push('In field \"' + providedField + '\": Unknown field.');\n      }\n    });\n\n    // Ensure every defined field is valid.\n    Object.keys(fields).forEach(function (fieldName) {\n      var newErrors = isValidJSValue(value[fieldName], fields[fieldName].type);\n      _errors.push.apply(_errors, newErrors.map(function (error) {\n        return 'In field \"' + fieldName + '\": ' + error;\n      }));\n    });\n\n    return _errors;\n  }\n\n  !(type instanceof _definition.GraphQLScalarType || type instanceof _definition.GraphQLEnumType) ? (0, _invariant2.default)(0, 'Must be input type') : void 0;\n\n  // Scalar/Enum input checks to ensure the type can parse the value to\n  // a non-null value.\n  try {\n    var parseResult = type.parseValue(value);\n    if ((0, _isNullish2.default)(parseResult) && !type.isValidValue(value)) {\n      return ['Expected type \"' + type.name + '\", found ' + JSON.stringify(value) + '.'];\n    }\n  } catch (error) {\n    return ['Expected type \"' + type.name + '\", found ' + JSON.stringify(value) + ': ' + error.message];\n  }\n\n  return [];\n}","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.buildASTSchema = buildASTSchema;\nexports.getDeprecationReason = getDeprecationReason;\nexports.getDescription = getDescription;\nexports.buildSchema = buildSchema;\n\nvar _invariant = require('../jsutils/invariant');\n\nvar _invariant2 = _interopRequireDefault(_invariant);\n\nvar _keyValMap = require('../jsutils/keyValMap');\n\nvar _keyValMap2 = _interopRequireDefault(_keyValMap);\n\nvar _valueFromAST = require('./valueFromAST');\n\nvar _lexer = require('../language/lexer');\n\nvar _parser = require('../language/parser');\n\nvar _values = require('../execution/values');\n\nvar _kinds = require('../language/kinds');\n\nvar Kind = _interopRequireWildcard(_kinds);\n\nvar _schema = require('../type/schema');\n\nvar _scalars = require('../type/scalars');\n\nvar _definition = require('../type/definition');\n\nvar _directives = require('../type/directives');\n\nvar _introspection = require('../type/introspection');\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n *  Copyright (c) 2015, Facebook, Inc.\n *  All rights reserved.\n *\n *  This source code is licensed under the BSD-style license found in the\n *  LICENSE file in the root directory of this source tree. An additional grant\n *  of patent rights can be found in the PATENTS file in the same directory.\n */\n\nfunction buildWrappedType(innerType, inputTypeNode) {\n  if (inputTypeNode.kind === Kind.LIST_TYPE) {\n    return new _definition.GraphQLList(buildWrappedType(innerType, inputTypeNode.type));\n  }\n  if (inputTypeNode.kind === Kind.NON_NULL_TYPE) {\n    var wrappedType = buildWrappedType(innerType, inputTypeNode.type);\n    !!(wrappedType instanceof _definition.GraphQLNonNull) ? (0, _invariant2.default)(0, 'No nesting nonnull.') : void 0;\n    return new _definition.GraphQLNonNull(wrappedType);\n  }\n  return innerType;\n}\n\nfunction getNamedTypeNode(typeNode) {\n  var namedType = typeNode;\n  while (namedType.kind === Kind.LIST_TYPE || namedType.kind === Kind.NON_NULL_TYPE) {\n    namedType = namedType.type;\n  }\n  return namedType;\n}\n\n/**\n * This takes the ast of a schema document produced by the parse function in\n * src/language/parser.js.\n *\n * If no schema definition is provided, then it will look for types named Query\n * and Mutation.\n *\n * Given that AST it constructs a GraphQLSchema. The resulting schema\n * has no resolve methods, so execution will use default resolvers.\n */\nfunction buildASTSchema(ast) {\n  if (!ast || ast.kind !== Kind.DOCUMENT) {\n    throw new Error('Must provide a document ast.');\n  }\n\n  var schemaDef = void 0;\n\n  var typeDefs = [];\n  var nodeMap = Object.create(null);\n  var directiveDefs = [];\n  for (var i = 0; i < ast.definitions.length; i++) {\n    var d = ast.definitions[i];\n    switch (d.kind) {\n      case Kind.SCHEMA_DEFINITION:\n        if (schemaDef) {\n          throw new Error('Must provide only one schema definition.');\n        }\n        schemaDef = d;\n        break;\n      case Kind.SCALAR_TYPE_DEFINITION:\n      case Kind.OBJECT_TYPE_DEFINITION:\n      case Kind.INTERFACE_TYPE_DEFINITION:\n      case Kind.ENUM_TYPE_DEFINITION:\n      case Kind.UNION_TYPE_DEFINITION:\n      case Kind.INPUT_OBJECT_TYPE_DEFINITION:\n        var typeName = d.name.value;\n        if (nodeMap[typeName]) {\n          throw new Error('Type \"' + typeName + '\" was defined more than once.');\n        }\n        typeDefs.push(d);\n        nodeMap[typeName] = d;\n        break;\n      case Kind.DIRECTIVE_DEFINITION:\n        directiveDefs.push(d);\n        break;\n    }\n  }\n\n  var queryTypeName = void 0;\n  var mutationTypeName = void 0;\n  var subscriptionTypeName = void 0;\n  if (schemaDef) {\n    schemaDef.operationTypes.forEach(function (operationType) {\n      var typeName = operationType.type.name.value;\n      if (operationType.operation === 'query') {\n        if (queryTypeName) {\n          throw new Error('Must provide only one query type in schema.');\n        }\n        if (!nodeMap[typeName]) {\n          throw new Error('Specified query type \"' + typeName + '\" not found in document.');\n        }\n        queryTypeName = typeName;\n      } else if (operationType.operation === 'mutation') {\n        if (mutationTypeName) {\n          throw new Error('Must provide only one mutation type in schema.');\n        }\n        if (!nodeMap[typeName]) {\n          throw new Error('Specified mutation type \"' + typeName + '\" not found in document.');\n        }\n        mutationTypeName = typeName;\n      } else if (operationType.operation === 'subscription') {\n        if (subscriptionTypeName) {\n          throw new Error('Must provide only one subscription type in schema.');\n        }\n        if (!nodeMap[typeName]) {\n          throw new Error('Specified subscription type \"' + typeName + '\" not found in document.');\n        }\n        subscriptionTypeName = typeName;\n      }\n    });\n  } else {\n    if (nodeMap.Query) {\n      queryTypeName = 'Query';\n    }\n    if (nodeMap.Mutation) {\n      mutationTypeName = 'Mutation';\n    }\n    if (nodeMap.Subscription) {\n      subscriptionTypeName = 'Subscription';\n    }\n  }\n\n  if (!queryTypeName) {\n    throw new Error('Must provide schema definition with query type or a type named Query.');\n  }\n\n  var innerTypeMap = {\n    String: _scalars.GraphQLString,\n    Int: _scalars.GraphQLInt,\n    Float: _scalars.GraphQLFloat,\n    Boolean: _scalars.GraphQLBoolean,\n    ID: _scalars.GraphQLID,\n    __Schema: _introspection.__Schema,\n    __Directive: _introspection.__Directive,\n    __DirectiveLocation: _introspection.__DirectiveLocation,\n    __Type: _introspection.__Type,\n    __Field: _introspection.__Field,\n    __InputValue: _introspection.__InputValue,\n    __EnumValue: _introspection.__EnumValue,\n    __TypeKind: _introspection.__TypeKind\n  };\n\n  var types = typeDefs.map(function (def) {\n    return typeDefNamed(def.name.value);\n  });\n\n  var directives = directiveDefs.map(getDirective);\n\n  // If specified directives were not explicitly declared, add them.\n  if (!directives.some(function (directive) {\n    return directive.name === 'skip';\n  })) {\n    directives.push(_directives.GraphQLSkipDirective);\n  }\n\n  if (!directives.some(function (directive) {\n    return directive.name === 'include';\n  })) {\n    directives.push(_directives.GraphQLIncludeDirective);\n  }\n\n  if (!directives.some(function (directive) {\n    return directive.name === 'deprecated';\n  })) {\n    directives.push(_directives.GraphQLDeprecatedDirective);\n  }\n\n  return new _schema.GraphQLSchema({\n    query: getObjectType(nodeMap[queryTypeName]),\n    mutation: mutationTypeName ? getObjectType(nodeMap[mutationTypeName]) : null,\n    subscription: subscriptionTypeName ? getObjectType(nodeMap[subscriptionTypeName]) : null,\n    types: types,\n    directives: directives,\n    astNode: schemaDef\n  });\n\n  function getDirective(directiveNode) {\n    return new _directives.GraphQLDirective({\n      name: directiveNode.name.value,\n      description: getDescription(directiveNode),\n      locations: directiveNode.locations.map(function (node) {\n        return node.value;\n      }),\n      args: directiveNode.arguments && makeInputValues(directiveNode.arguments),\n      astNode: directiveNode\n    });\n  }\n\n  function getObjectType(typeNode) {\n    var type = typeDefNamed(typeNode.name.value);\n    !(type instanceof _definition.GraphQLObjectType) ? (0, _invariant2.default)(0, 'AST must provide object type.') : void 0;\n    return type;\n  }\n\n  function produceType(typeNode) {\n    var typeName = getNamedTypeNode(typeNode).name.value;\n    var typeDef = typeDefNamed(typeName);\n    return buildWrappedType(typeDef, typeNode);\n  }\n\n  function produceInputType(typeNode) {\n    return (0, _definition.assertInputType)(produceType(typeNode));\n  }\n\n  function produceOutputType(typeNode) {\n    return (0, _definition.assertOutputType)(produceType(typeNode));\n  }\n\n  function produceObjectType(typeNode) {\n    var type = produceType(typeNode);\n    !(type instanceof _definition.GraphQLObjectType) ? (0, _invariant2.default)(0, 'Expected Object type.') : void 0;\n    return type;\n  }\n\n  function produceInterfaceType(typeNode) {\n    var type = produceType(typeNode);\n    !(type instanceof _definition.GraphQLInterfaceType) ? (0, _invariant2.default)(0, 'Expected Interface type.') : void 0;\n    return type;\n  }\n\n  function typeDefNamed(typeName) {\n    if (innerTypeMap[typeName]) {\n      return innerTypeMap[typeName];\n    }\n\n    if (!nodeMap[typeName]) {\n      throw new Error('Type \"' + typeName + '\" not found in document.');\n    }\n\n    var innerTypeDef = makeSchemaDef(nodeMap[typeName]);\n    if (!innerTypeDef) {\n      throw new Error('Nothing constructed for \"' + typeName + '\".');\n    }\n    innerTypeMap[typeName] = innerTypeDef;\n    return innerTypeDef;\n  }\n\n  function makeSchemaDef(def) {\n    if (!def) {\n      throw new Error('def must be defined');\n    }\n    switch (def.kind) {\n      case Kind.OBJECT_TYPE_DEFINITION:\n        return makeTypeDef(def);\n      case Kind.INTERFACE_TYPE_DEFINITION:\n        return makeInterfaceDef(def);\n      case Kind.ENUM_TYPE_DEFINITION:\n        return makeEnumDef(def);\n      case Kind.UNION_TYPE_DEFINITION:\n        return makeUnionDef(def);\n      case Kind.SCALAR_TYPE_DEFINITION:\n        return makeScalarDef(def);\n      case Kind.INPUT_OBJECT_TYPE_DEFINITION:\n        return makeInputObjectDef(def);\n      default:\n        throw new Error('Type kind \"' + def.kind + '\" not supported.');\n    }\n  }\n\n  function makeTypeDef(def) {\n    var typeName = def.name.value;\n    return new _definition.GraphQLObjectType({\n      name: typeName,\n      description: getDescription(def),\n      fields: function fields() {\n        return makeFieldDefMap(def);\n      },\n      interfaces: function interfaces() {\n        return makeImplementedInterfaces(def);\n      },\n      astNode: def\n    });\n  }\n\n  function makeFieldDefMap(def) {\n    return (0, _keyValMap2.default)(def.fields, function (field) {\n      return field.name.value;\n    }, function (field) {\n      return {\n        type: produceOutputType(field.type),\n        description: getDescription(field),\n        args: makeInputValues(field.arguments),\n        deprecationReason: getDeprecationReason(field),\n        astNode: field\n      };\n    });\n  }\n\n  function makeImplementedInterfaces(def) {\n    return def.interfaces && def.interfaces.map(function (iface) {\n      return produceInterfaceType(iface);\n    });\n  }\n\n  function makeInputValues(values) {\n    return (0, _keyValMap2.default)(values, function (value) {\n      return value.name.value;\n    }, function (value) {\n      var type = produceInputType(value.type);\n      return {\n        type: type,\n        description: getDescription(value),\n        defaultValue: (0, _valueFromAST.valueFromAST)(value.defaultValue, type),\n        astNode: value\n      };\n    });\n  }\n\n  function makeInterfaceDef(def) {\n    var typeName = def.name.value;\n    return new _definition.GraphQLInterfaceType({\n      name: typeName,\n      description: getDescription(def),\n      fields: function fields() {\n        return makeFieldDefMap(def);\n      },\n      astNode: def,\n      resolveType: cannotExecuteSchema\n    });\n  }\n\n  function makeEnumDef(def) {\n    var enumType = new _definition.GraphQLEnumType({\n      name: def.name.value,\n      description: getDescription(def),\n      values: (0, _keyValMap2.default)(def.values, function (enumValue) {\n        return enumValue.name.value;\n      }, function (enumValue) {\n        return {\n          description: getDescription(enumValue),\n          deprecationReason: getDeprecationReason(enumValue),\n          astNode: enumValue\n        };\n      }),\n      astNode: def\n    });\n\n    return enumType;\n  }\n\n  function makeUnionDef(def) {\n    return new _definition.GraphQLUnionType({\n      name: def.name.value,\n      description: getDescription(def),\n      types: def.types.map(function (t) {\n        return produceObjectType(t);\n      }),\n      resolveType: cannotExecuteSchema,\n      astNode: def\n    });\n  }\n\n  function makeScalarDef(def) {\n    return new _definition.GraphQLScalarType({\n      name: def.name.value,\n      description: getDescription(def),\n      astNode: def,\n      serialize: function serialize() {\n        return null;\n      },\n      // Note: validation calls the parse functions to determine if a\n      // literal value is correct. Returning null would cause use of custom\n      // scalars to always fail validation. Returning false causes them to\n      // always pass validation.\n      parseValue: function parseValue() {\n        return false;\n      },\n      parseLiteral: function parseLiteral() {\n        return false;\n      }\n    });\n  }\n\n  function makeInputObjectDef(def) {\n    return new _definition.GraphQLInputObjectType({\n      name: def.name.value,\n      description: getDescription(def),\n      fields: function fields() {\n        return makeInputValues(def.fields);\n      },\n      astNode: def\n    });\n  }\n}\n\n/**\n * Given a field or enum value node, returns the string value for the\n * deprecation reason.\n */\nfunction getDeprecationReason(node) {\n  var deprecated = (0, _values.getDirectiveValues)(_directives.GraphQLDeprecatedDirective, node);\n  return deprecated && deprecated.reason;\n}\n\n/**\n * Given an ast node, returns its string description based on a contiguous\n * block full-line of comments preceding it.\n */\nfunction getDescription(node) {\n  var loc = node.loc;\n  if (!loc) {\n    return;\n  }\n  var comments = [];\n  var minSpaces = void 0;\n  var token = loc.startToken.prev;\n  while (token && token.kind === _lexer.TokenKind.COMMENT && token.next && token.prev && token.line + 1 === token.next.line && token.line !== token.prev.line) {\n    var value = String(token.value);\n    var spaces = leadingSpaces(value);\n    if (minSpaces === undefined || spaces < minSpaces) {\n      minSpaces = spaces;\n    }\n    comments.push(value);\n    token = token.prev;\n  }\n  return comments.reverse().map(function (comment) {\n    return comment.slice(minSpaces);\n  }).join('\\n');\n}\n\n/**\n * A helper function to build a GraphQLSchema directly from a source\n * document.\n */\nfunction buildSchema(source) {\n  return buildASTSchema((0, _parser.parse)(source));\n}\n\n// Count the number of spaces on the starting side of a string.\nfunction leadingSpaces(str) {\n  var i = 0;\n  for (; i < str.length; i++) {\n    if (str[i] !== ' ') {\n      break;\n    }\n  }\n  return i;\n}\n\nfunction cannotExecuteSchema() {\n  throw new Error('Generated Schema cannot use Interface or Union types for execution.');\n}","// @flow\n\nrequire('./definitions/init');\n\nconst { ALIAS_KEYS, NODE_FIELDS, BUILDER_KEYS } = require('./definitions');\n\nconst t = exports; // Maps all exports to t\n\n/**\n * Registers `is[Type]` and `assert[Type]` generated functions for a given `type`.\n * Pass `skipAliasCheck` to force it to directly compare `node.type` with `type`.\n */\n\nfunction registerType(type: string) {\n  const key = `is${type}`;\n\n  const _isType = t[key] !== undefined\n    ? t[key]\n    : t[key] = (node, opts) => t.is(type, node, opts);\n\n  t[`assert${type}`] = (node, opts = {}) => {\n    if (!_isType(node, opts)) {\n      throw new Error(`Expected type \"${type}\" with option ${JSON.stringify(opts)}`);\n    }\n  };\n}\n\nexport { ALIAS_KEYS, NODE_FIELDS, BUILDER_KEYS };\n\n/**\n * Registers `is[Type]` and `assert[Type]` for all types.\n */\n\nfor (const type in t.NODE_FIELDS) {\n  registerType(type);\n}\n\n/**\n * Flip `ALIAS_KEYS` for faster access in the reverse direction.\n */\n\nexport const TYPES = [];\n\nt.FLIPPED_ALIAS_KEYS = Object.keys(t.ALIAS_KEYS).reduce((acc, type) => {\n  const aliasKeys = t.ALIAS_KEYS[type];\n\n  aliasKeys.forEach(alias => {\n    if (acc[alias] === undefined) {\n      TYPES.push(alias); // Populate `TYPES` with FLIPPED_ALIAS_KEY(S)\n\n      // Registers `is[Alias]` and `assert[Alias]` functions for all aliases.\n      t[`${alias.toUpperCase()}_TYPES`] = acc[alias];\n      registerType(alias);\n\n      acc[alias] = [];\n    }\n\n    acc[alias].push(type);\n  });\n\n  return acc;\n}, {});\n\n/**\n * Returns whether `node` is of given `type`.\n *\n * For better performance, use this instead of `is[Type]` when `type` is unknown.\n * Optionally, pass `skipAliasCheck` to directly compare `node.type` with `type`.\n */\n\nexport function is(type: string, node: Object, opts?: Object): boolean {\n  if (node === null || typeof node !== 'object') {\n    return false;\n  }\n\n  const matches = isType(node.kind, type);\n  if (!matches) {\n    return false;\n  }\n\n  if (typeof opts === 'undefined') {\n    return true;\n  } else {\n    return t.shallowEqual(node, opts);\n  }\n}\n\n/**\n * Test if a `nodeType` is a `targetType` or if `targetType` is an alias of `nodeType`.\n */\n\nexport function isType(nodeType: string, targetType: string): boolean {\n  if (nodeType === targetType) {\n    return true;\n  }\n\n  // This is a fast-path. If the test above failed, but an alias key is found, then the\n  // targetType was a primary node type, so there's no need to check the aliases.\n  if (t.ALIAS_KEYS[targetType]) {\n    return false;\n  }\n\n  const aliases: ?Array<string> = t.FLIPPED_ALIAS_KEYS[targetType];\n  if (aliases) {\n    if (aliases[0] === nodeType) {\n      return true;\n    }\n\n    for (const alias of aliases) {\n      if (nodeType === alias) {\n        return true;\n      }\n    }\n  }\n\n  return false;\n}\n\n/**\n * For each call of #defineType, the following expression evalutates and generates\n * a builder function that validates incoming arguments and returns a valid AST node.\n */\n\nfor (const type in t.BUILDER_KEYS) {\n  const keys = t.BUILDER_KEYS[type];\n  const fields = t.NODE_FIELDS[type];\n\n  function builder(...args) {\n    if (args.length > keys.length) {\n      throw new Error(\n        `t.${type}: Too many arguments passed. Received ${args.length} but can receive ` +\n          `no more than ${keys.length}`\n      );\n    }\n\n    const node = keys.reduce(\n      (node, key, i) => {\n        node[key] = (args[i] === undefined ? fields[key].default : args[i]);\n        return node;\n      },\n      { kind: type }\n    );\n\n    for (const key in node) {\n      validate(node, key, node[key]);\n    }\n\n    return node;\n  }\n\n  t[type[0].toLowerCase() + type.slice(1)] = builder;\n}\n\n/**\n * Executes the field validators for a given node\n */\n\nexport function validate(node?: Object, key: string, val: any) {\n  if (node === null || typeof node !== 'object') {\n    return;\n  }\n\n  const fields = t.NODE_FIELDS[node.kind];\n  if (fields === undefined) {\n    return;\n  }\n\n  const field = fields[key];\n  if (field === undefined || field.validate === undefined) {\n    return;\n  }\n\n  if (field.optional && (val === undefined || val === null)) {\n    return;\n  }\n\n  field.validate(node, key, val);\n}\n\n/**\n * Test if an object is shallowly equal.\n */\n\nexport function shallowEqual(actual: Object, expected: Object): boolean {\n  for (const key in expected) {\n    if (expected.hasOwnProperty(key) && actual[key] !== expected[key]) {\n      return false;\n    }\n  }\n\n  return true;\n}\n","/**\n * The current status of a query’s execution in our system.\n */\nexport enum NetworkStatus {\n  /**\n   * The query has never been run before and the query is now currently running. A query will still\n   * have this network status even if a partial data result was returned from the cache, but a\n   * query was dispatched anyway.\n   */\n  loading = 1,\n\n  /**\n   * If `setVariables` was called and a query was fired because of that then the network status\n   * will be `setVariables` until the result of that query comes back.\n   */\n  setVariables = 2,\n\n  /**\n   * Indicates that `fetchMore` was called on this query and that the query created is currently in\n   * flight.\n   */\n  fetchMore = 3,\n\n  /**\n   * Similar to the `setVariables` network status. It means that `refetch` was called on a query\n   * and the refetch request is currently in flight.\n   */\n  refetch = 4,\n\n  /**\n   * Indicates that a polling query is currently in flight. So for example if you are polling a\n   * query every 10 seconds then the network status will switch to `poll` every 10 seconds whenever\n   * a poll request has been sent but not resolved.\n   */\n  poll = 6,\n\n  /**\n   * No request is in flight for this query, and no errors happened. Everything is OK.\n   */\n  ready = 7,\n\n  /**\n   * No request is in flight for this query, but one or more errors were detected.\n   */\n  error = 8,\n}\n\n/**\n * Returns true if there is currently a network request in flight according to a given network\n * status.\n */\nexport function isNetworkRequestInFlight(\n  networkStatus: NetworkStatus,\n): boolean {\n  return networkStatus < 7;\n}\n","// This simplified polyfill attempts to follow the ECMAScript Observable proposal.\n// See https://github.com/zenparsing/es-observable\nimport { Observable as LinkObservable } from 'apollo-link';\n\nexport type Subscription = ZenObservable.Subscription;\nexport type Observer<T> = ZenObservable.Observer<T>;\n\nimport $$observable from 'symbol-observable';\n\n// rxjs interopt\nexport class Observable<T> extends LinkObservable<T> {\n  public [$$observable]() {\n    return this;\n  }\n\n  public ['@@observable' as any]() {\n    return this;\n  }\n}\n","export function isNonEmptyArray<T>(value?: ArrayLike<T>): value is Array<T> {\n  return Array.isArray(value) && value.length > 0;\n}\n","import { GraphQLError } from 'graphql';\nimport { isNonEmptyArray } from '../util/arrays';\n\nexport function isApolloError(err: Error): err is ApolloError {\n  return err.hasOwnProperty('graphQLErrors');\n}\n\n// Sets the error message on this error according to the\n// the GraphQL and network errors that are present.\n// If the error message has already been set through the\n// constructor or otherwise, this function is a nop.\nconst generateErrorMessage = (err: ApolloError) => {\n  let message = '';\n  // If we have GraphQL errors present, add that to the error message.\n  if (isNonEmptyArray(err.graphQLErrors)) {\n    err.graphQLErrors.forEach((graphQLError: GraphQLError) => {\n      const errorMessage = graphQLError\n        ? graphQLError.message\n        : 'Error message not found.';\n      message += `GraphQL error: ${errorMessage}\\n`;\n    });\n  }\n\n  if (err.networkError) {\n    message += 'Network error: ' + err.networkError.message + '\\n';\n  }\n\n  // strip newline from the end of the message\n  message = message.replace(/\\n$/, '');\n  return message;\n};\n\nexport class ApolloError extends Error {\n  public message: string;\n  public graphQLErrors: ReadonlyArray<GraphQLError>;\n  public networkError: Error | null;\n\n  // An object that can be used to provide some additional information\n  // about an error, e.g. specifying the type of error this is. Used\n  // internally within Apollo Client.\n  public extraInfo: any;\n\n  // Constructs an instance of ApolloError given a GraphQLError\n  // or a network error. Note that one of these has to be a valid\n  // value or the constructed error will be meaningless.\n  constructor({\n    graphQLErrors,\n    networkError,\n    errorMessage,\n    extraInfo,\n  }: {\n    graphQLErrors?: ReadonlyArray<GraphQLError>;\n    networkError?: Error | null;\n    errorMessage?: string;\n    extraInfo?: any;\n  }) {\n    super(errorMessage);\n    this.graphQLErrors = graphQLErrors || [];\n    this.networkError = networkError || null;\n\n    if (!errorMessage) {\n      this.message = generateErrorMessage(this);\n    } else {\n      this.message = errorMessage;\n    }\n\n    this.extraInfo = extraInfo;\n\n    // We're not using `Object.setPrototypeOf` here as it isn't fully\n    // supported on Android (see issue #3236).\n    (this as any).__proto__ = ApolloError.prototype;\n  }\n}\n","import { FetchResult } from 'apollo-link';\nimport { DocumentNode, GraphQLError } from 'graphql';\n\nimport { QueryStoreValue } from '../data/queries';\nimport { NetworkStatus } from './networkStatus';\nimport { Resolver } from './LocalState';\n\nexport type QueryListener = (\n  queryStoreValue: QueryStoreValue,\n  newData?: any,\n  forceResolvers?: boolean,\n) => void;\n\nexport type OperationVariables = { [key: string]: any };\n\nexport type PureQueryOptions = {\n  query: DocumentNode;\n  variables?: { [key: string]: any };\n  context?: any;\n};\n\nexport type ApolloQueryResult<T> = {\n  data: T;\n  errors?: ReadonlyArray<GraphQLError>;\n  loading: boolean;\n  networkStatus: NetworkStatus;\n  stale: boolean;\n};\n\nexport enum FetchType {\n  normal = 1,\n  refetch = 2,\n  poll = 3,\n}\n\n// This is part of the public API, people write these functions in `updateQueries`.\nexport type MutationQueryReducer<T> = (\n  previousResult: Record<string, any>,\n  options: {\n    mutationResult: FetchResult<T>;\n    queryName: string | undefined;\n    queryVariables: Record<string, any>;\n  },\n) => Record<string, any>;\n\nexport type MutationQueryReducersMap<T = { [key: string]: any }> = {\n  [queryName: string]: MutationQueryReducer<T>;\n};\n\nexport interface Resolvers {\n  [key: string]: {\n    [ field: string ]: Resolver;\n  };\n}\n","import {\n  isEqual,\n  tryFunctionOrLogError,\n  cloneDeep,\n  getOperationDefinition,\n} from 'apollo-utilities';\nimport { GraphQLError } from 'graphql';\nimport { NetworkStatus, isNetworkRequestInFlight } from './networkStatus';\nimport { Observable, Observer, Subscription } from '../util/Observable';\nimport { ApolloError } from '../errors/ApolloError';\nimport { QueryManager } from './QueryManager';\nimport { ApolloQueryResult, FetchType, OperationVariables } from './types';\nimport {\n  WatchQueryOptions,\n  FetchMoreQueryOptions,\n  SubscribeToMoreOptions,\n  ErrorPolicy,\n} from './watchQueryOptions';\n\nimport { QueryStoreValue } from '../data/queries';\n\nimport { invariant, InvariantError } from 'ts-invariant';\nimport { isNonEmptyArray } from '../util/arrays';\n\n// XXX remove in the next breaking semver change (3.0)\n// Deprecated, use ApolloCurrentQueryResult\nexport type ApolloCurrentResult<T> = {\n  data: T | {};\n  errors?: ReadonlyArray<GraphQLError>;\n  loading: boolean;\n  networkStatus: NetworkStatus;\n  error?: ApolloError;\n  partial?: boolean;\n};\n\nexport type ApolloCurrentQueryResult<T> = {\n  data: T | undefined;\n  errors?: ReadonlyArray<GraphQLError>;\n  loading: boolean;\n  networkStatus: NetworkStatus;\n  error?: ApolloError;\n  partial?: boolean;\n  stale?: boolean;\n};\n\nexport interface FetchMoreOptions<\n  TData = any,\n  TVariables = OperationVariables\n> {\n  updateQuery: (\n    previousQueryResult: TData,\n    options: {\n      fetchMoreResult?: TData;\n      variables?: TVariables;\n    },\n  ) => TData;\n}\n\nexport interface UpdateQueryOptions<TVariables> {\n  variables?: TVariables;\n}\n\nexport const hasError = (\n  storeValue: QueryStoreValue,\n  policy: ErrorPolicy = 'none',\n) => storeValue && (\n  storeValue.networkError ||\n  (policy === 'none' && isNonEmptyArray(storeValue.graphQLErrors))\n);\n\nexport class ObservableQuery<\n  TData = any,\n  TVariables = OperationVariables\n> extends Observable<ApolloQueryResult<TData>> {\n  public options: WatchQueryOptions<TVariables>;\n  public readonly queryId: string;\n  public readonly queryName?: string;\n  /**\n   *\n   * The current value of the variables for this query. Can change.\n   */\n  public variables: TVariables;\n\n  private shouldSubscribe: boolean;\n  private isTornDown: boolean;\n  private queryManager: QueryManager<any>;\n  private observers = new Set<Observer<ApolloQueryResult<TData>>>();\n  private subscriptions = new Set<Subscription>();\n\n  private lastResult: ApolloQueryResult<TData>;\n  private lastResultSnapshot: ApolloQueryResult<TData>;\n  private lastError: ApolloError;\n\n  constructor({\n    queryManager,\n    options,\n    shouldSubscribe = true,\n  }: {\n    queryManager: QueryManager<any>;\n    options: WatchQueryOptions<TVariables>;\n    shouldSubscribe?: boolean;\n  }) {\n    super((observer: Observer<ApolloQueryResult<TData>>) =>\n      this.onSubscribe(observer),\n    );\n\n    // active state\n    this.isTornDown = false;\n\n    // query information\n    this.options = options;\n    this.variables = options.variables || ({} as TVariables);\n    this.queryId = queryManager.generateQueryId();\n    this.shouldSubscribe = shouldSubscribe;\n\n    const opDef = getOperationDefinition(options.query);\n    this.queryName = opDef && opDef.name && opDef.name.value;\n\n    // related classes\n    this.queryManager = queryManager;\n  }\n\n  public result(): Promise<ApolloQueryResult<TData>> {\n    return new Promise((resolve, reject) => {\n      const observer: Observer<ApolloQueryResult<TData>> = {\n        next: (result: ApolloQueryResult<TData>) => {\n          resolve(result);\n\n          // Stop the query within the QueryManager if we can before\n          // this function returns.\n          //\n          // We do this in order to prevent observers piling up within\n          // the QueryManager. Notice that we only fully unsubscribe\n          // from the subscription in a setTimeout(..., 0)  call. This call can\n          // actually be handled by the browser at a much later time. If queries\n          // are fired in the meantime, observers that should have been removed\n          // from the QueryManager will continue to fire, causing an unnecessary\n          // performance hit.\n          this.observers.delete(observer);\n          if (!this.observers.size) {\n            this.queryManager.removeQuery(this.queryId);\n          }\n\n          setTimeout(() => {\n            subscription.unsubscribe();\n          }, 0);\n        },\n        error: reject,\n      };\n      const subscription = this.subscribe(observer);\n    });\n  }\n\n  // XXX remove in the next breaking semver change (3.0)\n  // Deprecated, use getCurrentResult()\n  public currentResult(): ApolloCurrentResult<TData> {\n    const result = this.getCurrentResult() as ApolloCurrentResult<TData>;\n    if (result.data === undefined) {\n      result.data = {};\n    }\n    return result;\n  }\n\n  /**\n   * Return the result of the query from the local cache as well as some fetching status\n   * `loading` and `networkStatus` allow to know if a request is in flight\n   * `partial` lets you know if the result from the local cache is complete or partial\n   * @return {data: Object, error: ApolloError, loading: boolean, networkStatus: number, partial: boolean}\n   */\n  public getCurrentResult(): ApolloCurrentQueryResult<TData> {\n    if (this.isTornDown) {\n      const { lastResult } = this;\n      return {\n        data: !this.lastError && lastResult && lastResult.data || void 0,\n        error: this.lastError,\n        loading: false,\n        networkStatus: NetworkStatus.error,\n      };\n    }\n\n    const { data, partial } = this.queryManager.getCurrentQueryResult(this);\n    const queryStoreValue = this.queryManager.queryStore.get(this.queryId);\n    let result: ApolloQueryResult<TData>;\n\n    const { fetchPolicy } = this.options;\n\n    const isNetworkFetchPolicy =\n      fetchPolicy === 'network-only' ||\n      fetchPolicy === 'no-cache';\n\n    if (queryStoreValue) {\n      const { networkStatus } = queryStoreValue;\n\n      if (hasError(queryStoreValue, this.options.errorPolicy)) {\n        return {\n          data: void 0,\n          loading: false,\n          networkStatus,\n          error: new ApolloError({\n            graphQLErrors: queryStoreValue.graphQLErrors,\n            networkError: queryStoreValue.networkError,\n          }),\n        };\n      }\n\n      // Variables might have been added dynamically at query time, when\n      // using `@client @export(as: \"varname\")` for example. When this happens,\n      // the variables have been updated in the query store, but not updated on\n      // the original `ObservableQuery`. We'll update the observable query\n      // variables here to match, so retrieving from the cache doesn't fail.\n      if (queryStoreValue.variables) {\n        this.options.variables = {\n          ...this.options.variables,\n          ...(queryStoreValue.variables as TVariables),\n        };\n        this.variables = this.options.variables;\n      }\n\n      result = {\n        data,\n        loading: isNetworkRequestInFlight(networkStatus),\n        networkStatus,\n      } as ApolloQueryResult<TData>;\n\n      if (queryStoreValue.graphQLErrors && this.options.errorPolicy === 'all') {\n        result.errors = queryStoreValue.graphQLErrors;\n      }\n\n    } else {\n      // We need to be careful about the loading state we show to the user, to try\n      // and be vaguely in line with what the user would have seen from .subscribe()\n      // but to still provide useful information synchronously when the query\n      // will not end up hitting the server.\n      // See more: https://github.com/apollostack/apollo-client/issues/707\n      // Basically: is there a query in flight right now (modolo the next tick)?\n      const loading = isNetworkFetchPolicy ||\n        (partial && fetchPolicy !== 'cache-only');\n\n      result = {\n        data,\n        loading,\n        networkStatus: loading ? NetworkStatus.loading : NetworkStatus.ready,\n      } as ApolloQueryResult<TData>;\n    }\n\n    if (!partial) {\n      this.updateLastResult({ ...result, stale: false });\n    }\n\n    return { ...result, partial };\n  }\n\n  // Compares newResult to the snapshot we took of this.lastResult when it was\n  // first received.\n  public isDifferentFromLastResult(newResult: ApolloQueryResult<TData>) {\n    const { lastResultSnapshot: snapshot } = this;\n    return !(\n      snapshot &&\n      newResult &&\n      snapshot.networkStatus === newResult.networkStatus &&\n      snapshot.stale === newResult.stale &&\n      isEqual(snapshot.data, newResult.data)\n    );\n  }\n\n  // Returns the last result that observer.next was called with. This is not the same as\n  // getCurrentResult! If you're not sure which you need, then you probably need getCurrentResult.\n  public getLastResult(): ApolloQueryResult<TData> {\n    return this.lastResult;\n  }\n\n  public getLastError(): ApolloError {\n    return this.lastError;\n  }\n\n  public resetLastResults(): void {\n    delete this.lastResult;\n    delete this.lastResultSnapshot;\n    delete this.lastError;\n    this.isTornDown = false;\n  }\n\n  public resetQueryStoreErrors() {\n    const queryStore = this.queryManager.queryStore.get(this.queryId);\n    if (queryStore) {\n      queryStore.networkError = null;\n      queryStore.graphQLErrors = [];\n    }\n  }\n\n  /**\n   * Update the variables of this observable query, and fetch the new results.\n   * This method should be preferred over `setVariables` in most use cases.\n   *\n   * @param variables: The new set of variables. If there are missing variables,\n   * the previous values of those variables will be used.\n   */\n  public refetch(variables?: TVariables): Promise<ApolloQueryResult<TData>> {\n    let { fetchPolicy } = this.options;\n    // early return if trying to read from cache during refetch\n    if (fetchPolicy === 'cache-only') {\n      return Promise.reject(new InvariantError(\n        'cache-only fetchPolicy option should not be used together with query refetch.',\n      ));\n    }\n\n    // Unless the provided fetchPolicy always consults the network\n    // (no-cache, network-only, or cache-and-network), override it with\n    // network-only to force the refetch for this fetchQuery call.\n    if (fetchPolicy !== 'no-cache' &&\n        fetchPolicy !== 'cache-and-network') {\n      fetchPolicy = 'network-only';\n    }\n\n    if (!isEqual(this.variables, variables)) {\n      // update observable variables\n      this.variables = {\n        ...this.variables,\n        ...variables,\n      };\n    }\n\n    if (!isEqual(this.options.variables, this.variables)) {\n      // Update the existing options with new variables\n      this.options.variables = {\n        ...this.options.variables,\n        ...this.variables,\n      };\n    }\n\n    return this.queryManager.fetchQuery(\n      this.queryId,\n      { ...this.options, fetchPolicy },\n      FetchType.refetch,\n    ) as Promise<ApolloQueryResult<TData>>;\n  }\n\n  public fetchMore<K extends keyof TVariables>(\n    fetchMoreOptions: FetchMoreQueryOptions<TVariables, K> &\n      FetchMoreOptions<TData, TVariables>,\n  ): Promise<ApolloQueryResult<TData>> {\n    // early return if no update Query\n    invariant(\n      fetchMoreOptions.updateQuery,\n      'updateQuery option is required. This function defines how to update the query data with the new results.',\n    );\n\n    const combinedOptions = {\n      ...(fetchMoreOptions.query ? fetchMoreOptions : {\n        ...this.options,\n        ...fetchMoreOptions,\n        variables: {\n          ...this.variables,\n          ...fetchMoreOptions.variables,\n        },\n      }),\n      fetchPolicy: 'network-only',\n    } as WatchQueryOptions;\n\n    const qid = this.queryManager.generateQueryId();\n\n    return this.queryManager\n      .fetchQuery(\n        qid,\n        combinedOptions,\n        FetchType.normal,\n        this.queryId,\n      )\n      .then(\n        fetchMoreResult => {\n          this.updateQuery((previousResult: any) =>\n            fetchMoreOptions.updateQuery(previousResult, {\n              fetchMoreResult: fetchMoreResult.data as TData,\n              variables: combinedOptions.variables as TVariables,\n            }),\n          );\n          this.queryManager.stopQuery(qid);\n          return fetchMoreResult as ApolloQueryResult<TData>;\n        },\n        error => {\n          this.queryManager.stopQuery(qid);\n          throw error;\n        },\n      );\n  }\n\n  // XXX the subscription variables are separate from the query variables.\n  // if you want to update subscription variables, right now you have to do that separately,\n  // and you can only do it by stopping the subscription and then subscribing again with new variables.\n  public subscribeToMore<\n    TSubscriptionData = TData,\n    TSubscriptionVariables = TVariables\n  >(\n    options: SubscribeToMoreOptions<\n      TData,\n      TSubscriptionVariables,\n      TSubscriptionData\n    >,\n  ) {\n    const subscription = this.queryManager\n      .startGraphQLSubscription({\n        query: options.document,\n        variables: options.variables,\n      })\n      .subscribe({\n        next: (subscriptionData: { data: TSubscriptionData }) => {\n          const { updateQuery } = options;\n          if (updateQuery) {\n            this.updateQuery<TSubscriptionVariables>(\n              (previous, { variables }) =>\n                updateQuery(previous, {\n                  subscriptionData,\n                  variables,\n                }),\n            );\n          }\n        },\n        error: (err: any) => {\n          if (options.onError) {\n            options.onError(err);\n            return;\n          }\n          invariant.error('Unhandled GraphQL subscription error', err);\n        },\n      });\n\n    this.subscriptions.add(subscription);\n\n    return () => {\n      if (this.subscriptions.delete(subscription)) {\n        subscription.unsubscribe();\n      }\n    };\n  }\n\n  // Note: if the query is not active (there are no subscribers), the promise\n  // will return null immediately.\n  public setOptions(\n    opts: WatchQueryOptions,\n  ): Promise<ApolloQueryResult<TData> | void> {\n    const { fetchPolicy: oldFetchPolicy } = this.options;\n    this.options = {\n      ...this.options,\n      ...opts,\n    } as WatchQueryOptions<TVariables>;\n\n    if (opts.pollInterval) {\n      this.startPolling(opts.pollInterval);\n    } else if (opts.pollInterval === 0) {\n      this.stopPolling();\n    }\n\n    const { fetchPolicy } = opts;\n\n    return this.setVariables(\n      this.options.variables as TVariables,\n      // Try to fetch the query if fetchPolicy changed from either cache-only\n      // or standby to something else, or changed to network-only.\n      oldFetchPolicy !== fetchPolicy && (\n        oldFetchPolicy === 'cache-only' ||\n        oldFetchPolicy === 'standby' ||\n        fetchPolicy === 'network-only'\n      ),\n      opts.fetchResults,\n    );\n  }\n\n  /**\n   * This is for *internal* use only. Most users should instead use `refetch`\n   * in order to be properly notified of results even when they come from cache.\n   *\n   * Update the variables of this observable query, and fetch the new results\n   * if they've changed. If you want to force new results, use `refetch`.\n   *\n   * Note: the `next` callback will *not* fire if the variables have not changed\n   * or if the result is coming from cache.\n   *\n   * Note: the promise will return the old results immediately if the variables\n   * have not changed.\n   *\n   * Note: the promise will return null immediately if the query is not active\n   * (there are no subscribers).\n   *\n   * @private\n   *\n   * @param variables: The new set of variables. If there are missing variables,\n   * the previous values of those variables will be used.\n   *\n   * @param tryFetch: Try and fetch new results even if the variables haven't\n   * changed (we may still just hit the store, but if there's nothing in there\n   * this will refetch)\n   *\n   * @param fetchResults: Option to ignore fetching results when updating variables\n   */\n  public setVariables(\n    variables: TVariables,\n    tryFetch: boolean = false,\n    fetchResults = true,\n  ): Promise<ApolloQueryResult<TData> | void> {\n    // since setVariables restarts the subscription, we reset the tornDown status\n    this.isTornDown = false;\n\n    variables = variables || this.variables;\n\n    if (!tryFetch && isEqual(variables, this.variables)) {\n      // If we have no observers, then we don't actually want to make a network\n      // request. As soon as someone observes the query, the request will kick\n      // off. For now, we just store any changes. (See #1077)\n      return this.observers.size && fetchResults\n        ? this.result()\n        : Promise.resolve();\n    }\n\n    this.variables = this.options.variables = variables;\n\n    // See comment above\n    if (!this.observers.size) {\n      return Promise.resolve();\n    }\n\n    // Use the same options as before, but with new variables\n    return this.queryManager.fetchQuery(\n      this.queryId,\n      this.options,\n    ) as Promise<ApolloQueryResult<TData>>;\n  }\n\n  public updateQuery<TVars = TVariables>(\n    mapFn: (\n      previousQueryResult: TData,\n      options: UpdateQueryOptions<TVars>,\n    ) => TData,\n  ): void {\n    const { queryManager } = this;\n    const {\n      previousResult,\n      variables,\n      document,\n    } = queryManager.getQueryWithPreviousResult<TData, TVars>(\n      this.queryId,\n    );\n\n    const newResult = tryFunctionOrLogError(() =>\n      mapFn(previousResult, { variables }),\n    );\n\n    if (newResult) {\n      queryManager.dataStore.markUpdateQueryResult(\n        document,\n        variables,\n        newResult,\n      );\n      queryManager.broadcastQueries();\n    }\n  }\n\n  public stopPolling() {\n    this.queryManager.stopPollingQuery(this.queryId);\n    this.options.pollInterval = undefined;\n  }\n\n  public startPolling(pollInterval: number) {\n    assertNotCacheFirstOrOnly(this);\n    this.options.pollInterval = pollInterval;\n    this.queryManager.startPollingQuery(this.options, this.queryId);\n  }\n\n  private updateLastResult(newResult: ApolloQueryResult<TData>) {\n    const previousResult = this.lastResult;\n    this.lastResult = newResult;\n    this.lastResultSnapshot = this.queryManager.assumeImmutableResults\n      ? newResult\n      : cloneDeep(newResult);\n    return previousResult;\n  }\n\n  private onSubscribe(observer: Observer<ApolloQueryResult<TData>>) {\n    // Zen Observable has its own error function, so in order to log correctly\n    // we need to provide a custom error callback.\n    try {\n      var subObserver = (observer as any)._subscription._observer;\n      if (subObserver && !subObserver.error) {\n        subObserver.error = defaultSubscriptionObserverErrorCallback;\n      }\n    } catch {}\n\n    const first = !this.observers.size;\n    this.observers.add(observer);\n\n    // Deliver initial result\n    if (observer.next && this.lastResult) observer.next(this.lastResult);\n    if (observer.error && this.lastError) observer.error(this.lastError);\n\n    // setup the query if it hasn't been done before\n    if (first) {\n      this.setUpQuery();\n    }\n\n    return () => {\n      if (this.observers.delete(observer) && !this.observers.size) {\n        this.tearDownQuery();\n      }\n    };\n  }\n\n  private setUpQuery() {\n    const { queryManager, queryId } = this;\n\n    if (this.shouldSubscribe) {\n      queryManager.addObservableQuery<TData>(queryId, this);\n    }\n\n    if (this.options.pollInterval) {\n      assertNotCacheFirstOrOnly(this);\n      queryManager.startPollingQuery(this.options, queryId);\n    }\n\n    const onError = (error: ApolloError) => {\n      // Since we don't get the current result on errors, only the error, we\n      // must mirror the updates that occur in QueryStore.markQueryError here\n      this.updateLastResult({\n        ...this.lastResult,\n        errors: error.graphQLErrors,\n        networkStatus: NetworkStatus.error,\n        loading: false,\n      });\n      iterateObserversSafely(this.observers, 'error', this.lastError = error);\n    };\n\n    queryManager.observeQuery<TData>(queryId, this.options, {\n      next: (result: ApolloQueryResult<TData>) => {\n        if (this.lastError || this.isDifferentFromLastResult(result)) {\n          const previousResult = this.updateLastResult(result);\n          const { query, variables, fetchPolicy } = this.options;\n\n          // Before calling `next` on each observer, we need to first see if\n          // the query is using `@client @export` directives, and update\n          // any variables that might have changed. If `@export` variables have\n          // changed, and the query is calling against both local and remote\n          // data, a refetch is needed to pull in new data, using the\n          // updated `@export` variables.\n          if (queryManager.transform(query).hasClientExports) {\n            queryManager.getLocalState().addExportedVariables(\n              query,\n              variables,\n            ).then((variables: TVariables) => {\n              const previousVariables = this.variables;\n              this.variables = this.options.variables = variables;\n              if (\n                !result.loading &&\n                previousResult &&\n                fetchPolicy !== 'cache-only' &&\n                queryManager.transform(query).serverQuery &&\n                !isEqual(previousVariables, variables)\n              ) {\n                this.refetch();\n              } else {\n                iterateObserversSafely(this.observers, 'next', result);\n              }\n            });\n          } else {\n            iterateObserversSafely(this.observers, 'next', result);\n          }\n        }\n      },\n      error: onError,\n    }).catch(onError);\n  }\n\n  private tearDownQuery() {\n    const { queryManager } = this;\n\n    this.isTornDown = true;\n    queryManager.stopPollingQuery(this.queryId);\n\n    // stop all active GraphQL subscriptions\n    this.subscriptions.forEach(sub => sub.unsubscribe());\n    this.subscriptions.clear();\n\n    queryManager.removeObservableQuery(this.queryId);\n    queryManager.stopQuery(this.queryId);\n\n    this.observers.clear();\n  }\n}\n\nfunction defaultSubscriptionObserverErrorCallback(error: ApolloError) {\n  invariant.error('Unhandled error', error.message, error.stack);\n}\n\nfunction iterateObserversSafely<E, A>(\n  observers: Set<Observer<E>>,\n  method: keyof Observer<E>,\n  argument?: A,\n) {\n  // In case observers is modified during iteration, we need to commit to the\n  // original elements, which also provides an opportunity to filter them down\n  // to just the observers with the given method.\n  const observersWithMethod: Observer<E>[] = [];\n  observers.forEach(obs => obs[method] && observersWithMethod.push(obs));\n  observersWithMethod.forEach(obs => (obs as any)[method](argument));\n}\n\nfunction assertNotCacheFirstOrOnly<TData, TVariables>(\n  obsQuery: ObservableQuery<TData, TVariables>,\n) {\n  const { fetchPolicy } = obsQuery.options;\n  invariant(\n    fetchPolicy !== 'cache-first' && fetchPolicy !== 'cache-only',\n    'Queries that specify the cache-first and cache-only fetchPolicies cannot also be polling queries.',\n  );\n}\n","import { DocumentNode } from 'graphql';\n\nexport class MutationStore {\n  private store: { [mutationId: string]: MutationStoreValue } = {};\n\n  public getStore(): { [mutationId: string]: MutationStoreValue } {\n    return this.store;\n  }\n\n  public get(mutationId: string): MutationStoreValue {\n    return this.store[mutationId];\n  }\n\n  public initMutation(\n    mutationId: string,\n    mutation: DocumentNode,\n    variables: Object | undefined,\n  ) {\n    this.store[mutationId] = {\n      mutation,\n      variables: variables || {},\n      loading: true,\n      error: null,\n    };\n  }\n\n  public markMutationError(mutationId: string, error: Error) {\n    const mutation = this.store[mutationId];\n    if (mutation) {\n      mutation.loading = false;\n      mutation.error = error;\n    }\n  }\n\n  public markMutationResult(mutationId: string) {\n    const mutation = this.store[mutationId];\n    if (mutation) {\n      mutation.loading = false;\n      mutation.error = null;\n    }\n  }\n\n  public reset() {\n    this.store = {};\n  }\n}\n\nexport interface MutationStoreValue {\n  mutation: DocumentNode;\n  variables: Object;\n  loading: boolean;\n  error: Error | null;\n}\n","import { DocumentNode, GraphQLError, ExecutionResult } from 'graphql';\nimport { isEqual } from 'apollo-utilities';\nimport { invariant } from 'ts-invariant';\nimport { NetworkStatus } from '../core/networkStatus';\nimport { isNonEmptyArray } from '../util/arrays';\n\nexport type QueryStoreValue = {\n  document: DocumentNode;\n  variables: Object;\n  previousVariables?: Object | null;\n  networkStatus: NetworkStatus;\n  networkError?: Error | null;\n  graphQLErrors?: ReadonlyArray<GraphQLError>;\n  metadata: any;\n};\n\nexport class QueryStore {\n  private store: { [queryId: string]: QueryStoreValue } = {};\n\n  public getStore(): { [queryId: string]: QueryStoreValue } {\n    return this.store;\n  }\n\n  public get(queryId: string): QueryStoreValue {\n    return this.store[queryId];\n  }\n\n  public initQuery(query: {\n    queryId: string;\n    document: DocumentNode;\n    storePreviousVariables: boolean;\n    variables: Object;\n    isPoll: boolean;\n    isRefetch: boolean;\n    metadata: any;\n    fetchMoreForQueryId: string | undefined;\n  }) {\n    const previousQuery = this.store[query.queryId];\n\n    // XXX we're throwing an error here to catch bugs where a query gets overwritten by a new one.\n    // we should implement a separate action for refetching so that QUERY_INIT may never overwrite\n    // an existing query (see also: https://github.com/apollostack/apollo-client/issues/732)\n    invariant(\n      !previousQuery ||\n      previousQuery.document === query.document ||\n      isEqual(previousQuery.document, query.document),\n      'Internal Error: may not update existing query string in store',\n    );\n\n    let isSetVariables = false;\n\n    let previousVariables: Object | null = null;\n    if (\n      query.storePreviousVariables &&\n      previousQuery &&\n      previousQuery.networkStatus !== NetworkStatus.loading\n      // if the previous query was still loading, we don't want to remember it at all.\n    ) {\n      if (!isEqual(previousQuery.variables, query.variables)) {\n        isSetVariables = true;\n        previousVariables = previousQuery.variables;\n      }\n    }\n\n    // TODO break this out into a separate function\n    let networkStatus;\n    if (isSetVariables) {\n      networkStatus = NetworkStatus.setVariables;\n    } else if (query.isPoll) {\n      networkStatus = NetworkStatus.poll;\n    } else if (query.isRefetch) {\n      networkStatus = NetworkStatus.refetch;\n      // TODO: can we determine setVariables here if it's a refetch and the variables have changed?\n    } else {\n      networkStatus = NetworkStatus.loading;\n    }\n\n    let graphQLErrors: ReadonlyArray<GraphQLError> = [];\n    if (previousQuery && previousQuery.graphQLErrors) {\n      graphQLErrors = previousQuery.graphQLErrors;\n    }\n\n    // XXX right now if QUERY_INIT is fired twice, like in a refetch situation, we just overwrite\n    // the store. We probably want a refetch action instead, because I suspect that if you refetch\n    // before the initial fetch is done, you'll get an error.\n    this.store[query.queryId] = {\n      document: query.document,\n      variables: query.variables,\n      previousVariables,\n      networkError: null,\n      graphQLErrors: graphQLErrors,\n      networkStatus,\n      metadata: query.metadata,\n    };\n\n    // If the action had a `moreForQueryId` property then we need to set the\n    // network status on that query as well to `fetchMore`.\n    //\n    // We have a complement to this if statement in the query result and query\n    // error action branch, but importantly *not* in the client result branch.\n    // This is because the implementation of `fetchMore` *always* sets\n    // `fetchPolicy` to `network-only` so we would never have a client result.\n    if (\n      typeof query.fetchMoreForQueryId === 'string' &&\n      this.store[query.fetchMoreForQueryId]\n    ) {\n      this.store[query.fetchMoreForQueryId].networkStatus =\n        NetworkStatus.fetchMore;\n    }\n  }\n\n  public markQueryResult(\n    queryId: string,\n    result: ExecutionResult,\n    fetchMoreForQueryId: string | undefined,\n  ) {\n    if (!this.store || !this.store[queryId]) return;\n\n    this.store[queryId].networkError = null;\n    this.store[queryId].graphQLErrors = isNonEmptyArray(result.errors) ? result.errors : [];\n    this.store[queryId].previousVariables = null;\n    this.store[queryId].networkStatus = NetworkStatus.ready;\n\n    // If we have a `fetchMoreForQueryId` then we need to update the network\n    // status for that query. See the branch for query initialization for more\n    // explanation about this process.\n    if (\n      typeof fetchMoreForQueryId === 'string' &&\n      this.store[fetchMoreForQueryId]\n    ) {\n      this.store[fetchMoreForQueryId].networkStatus = NetworkStatus.ready;\n    }\n  }\n\n  public markQueryError(\n    queryId: string,\n    error: Error,\n    fetchMoreForQueryId: string | undefined,\n  ) {\n    if (!this.store || !this.store[queryId]) return;\n\n    this.store[queryId].networkError = error;\n    this.store[queryId].networkStatus = NetworkStatus.error;\n\n    // If we have a `fetchMoreForQueryId` then we need to update the network\n    // status for that query. See the branch for query initialization for more\n    // explanation about this process.\n    if (typeof fetchMoreForQueryId === 'string') {\n      this.markQueryResultClient(fetchMoreForQueryId, true);\n    }\n  }\n\n  public markQueryResultClient(queryId: string, complete: boolean) {\n    const storeValue = this.store && this.store[queryId];\n    if (storeValue) {\n      storeValue.networkError = null;\n      storeValue.previousVariables = null;\n      if (complete) {\n        storeValue.networkStatus = NetworkStatus.ready;\n      }\n    }\n  }\n\n  public stopQuery(queryId: string) {\n    delete this.store[queryId];\n  }\n\n  public reset(observableQueryIds: string[]) {\n    Object.keys(this.store).forEach(queryId => {\n      if (observableQueryIds.indexOf(queryId) < 0) {\n        this.stopQuery(queryId);\n      } else {\n        // XXX set loading to true so listeners don't trigger unless they want results with partial data\n        this.store[queryId].networkStatus = NetworkStatus.loading;\n      }\n    });\n  }\n}\n","import {\n  DocumentNode,\n  OperationDefinitionNode,\n  SelectionSetNode,\n  SelectionNode,\n  InlineFragmentNode,\n  FragmentDefinitionNode,\n  FieldNode,\n  ASTNode,\n} from 'graphql';\nimport { visit, BREAK } from 'graphql/language/visitor';\n\nimport { ApolloCache } from 'apollo-cache';\nimport {\n  getMainDefinition,\n  buildQueryFromSelectionSet,\n  hasDirectives,\n  removeClientSetsFromDocument,\n  mergeDeep,\n  mergeDeepArray,\n  FragmentMap,\n  argumentsObjectFromField,\n  resultKeyNameFromField,\n  getFragmentDefinitions,\n  createFragmentMap,\n  shouldInclude,\n  isField,\n  isInlineFragment,\n} from 'apollo-utilities';\nimport { FetchResult } from 'apollo-link';\n\nimport { invariant } from 'ts-invariant';\n\nimport ApolloClient from '../ApolloClient';\nimport { Resolvers, OperationVariables } from './types';\nimport { capitalizeFirstLetter } from '../util/capitalizeFirstLetter';\n\nexport type Resolver = (\n  rootValue?: any,\n  args?: any,\n  context?: any,\n  info?: {\n    field: FieldNode;\n    fragmentMap: FragmentMap;\n  },\n) => any;\n\nexport type VariableMap = { [name: string]: any };\n\nexport type FragmentMatcher = (\n  rootValue: any,\n  typeCondition: string,\n  context: any,\n) => boolean;\n\nexport type ExecContext = {\n  fragmentMap: FragmentMap;\n  context: any;\n  variables: VariableMap;\n  fragmentMatcher: FragmentMatcher;\n  defaultOperationType: string;\n  exportedVariables: Record<string, any>;\n  onlyRunForcedResolvers: boolean;\n};\n\nexport type LocalStateOptions<TCacheShape> = {\n  cache: ApolloCache<TCacheShape>;\n  client?: ApolloClient<TCacheShape>;\n  resolvers?: Resolvers | Resolvers[];\n  fragmentMatcher?: FragmentMatcher;\n};\n\nexport class LocalState<TCacheShape> {\n  private cache: ApolloCache<TCacheShape>;\n  private client: ApolloClient<TCacheShape>;\n  private resolvers?: Resolvers;\n  private fragmentMatcher: FragmentMatcher;\n\n  constructor({\n    cache,\n    client,\n    resolvers,\n    fragmentMatcher,\n  }: LocalStateOptions<TCacheShape>) {\n    this.cache = cache;\n\n    if (client) {\n      this.client = client;\n    }\n\n    if (resolvers) {\n      this.addResolvers(resolvers);\n    }\n\n    if (fragmentMatcher) {\n      this.setFragmentMatcher(fragmentMatcher);\n    }\n  }\n\n  public addResolvers(resolvers: Resolvers | Resolvers[]) {\n    this.resolvers = this.resolvers || {};\n    if (Array.isArray(resolvers)) {\n      resolvers.forEach(resolverGroup => {\n        this.resolvers = mergeDeep(this.resolvers, resolverGroup);\n      });\n    } else {\n      this.resolvers = mergeDeep(this.resolvers, resolvers);\n    }\n  }\n\n  public setResolvers(resolvers: Resolvers | Resolvers[]) {\n    this.resolvers = {};\n    this.addResolvers(resolvers);\n  }\n\n  public getResolvers() {\n    return this.resolvers || {};\n  }\n\n  // Run local client resolvers against the incoming query and remote data.\n  // Locally resolved field values are merged with the incoming remote data,\n  // and returned. Note that locally resolved fields will overwrite\n  // remote data using the same field name.\n  public async runResolvers<TData>({\n    document,\n    remoteResult,\n    context,\n    variables,\n    onlyRunForcedResolvers = false,\n  }: {\n    document: DocumentNode | null;\n    remoteResult: FetchResult<TData>;\n    context?: Record<string, any>;\n    variables?: Record<string, any>;\n    onlyRunForcedResolvers?: boolean;\n  }): Promise<FetchResult<TData>> {\n    if (document) {\n      return this.resolveDocument(\n        document,\n        remoteResult.data,\n        context,\n        variables,\n        this.fragmentMatcher,\n        onlyRunForcedResolvers,\n      ).then(localResult => ({\n        ...remoteResult,\n        data: localResult.result,\n      }));\n    }\n\n    return remoteResult;\n  }\n\n  public setFragmentMatcher(fragmentMatcher: FragmentMatcher) {\n    this.fragmentMatcher = fragmentMatcher;\n  }\n\n  public getFragmentMatcher(): FragmentMatcher {\n    return this.fragmentMatcher;\n  }\n\n  // Client queries contain everything in the incoming document (if a @client\n  // directive is found).\n  public clientQuery(document: DocumentNode) {\n    if (hasDirectives(['client'], document)) {\n      if (this.resolvers) {\n        return document;\n      }\n      invariant.warn(\n        'Found @client directives in a query but no ApolloClient resolvers ' +\n        'were specified. This means ApolloClient local resolver handling ' +\n        'has been disabled, and @client directives will be passed through ' +\n        'to your link chain.',\n      );\n    }\n    return null;\n  }\n\n  // Server queries are stripped of all @client based selection sets.\n  public serverQuery(document: DocumentNode) {\n    return this.resolvers ? removeClientSetsFromDocument(document) : document;\n  }\n\n  public prepareContext(context = {}) {\n    const { cache } = this;\n\n    const newContext = {\n      ...context,\n      cache,\n      // Getting an entry's cache key is useful for local state resolvers.\n      getCacheKey: (obj: { __typename: string; id: string | number }) => {\n        if ((cache as any).config) {\n          return (cache as any).config.dataIdFromObject(obj);\n        } else {\n          invariant(false,\n            'To use context.getCacheKey, you need to use a cache that has ' +\n              'a configurable dataIdFromObject, like apollo-cache-inmemory.',\n          );\n        }\n      },\n    };\n\n    return newContext;\n  }\n\n  // To support `@client @export(as: \"someVar\")` syntax, we'll first resolve\n  // @client @export fields locally, then pass the resolved values back to be\n  // used alongside the original operation variables.\n  public async addExportedVariables(\n    document: DocumentNode,\n    variables: OperationVariables = {},\n    context = {},\n  ) {\n    if (document) {\n      return this.resolveDocument(\n        document,\n        this.buildRootValueFromCache(document, variables) || {},\n        this.prepareContext(context),\n        variables,\n      ).then(data => ({\n        ...variables,\n        ...data.exportedVariables,\n      }));\n    }\n\n    return {\n      ...variables,\n    };\n  }\n\n  public shouldForceResolvers(document: ASTNode) {\n    let forceResolvers = false;\n    visit(document, {\n      Directive: {\n        enter(node) {\n          if (node.name.value === 'client' && node.arguments) {\n            forceResolvers = node.arguments.some(\n              arg =>\n                arg.name.value === 'always' &&\n                arg.value.kind === 'BooleanValue' &&\n                arg.value.value === true,\n            );\n            if (forceResolvers) {\n              return BREAK;\n            }\n          }\n        },\n      },\n    });\n    return forceResolvers;\n  }\n\n  // Query the cache and return matching data.\n  private buildRootValueFromCache(\n    document: DocumentNode,\n    variables?: Record<string, any>,\n  ) {\n    return this.cache.diff({\n      query: buildQueryFromSelectionSet(document),\n      variables,\n      returnPartialData: true,\n      optimistic: false,\n    }).result;\n  }\n\n  private async resolveDocument<TData>(\n    document: DocumentNode,\n    rootValue: TData,\n    context: any = {},\n    variables: VariableMap = {},\n    fragmentMatcher: FragmentMatcher = () => true,\n    onlyRunForcedResolvers: boolean = false,\n  ) {\n    const mainDefinition = getMainDefinition(document);\n    const fragments = getFragmentDefinitions(document);\n    const fragmentMap = createFragmentMap(fragments);\n\n    const definitionOperation = (mainDefinition as OperationDefinitionNode)\n      .operation;\n\n    const defaultOperationType = definitionOperation\n      ? capitalizeFirstLetter(definitionOperation)\n      : 'Query';\n\n    const { cache, client } = this;\n    const execContext: ExecContext = {\n      fragmentMap,\n      context: {\n        ...context,\n        cache,\n        client,\n      },\n      variables,\n      fragmentMatcher,\n      defaultOperationType,\n      exportedVariables: {},\n      onlyRunForcedResolvers,\n    };\n\n    return this.resolveSelectionSet(\n      mainDefinition.selectionSet,\n      rootValue,\n      execContext,\n    ).then(result => ({\n      result,\n      exportedVariables: execContext.exportedVariables,\n    }));\n  }\n\n  private async resolveSelectionSet<TData>(\n    selectionSet: SelectionSetNode,\n    rootValue: TData,\n    execContext: ExecContext,\n  ) {\n    const { fragmentMap, context, variables } = execContext;\n    const resultsToMerge: TData[] = [rootValue];\n\n    const execute = async (selection: SelectionNode): Promise<void> => {\n      if (!shouldInclude(selection, variables)) {\n        // Skip this entirely.\n        return;\n      }\n\n      if (isField(selection)) {\n        return this.resolveField(selection, rootValue, execContext).then(\n          fieldResult => {\n            if (typeof fieldResult !== 'undefined') {\n              resultsToMerge.push({\n                [resultKeyNameFromField(selection)]: fieldResult,\n              } as TData);\n            }\n          },\n        );\n      }\n\n      let fragment: InlineFragmentNode | FragmentDefinitionNode;\n\n      if (isInlineFragment(selection)) {\n        fragment = selection;\n      } else {\n        // This is a named fragment.\n        fragment = fragmentMap[selection.name.value];\n        invariant(fragment, `No fragment named ${selection.name.value}`);\n      }\n\n      if (fragment && fragment.typeCondition) {\n        const typeCondition = fragment.typeCondition.name.value;\n        if (execContext.fragmentMatcher(rootValue, typeCondition, context)) {\n          return this.resolveSelectionSet(\n            fragment.selectionSet,\n            rootValue,\n            execContext,\n          ).then(fragmentResult => {\n            resultsToMerge.push(fragmentResult);\n          });\n        }\n      }\n    };\n\n    return Promise.all(selectionSet.selections.map(execute)).then(function() {\n      return mergeDeepArray(resultsToMerge);\n    });\n  }\n\n  private async resolveField(\n    field: FieldNode,\n    rootValue: any,\n    execContext: ExecContext,\n  ): Promise<any> {\n    const { variables } = execContext;\n    const fieldName = field.name.value;\n    const aliasedFieldName = resultKeyNameFromField(field);\n    const aliasUsed = fieldName !== aliasedFieldName;\n    const defaultResult = rootValue[aliasedFieldName] || rootValue[fieldName];\n    let resultPromise = Promise.resolve(defaultResult);\n\n    // Usually all local resolvers are run when passing through here, but\n    // if we've specifically identified that we only want to run forced\n    // resolvers (that is, resolvers for fields marked with\n    // `@client(always: true)`), then we'll skip running non-forced resolvers.\n    if (\n      !execContext.onlyRunForcedResolvers ||\n      this.shouldForceResolvers(field)\n    ) {\n      const resolverType =\n        rootValue.__typename || execContext.defaultOperationType;\n      const resolverMap = this.resolvers && this.resolvers[resolverType];\n      if (resolverMap) {\n        const resolve = resolverMap[aliasUsed ? fieldName : aliasedFieldName];\n        if (resolve) {\n          resultPromise = Promise.resolve(resolve(\n            rootValue,\n            argumentsObjectFromField(field, variables),\n            execContext.context,\n            { field, fragmentMap: execContext.fragmentMap },\n          ));\n        }\n      }\n    }\n\n    return resultPromise.then((result = defaultResult) => {\n      // If an @export directive is associated with the current field, store\n      // the `as` export variable name and current result for later use.\n      if (field.directives) {\n        field.directives.forEach(directive => {\n          if (directive.name.value === 'export' && directive.arguments) {\n            directive.arguments.forEach(arg => {\n              if (arg.name.value === 'as' && arg.value.kind === 'StringValue') {\n                execContext.exportedVariables[arg.value.value] = result;\n              }\n            });\n          }\n        });\n      }\n\n      // Handle all scalar types here.\n      if (!field.selectionSet) {\n        return result;\n      }\n\n      // From here down, the field has a selection set, which means it's trying\n      // to query a GraphQLObjectType.\n      if (result == null) {\n        // Basically any field in a GraphQL response can be null, or missing\n        return result;\n      }\n\n      if (Array.isArray(result)) {\n        return this.resolveSubSelectedArray(field, result, execContext);\n      }\n\n      // Returned value is an object, and the query has a sub-selection. Recurse.\n      if (field.selectionSet) {\n        return this.resolveSelectionSet(\n          field.selectionSet,\n          result,\n          execContext,\n        );\n      }\n    });\n  }\n\n  private resolveSubSelectedArray(\n    field: FieldNode,\n    result: any[],\n    execContext: ExecContext,\n  ): any {\n    return Promise.all(\n      result.map(item => {\n        if (item === null) {\n          return null;\n        }\n\n        // This is a nested array, recurse.\n        if (Array.isArray(item)) {\n          return this.resolveSubSelectedArray(field, item, execContext);\n        }\n\n        // This is an object, run the selection set on it.\n        if (field.selectionSet) {\n          return this.resolveSelectionSet(field.selectionSet, item, execContext);\n        }\n      }),\n    );\n  }\n}\n","export function capitalizeFirstLetter(str: string) {\n  return str.charAt(0).toUpperCase() + str.slice(1);\n}\n","import { Observable, Observer, Subscription } from './Observable';\n\n// Returns a normal Observable that can have any number of subscribers,\n// while ensuring the original Observable gets subscribed to at most once.\nexport function multiplex<T>(inner: Observable<T>): Observable<T> {\n  const observers = new Set<Observer<T>>();\n  let sub: Subscription | null = null;\n  return new Observable<T>(observer => {\n    observers.add(observer);\n    sub = sub || inner.subscribe({\n      next(value) {\n        observers.forEach(obs => obs.next && obs.next(value));\n      },\n      error(error) {\n        observers.forEach(obs => obs.error && obs.error(error));\n      },\n      complete() {\n        observers.forEach(obs => obs.complete && obs.complete());\n      },\n    });\n    return () => {\n      if (observers.delete(observer) && !observers.size && sub) {\n        sub.unsubscribe();\n        sub = null;\n      }\n    };\n  });\n}\n\n// Like Observable.prototype.map, except that the mapping function can\n// optionally return a Promise (or be async).\nexport function asyncMap<V, R>(\n  observable: Observable<V>,\n  mapFn: (value: V) => R | Promise<R>,\n): Observable<R> {\n  return new Observable<R>(observer => {\n    const { next, error, complete } = observer;\n    let activeNextCount = 0;\n    let completed = false;\n\n    const handler: Observer<V> = {\n      next(value) {\n        ++activeNextCount;\n        new Promise(resolve => {\n          resolve(mapFn(value));\n        }).then(\n          result => {\n            --activeNextCount;\n            next && next.call(observer, result);\n            completed && handler.complete!();\n          },\n          e => {\n            --activeNextCount;\n            error && error.call(observer, e);\n          },\n        );\n      },\n      error(e) {\n        error && error.call(observer, e);\n      },\n      complete() {\n        completed = true;\n        if (!activeNextCount) {\n          complete && complete.call(observer);\n        }\n      },\n    };\n\n    const sub = observable.subscribe(handler);\n    return () => sub.unsubscribe();\n  });\n}\n","import { execute, ApolloLink, FetchResult } from 'apollo-link';\nimport { DocumentNode } from 'graphql';\nimport { Cache } from 'apollo-cache';\nimport {\n  getDefaultValues,\n  getOperationDefinition,\n  getOperationName,\n  hasDirectives,\n  graphQLResultHasError,\n  hasClientExports,\n  removeConnectionDirectiveFromDocument,\n  canUseWeakMap,\n} from 'apollo-utilities';\n\nimport { invariant, InvariantError } from 'ts-invariant';\n\nimport { isApolloError, ApolloError } from '../errors/ApolloError';\nimport { Observer, Subscription, Observable } from '../util/Observable';\nimport { QueryWithUpdater, DataStore } from '../data/store';\nimport { MutationStore } from '../data/mutations';\nimport { QueryStore, QueryStoreValue } from '../data/queries';\n\nimport {\n  QueryOptions,\n  WatchQueryOptions,\n  SubscriptionOptions,\n  MutationOptions,\n  ErrorPolicy,\n} from './watchQueryOptions';\nimport { ObservableQuery } from './ObservableQuery';\nimport { NetworkStatus, isNetworkRequestInFlight } from './networkStatus';\nimport {\n  QueryListener,\n  ApolloQueryResult,\n  FetchType,\n  OperationVariables,\n} from './types';\nimport { LocalState } from './LocalState';\nimport { asyncMap, multiplex } from '../util/observables';\nimport { isNonEmptyArray } from '../util/arrays';\n\nconst { hasOwnProperty } = Object.prototype;\n\nexport interface QueryInfo {\n  listeners: Set<QueryListener>;\n  invalidated: boolean;\n  newData: Cache.DiffResult<any> | null;\n  document: DocumentNode | null;\n  lastRequestId: number;\n  // A map going from queryId to an observer for a query issued by watchQuery. We use\n  // these to keep track of queries that are inflight and error on the observers associated\n  // with them in case of some destabalizing action (e.g. reset of the Apollo store).\n  observableQuery: ObservableQuery<any> | null;\n  subscriptions: Set<Subscription>;\n  cancel?: () => void;\n}\n\nexport class QueryManager<TStore> {\n  public link: ApolloLink;\n  public mutationStore: MutationStore = new MutationStore();\n  public queryStore: QueryStore = new QueryStore();\n  public dataStore: DataStore<TStore>;\n  public readonly assumeImmutableResults: boolean;\n\n  private queryDeduplication: boolean;\n  private clientAwareness: Record<string, string> = {};\n  private localState: LocalState<TStore>;\n\n  private onBroadcast: () => void;\n\n  private ssrMode: boolean;\n\n  // let's not start at zero to avoid pain with bad checks\n  private idCounter = 1;\n\n  // XXX merge with ObservableQuery but that needs to be expanded to support mutations and\n  // subscriptions as well\n  private queries: Map<string, QueryInfo> = new Map();\n\n  // A map of Promise reject functions for fetchQuery promises that have not\n  // yet been resolved, used to keep track of in-flight queries so that we can\n  // reject them in case a destabilizing event occurs (e.g. Apollo store reset).\n  // The key is in the format of `query:${queryId}` or `fetchRequest:${queryId}`,\n  // depending on where the promise's rejection function was created from.\n  private fetchQueryRejectFns = new Map<string, Function>();\n\n  constructor({\n    link,\n    queryDeduplication = false,\n    store,\n    onBroadcast = () => undefined,\n    ssrMode = false,\n    clientAwareness = {},\n    localState,\n    assumeImmutableResults,\n  }: {\n    link: ApolloLink;\n    queryDeduplication?: boolean;\n    store: DataStore<TStore>;\n    onBroadcast?: () => void;\n    ssrMode?: boolean;\n    clientAwareness?: Record<string, string>;\n    localState?: LocalState<TStore>;\n    assumeImmutableResults?: boolean;\n  }) {\n    this.link = link;\n    this.queryDeduplication = queryDeduplication;\n    this.dataStore = store;\n    this.onBroadcast = onBroadcast;\n    this.clientAwareness = clientAwareness;\n    this.localState = localState || new LocalState({ cache: store.getCache() });\n    this.ssrMode = ssrMode;\n    this.assumeImmutableResults = !!assumeImmutableResults;\n  }\n\n  /**\n   * Call this method to terminate any active query processes, making it safe\n   * to dispose of this QueryManager instance.\n   */\n  public stop() {\n    this.queries.forEach((_info, queryId) => {\n      this.stopQueryNoBroadcast(queryId);\n    });\n\n    this.fetchQueryRejectFns.forEach(reject => {\n      reject(\n        new InvariantError('QueryManager stopped while query was in flight'),\n      );\n    });\n  }\n\n  public async mutate<T>({\n    mutation,\n    variables,\n    optimisticResponse,\n    updateQueries: updateQueriesByName,\n    refetchQueries = [],\n    awaitRefetchQueries = false,\n    update: updateWithProxyFn,\n    errorPolicy = 'none',\n    fetchPolicy,\n    context = {},\n  }: MutationOptions): Promise<FetchResult<T>> {\n    invariant(\n      mutation,\n      'mutation option is required. You must specify your GraphQL document in the mutation option.',\n    );\n\n    invariant(\n      !fetchPolicy || fetchPolicy === 'no-cache',\n      \"Mutations only support a 'no-cache' fetchPolicy. If you don't want to disable the cache, remove your fetchPolicy setting to proceed with the default mutation behavior.\"\n    );\n\n    const mutationId = this.generateQueryId();\n    mutation = this.transform(mutation).document;\n\n    this.setQuery(mutationId, () => ({ document: mutation }));\n\n    variables = this.getVariables(mutation, variables);\n\n    if (this.transform(mutation).hasClientExports) {\n      variables = await this.localState.addExportedVariables(mutation, variables, context);\n    }\n\n    // Create a map of update queries by id to the query instead of by name.\n    const generateUpdateQueriesInfo: () => {\n      [queryId: string]: QueryWithUpdater;\n    } = () => {\n      const ret: { [queryId: string]: QueryWithUpdater } = {};\n\n      if (updateQueriesByName) {\n        this.queries.forEach(({ observableQuery }, queryId) => {\n          if (observableQuery) {\n            const { queryName } = observableQuery;\n            if (\n              queryName &&\n              hasOwnProperty.call(updateQueriesByName, queryName)\n            ) {\n              ret[queryId] = {\n                updater: updateQueriesByName[queryName],\n                query: this.queryStore.get(queryId),\n              };\n            }\n          }\n        });\n      }\n\n      return ret;\n    };\n\n    this.mutationStore.initMutation(\n      mutationId,\n      mutation,\n      variables,\n    );\n\n    this.dataStore.markMutationInit({\n      mutationId,\n      document: mutation,\n      variables,\n      updateQueries: generateUpdateQueriesInfo(),\n      update: updateWithProxyFn,\n      optimisticResponse,\n    });\n\n    this.broadcastQueries();\n\n    const self = this;\n\n    return new Promise((resolve, reject) => {\n      let storeResult: FetchResult<T> | null;\n      let error: ApolloError;\n\n      self.getObservableFromLink(\n        mutation,\n        {\n          ...context,\n          optimisticResponse,\n        },\n        variables,\n        false,\n      ).subscribe({\n        next(result: FetchResult<T>) {\n          if (graphQLResultHasError(result) && errorPolicy === 'none') {\n            error = new ApolloError({\n              graphQLErrors: result.errors,\n            });\n            return;\n          }\n\n          self.mutationStore.markMutationResult(mutationId);\n\n          if (fetchPolicy !== 'no-cache') {\n            self.dataStore.markMutationResult({\n              mutationId,\n              result,\n              document: mutation,\n              variables,\n              updateQueries: generateUpdateQueriesInfo(),\n              update: updateWithProxyFn,\n            });\n          }\n\n          storeResult = result;\n        },\n\n        error(err: Error) {\n          self.mutationStore.markMutationError(mutationId, err);\n          self.dataStore.markMutationComplete({\n            mutationId,\n            optimisticResponse,\n          });\n          self.broadcastQueries();\n          self.setQuery(mutationId, () => ({ document: null }));\n          reject(\n            new ApolloError({\n              networkError: err,\n            }),\n          );\n        },\n\n        complete() {\n          if (error) {\n            self.mutationStore.markMutationError(mutationId, error);\n          }\n\n          self.dataStore.markMutationComplete({\n            mutationId,\n            optimisticResponse,\n          });\n\n          self.broadcastQueries();\n\n          if (error) {\n            reject(error);\n            return;\n          }\n\n          // allow for conditional refetches\n          // XXX do we want to make this the only API one day?\n          if (typeof refetchQueries === 'function') {\n            refetchQueries = refetchQueries(storeResult!);\n          }\n\n          const refetchQueryPromises: Promise<\n            ApolloQueryResult<any>[] | ApolloQueryResult<{}>\n          >[] = [];\n\n          if (isNonEmptyArray(refetchQueries)) {\n            refetchQueries.forEach(refetchQuery => {\n              if (typeof refetchQuery === 'string') {\n                self.queries.forEach(({ observableQuery }) => {\n                  if (\n                    observableQuery &&\n                    observableQuery.queryName === refetchQuery\n                  ) {\n                    refetchQueryPromises.push(observableQuery.refetch());\n                  }\n                });\n              } else {\n                const queryOptions: QueryOptions = {\n                  query: refetchQuery.query,\n                  variables: refetchQuery.variables,\n                  fetchPolicy: 'network-only',\n                };\n\n                if (refetchQuery.context) {\n                  queryOptions.context = refetchQuery.context;\n                }\n\n                refetchQueryPromises.push(self.query(queryOptions));\n              }\n            });\n          }\n\n          Promise.all(\n            awaitRefetchQueries ? refetchQueryPromises : [],\n          ).then(() => {\n            self.setQuery(mutationId, () => ({ document: null }));\n\n            if (\n              errorPolicy === 'ignore' &&\n              storeResult &&\n              graphQLResultHasError(storeResult)\n            ) {\n              delete storeResult.errors;\n            }\n\n            resolve(storeResult!);\n          });\n        },\n      });\n    });\n  }\n\n  public async fetchQuery<T>(\n    queryId: string,\n    options: WatchQueryOptions,\n    fetchType?: FetchType,\n    // This allows us to track if this is a query spawned by a `fetchMore`\n    // call for another query. We need this data to compute the `fetchMore`\n    // network status for the query this is fetching for.\n    fetchMoreForQueryId?: string,\n  ): Promise<FetchResult<T>> {\n    const {\n      metadata = null,\n      fetchPolicy = 'cache-first', // cache-first is the default fetch policy.\n      context = {},\n    } = options;\n\n    const query = this.transform(options.query).document;\n\n    let variables = this.getVariables(query, options.variables);\n\n    if (this.transform(query).hasClientExports) {\n      variables = await this.localState.addExportedVariables(query, variables, context);\n    }\n\n    options = { ...options, variables };\n\n    let storeResult: any;\n    const isNetworkOnly =\n      fetchPolicy === 'network-only' || fetchPolicy === 'no-cache';\n    let needToFetch = isNetworkOnly;\n\n    // Unless we are completely skipping the cache, we want to diff the query\n    // against the cache before we fetch it from the network interface.\n    if (!isNetworkOnly) {\n      const { complete, result } = this.dataStore.getCache().diff({\n        query,\n        variables,\n        returnPartialData: true,\n        optimistic: false,\n      });\n\n      // If we're in here, only fetch if we have missing fields\n      needToFetch = !complete || fetchPolicy === 'cache-and-network';\n      storeResult = result;\n    }\n\n    let shouldFetch =\n      needToFetch && fetchPolicy !== 'cache-only' && fetchPolicy !== 'standby';\n\n    // we need to check to see if this is an operation that uses the @live directive\n    if (hasDirectives(['live'], query)) shouldFetch = true;\n\n    const requestId = this.idCounter++;\n\n    // set up a watcher to listen to cache updates\n    const cancel = fetchPolicy !== 'no-cache'\n      ? this.updateQueryWatch(queryId, query, options)\n      : undefined;\n\n    // Initialize query in store with unique requestId\n    this.setQuery(queryId, () => ({\n      document: query,\n      lastRequestId: requestId,\n      invalidated: true,\n      cancel,\n    }));\n\n    this.invalidate(fetchMoreForQueryId);\n\n    this.queryStore.initQuery({\n      queryId,\n      document: query,\n      storePreviousVariables: shouldFetch,\n      variables,\n      isPoll: fetchType === FetchType.poll,\n      isRefetch: fetchType === FetchType.refetch,\n      metadata,\n      fetchMoreForQueryId,\n    });\n\n    this.broadcastQueries();\n\n    if (shouldFetch) {\n      const networkResult = this.fetchRequest<T>({\n        requestId,\n        queryId,\n        document: query,\n        options,\n        fetchMoreForQueryId,\n      }).catch(error => {\n        // This is for the benefit of `refetch` promises, which currently don't get their errors\n        // through the store like watchQuery observers do\n        if (isApolloError(error)) {\n          throw error;\n        } else {\n          if (requestId >= this.getQuery(queryId).lastRequestId) {\n            this.queryStore.markQueryError(queryId, error, fetchMoreForQueryId);\n            this.invalidate(queryId);\n            this.invalidate(fetchMoreForQueryId);\n            this.broadcastQueries();\n          }\n          throw new ApolloError({ networkError: error });\n        }\n      });\n\n      // we don't return the promise for cache-and-network since it is already\n      // returned below from the cache\n      if (fetchPolicy !== 'cache-and-network') {\n        return networkResult;\n      }\n\n      // however we need to catch the error so it isn't unhandled in case of\n      // network error\n      networkResult.catch(() => {});\n    }\n\n    // If there is no part of the query we need to fetch from the server (or,\n    // fetchPolicy is cache-only), we just write the store result as the final result.\n    this.queryStore.markQueryResultClient(queryId, !shouldFetch);\n    this.invalidate(queryId);\n    this.invalidate(fetchMoreForQueryId);\n\n    if (this.transform(query).hasForcedResolvers) {\n      return this.localState.runResolvers({\n        document: query,\n        remoteResult: { data: storeResult },\n        context,\n        variables,\n        onlyRunForcedResolvers: true,\n      }).then((result: FetchResult<T>) => {\n        this.markQueryResult(\n          queryId,\n          result,\n          options,\n          fetchMoreForQueryId,\n        );\n        this.broadcastQueries();\n        return result;\n      });\n    }\n\n    this.broadcastQueries();\n\n    // If we have no query to send to the server, we should return the result\n    // found within the store.\n    return { data: storeResult };\n  }\n\n  private markQueryResult<TData>(\n    queryId: string,\n    result: FetchResult<TData>,\n    {\n      fetchPolicy,\n      variables,\n      errorPolicy,\n    }: WatchQueryOptions,\n    fetchMoreForQueryId?: string,\n  ) {\n    if (fetchPolicy === 'no-cache') {\n      this.setQuery(queryId, () => ({\n        newData: { result: result.data, complete: true },\n      }));\n    } else {\n      this.dataStore.markQueryResult(\n        result,\n        this.getQuery(queryId).document!,\n        variables,\n        fetchMoreForQueryId,\n        errorPolicy === 'ignore' || errorPolicy === 'all',\n      );\n    }\n  }\n\n  // Returns a query listener that will update the given observer based on the\n  // results (or lack thereof) for a particular query.\n  public queryListenerForObserver<T>(\n    queryId: string,\n    options: WatchQueryOptions,\n    observer: Observer<ApolloQueryResult<T>>,\n  ): QueryListener {\n    function invoke(method: 'next' | 'error', argument: any) {\n      if (observer[method]) {\n        try {\n          observer[method]!(argument);\n        } catch (e) {\n          invariant.error(e);\n        }\n      } else if (method === 'error') {\n        invariant.error(argument);\n      }\n    }\n\n    return (\n      queryStoreValue: QueryStoreValue,\n      newData?: Cache.DiffResult<T>,\n    ) => {\n      // we're going to take a look at the data, so the query is no longer invalidated\n      this.invalidate(queryId, false);\n\n      // The query store value can be undefined in the event of a store\n      // reset.\n      if (!queryStoreValue) return;\n\n      const { observableQuery, document } = this.getQuery(queryId);\n\n      const fetchPolicy = observableQuery\n        ? observableQuery.options.fetchPolicy\n        : options.fetchPolicy;\n\n      // don't watch the store for queries on standby\n      if (fetchPolicy === 'standby') return;\n\n      const loading = isNetworkRequestInFlight(queryStoreValue.networkStatus);\n      const lastResult = observableQuery && observableQuery.getLastResult();\n\n      const networkStatusChanged = !!(\n        lastResult &&\n        lastResult.networkStatus !== queryStoreValue.networkStatus\n      );\n\n      const shouldNotifyIfLoading =\n        options.returnPartialData ||\n        (!newData && queryStoreValue.previousVariables) ||\n        (networkStatusChanged && options.notifyOnNetworkStatusChange) ||\n        fetchPolicy === 'cache-only' ||\n        fetchPolicy === 'cache-and-network';\n\n      if (loading && !shouldNotifyIfLoading) {\n        return;\n      }\n\n      const hasGraphQLErrors = isNonEmptyArray(queryStoreValue.graphQLErrors);\n\n      const errorPolicy: ErrorPolicy = observableQuery\n        && observableQuery.options.errorPolicy\n        || options.errorPolicy\n        || 'none';\n\n      // If we have either a GraphQL error or a network error, we create\n      // an error and tell the observer about it.\n      if (errorPolicy === 'none' && hasGraphQLErrors || queryStoreValue.networkError) {\n        return invoke('error', new ApolloError({\n          graphQLErrors: queryStoreValue.graphQLErrors,\n          networkError: queryStoreValue.networkError,\n        }));\n      }\n\n      try {\n        let data: any;\n        let isMissing: boolean;\n\n        if (newData) {\n          // As long as we're using the cache, clear out the latest\n          // `newData`, since it will now become the current data. We need\n          // to keep the `newData` stored with the query when using\n          // `no-cache` since `getCurrentQueryResult` attemps to pull from\n          // `newData` first, following by trying the cache (which won't\n          // find a hit for `no-cache`).\n          if (fetchPolicy !== 'no-cache' && fetchPolicy !== 'network-only') {\n            this.setQuery(queryId, () => ({ newData: null }));\n          }\n\n          data = newData.result;\n          isMissing = !newData.complete;\n        } else {\n          const lastError = observableQuery && observableQuery.getLastError();\n          const errorStatusChanged =\n            errorPolicy !== 'none' &&\n            (lastError && lastError.graphQLErrors) !==\n              queryStoreValue.graphQLErrors;\n\n          if (lastResult && lastResult.data && !errorStatusChanged) {\n            data = lastResult.data;\n            isMissing = false;\n          } else {\n            const diffResult = this.dataStore.getCache().diff({\n              query: document as DocumentNode,\n              variables:\n                queryStoreValue.previousVariables ||\n                queryStoreValue.variables,\n              returnPartialData: true,\n              optimistic: true,\n            });\n\n            data = diffResult.result;\n            isMissing = !diffResult.complete;\n          }\n        }\n\n        // If there is some data missing and the user has told us that they\n        // do not tolerate partial data then we want to return the previous\n        // result and mark it as stale.\n        const stale = isMissing && !(\n          options.returnPartialData ||\n          fetchPolicy === 'cache-only'\n        );\n\n        const resultFromStore: ApolloQueryResult<T> = {\n          data: stale ? lastResult && lastResult.data : data,\n          loading,\n          networkStatus: queryStoreValue.networkStatus,\n          stale,\n        };\n\n        // if the query wants updates on errors we need to add it to the result\n        if (errorPolicy === 'all' && hasGraphQLErrors) {\n          resultFromStore.errors = queryStoreValue.graphQLErrors;\n        }\n\n        invoke('next', resultFromStore);\n\n      } catch (networkError) {\n        invoke('error', new ApolloError({ networkError }));\n      }\n    };\n  }\n\n  private transformCache = new (canUseWeakMap ? WeakMap : Map)<\n    DocumentNode,\n    Readonly<{\n      document: Readonly<DocumentNode>;\n      hasClientExports: boolean;\n      hasForcedResolvers: boolean;\n      clientQuery: Readonly<DocumentNode> | null;\n      serverQuery: Readonly<DocumentNode> | null;\n      defaultVars: Readonly<OperationVariables>;\n    }>\n  >();\n\n  public transform(document: DocumentNode) {\n    const { transformCache } = this;\n\n    if (!transformCache.has(document)) {\n      const cache = this.dataStore.getCache();\n      const transformed = cache.transformDocument(document);\n      const forLink = removeConnectionDirectiveFromDocument(\n        cache.transformForLink(transformed));\n\n      const clientQuery = this.localState.clientQuery(transformed);\n      const serverQuery = this.localState.serverQuery(forLink);\n\n      const cacheEntry = {\n        document: transformed,\n        // TODO These two calls (hasClientExports and shouldForceResolvers)\n        // could probably be merged into a single traversal.\n        hasClientExports: hasClientExports(transformed),\n        hasForcedResolvers: this.localState.shouldForceResolvers(transformed),\n        clientQuery,\n        serverQuery,\n        defaultVars: getDefaultValues(\n          getOperationDefinition(transformed)\n        ) as OperationVariables,\n      };\n\n      const add = (doc: DocumentNode | null) => {\n        if (doc && !transformCache.has(doc)) {\n          transformCache.set(doc, cacheEntry);\n        }\n      }\n      // Add cacheEntry to the transformCache using several different keys,\n      // since any one of these documents could end up getting passed to the\n      // transform method again in the future.\n      add(document);\n      add(transformed);\n      add(clientQuery);\n      add(serverQuery);\n    }\n\n    return transformCache.get(document)!;\n  }\n\n  private getVariables(\n    document: DocumentNode,\n    variables?: OperationVariables,\n  ): OperationVariables {\n    return {\n      ...this.transform(document).defaultVars,\n      ...variables,\n    };\n  }\n\n  // The shouldSubscribe option is a temporary fix that tells us whether watchQuery was called\n  // directly (i.e. through ApolloClient) or through the query method within QueryManager.\n  // Currently, the query method uses watchQuery in order to handle non-network errors correctly\n  // but we don't want to keep track observables issued for the query method since those aren't\n  // supposed to be refetched in the event of a store reset. Once we unify error handling for\n  // network errors and non-network errors, the shouldSubscribe option will go away.\n\n  public watchQuery<T, TVariables = OperationVariables>(\n    options: WatchQueryOptions,\n    shouldSubscribe = true,\n  ): ObservableQuery<T, TVariables> {\n    invariant(\n      options.fetchPolicy !== 'standby',\n      'client.watchQuery cannot be called with fetchPolicy set to \"standby\"',\n    );\n\n    // assign variable default values if supplied\n    options.variables = this.getVariables(options.query, options.variables);\n\n    if (typeof options.notifyOnNetworkStatusChange === 'undefined') {\n      options.notifyOnNetworkStatusChange = false;\n    }\n\n    let transformedOptions = { ...options } as WatchQueryOptions<TVariables>;\n\n    return new ObservableQuery<T, TVariables>({\n      queryManager: this,\n      options: transformedOptions,\n      shouldSubscribe: shouldSubscribe,\n    });\n  }\n\n  public query<T>(options: QueryOptions): Promise<ApolloQueryResult<T>> {\n    invariant(\n      options.query,\n      'query option is required. You must specify your GraphQL document ' +\n        'in the query option.',\n    );\n\n    invariant(\n      options.query.kind === 'Document',\n      'You must wrap the query string in a \"gql\" tag.',\n    );\n\n    invariant(\n      !(options as any).returnPartialData,\n      'returnPartialData option only supported on watchQuery.',\n    );\n\n    invariant(\n      !(options as any).pollInterval,\n      'pollInterval option only supported on watchQuery.',\n    );\n\n    return new Promise<ApolloQueryResult<T>>((resolve, reject) => {\n      const watchedQuery = this.watchQuery<T>(options, false);\n      this.fetchQueryRejectFns.set(`query:${watchedQuery.queryId}`, reject);\n      watchedQuery\n        .result()\n        .then(resolve, reject)\n        // Since neither resolve nor reject throw or return a value, this .then\n        // handler is guaranteed to execute. Note that it doesn't really matter\n        // when we remove the reject function from this.fetchQueryRejectFns,\n        // since resolve and reject are mutually idempotent. In fact, it would\n        // not be incorrect to let reject functions accumulate over time; it's\n        // just a waste of memory.\n        .then(() =>\n          this.fetchQueryRejectFns.delete(`query:${watchedQuery.queryId}`),\n        );\n    });\n  }\n\n  public generateQueryId() {\n    return String(this.idCounter++);\n  }\n\n  public stopQueryInStore(queryId: string) {\n    this.stopQueryInStoreNoBroadcast(queryId);\n    this.broadcastQueries();\n  }\n\n  private stopQueryInStoreNoBroadcast(queryId: string) {\n    this.stopPollingQuery(queryId);\n    this.queryStore.stopQuery(queryId);\n    this.invalidate(queryId);\n  }\n\n  public addQueryListener(queryId: string, listener: QueryListener) {\n    this.setQuery(queryId, ({ listeners }) => {\n      listeners.add(listener);\n      return { invalidated: false };\n    });\n  }\n\n  public updateQueryWatch(\n    queryId: string,\n    document: DocumentNode,\n    options: WatchQueryOptions,\n  ) {\n    const { cancel } = this.getQuery(queryId);\n    if (cancel) cancel();\n    const previousResult = () => {\n      let previousResult = null;\n      const { observableQuery } = this.getQuery(queryId);\n      if (observableQuery) {\n        const lastResult = observableQuery.getLastResult();\n        if (lastResult) {\n          previousResult = lastResult.data;\n        }\n      }\n\n      return previousResult;\n    };\n    return this.dataStore.getCache().watch({\n      query: document as DocumentNode,\n      variables: options.variables,\n      optimistic: true,\n      previousResult,\n      callback: newData => {\n        this.setQuery(queryId, () => ({ invalidated: true, newData }));\n      },\n    });\n  }\n\n  // Adds an ObservableQuery to this.observableQueries and to this.observableQueriesByName.\n  public addObservableQuery<T>(\n    queryId: string,\n    observableQuery: ObservableQuery<T>,\n  ) {\n    this.setQuery(queryId, () => ({ observableQuery }));\n  }\n\n  public removeObservableQuery(queryId: string) {\n    const { cancel } = this.getQuery(queryId);\n    this.setQuery(queryId, () => ({ observableQuery: null }));\n    if (cancel) cancel();\n  }\n\n  public clearStore(): Promise<void> {\n    // Before we have sent the reset action to the store,\n    // we can no longer rely on the results returned by in-flight\n    // requests since these may depend on values that previously existed\n    // in the data portion of the store. So, we cancel the promises and observers\n    // that we have issued so far and not yet resolved (in the case of\n    // queries).\n    this.fetchQueryRejectFns.forEach(reject => {\n      reject(new InvariantError(\n        'Store reset while query was in flight (not completed in link chain)',\n      ));\n    });\n\n    const resetIds: string[] = [];\n    this.queries.forEach(({ observableQuery }, queryId) => {\n      if (observableQuery) resetIds.push(queryId);\n    });\n\n    this.queryStore.reset(resetIds);\n    this.mutationStore.reset();\n\n    // begin removing data from the store\n    return this.dataStore.reset();\n  }\n\n  public resetStore(): Promise<ApolloQueryResult<any>[]> {\n    // Similarly, we have to have to refetch each of the queries currently being\n    // observed. We refetch instead of error'ing on these since the assumption is that\n    // resetting the store doesn't eliminate the need for the queries currently being\n    // watched. If there is an existing query in flight when the store is reset,\n    // the promise for it will be rejected and its results will not be written to the\n    // store.\n    return this.clearStore().then(() => {\n      return this.reFetchObservableQueries();\n    });\n  }\n\n  public reFetchObservableQueries(\n    includeStandby: boolean = false,\n  ): Promise<ApolloQueryResult<any>[]> {\n    const observableQueryPromises: Promise<ApolloQueryResult<any>>[] = [];\n\n    this.queries.forEach(({ observableQuery }, queryId) => {\n      if (observableQuery) {\n        const fetchPolicy = observableQuery.options.fetchPolicy;\n\n        observableQuery.resetLastResults();\n        if (\n          fetchPolicy !== 'cache-only' &&\n          (includeStandby || fetchPolicy !== 'standby')\n        ) {\n          observableQueryPromises.push(observableQuery.refetch());\n        }\n\n        this.setQuery(queryId, () => ({ newData: null }));\n        this.invalidate(queryId);\n      }\n    });\n\n    this.broadcastQueries();\n\n    return Promise.all(observableQueryPromises);\n  }\n\n  public observeQuery<T>(\n    queryId: string,\n    options: WatchQueryOptions,\n    observer: Observer<ApolloQueryResult<T>>,\n  ) {\n    this.addQueryListener(\n      queryId,\n      this.queryListenerForObserver(queryId, options, observer),\n    );\n    return this.fetchQuery<T>(queryId, options);\n  }\n\n  public startQuery<T>(\n    queryId: string,\n    options: WatchQueryOptions,\n    listener: QueryListener,\n  ) {\n    invariant.warn(\"The QueryManager.startQuery method has been deprecated\");\n\n    this.addQueryListener(queryId, listener);\n\n    this.fetchQuery<T>(queryId, options)\n      // `fetchQuery` returns a Promise. In case of a failure it should be caucht or else the\n      // console will show an `Uncaught (in promise)` message. Ignore the error for now.\n      .catch(() => undefined);\n\n    return queryId;\n  }\n\n  public startGraphQLSubscription<T = any>({\n    query,\n    fetchPolicy,\n    variables,\n  }: SubscriptionOptions): Observable<FetchResult<T>> {\n    query = this.transform(query).document;\n    variables = this.getVariables(query, variables);\n\n    const makeObservable = (variables: OperationVariables) =>\n      this.getObservableFromLink<T>(\n        query,\n        {},\n        variables,\n        false,\n      ).map(result => {\n        if (!fetchPolicy || fetchPolicy !== 'no-cache') {\n          this.dataStore.markSubscriptionResult(\n            result,\n            query,\n            variables,\n          );\n          this.broadcastQueries();\n        }\n\n        if (graphQLResultHasError(result)) {\n          throw new ApolloError({\n            graphQLErrors: result.errors,\n          });\n        }\n\n        return result;\n      });\n\n    if (this.transform(query).hasClientExports) {\n      const observablePromise = this.localState.addExportedVariables(\n        query,\n        variables,\n      ).then(makeObservable);\n\n      return new Observable<FetchResult<T>>(observer => {\n        let sub: Subscription | null = null;\n        observablePromise.then(\n          observable => sub = observable.subscribe(observer),\n          observer.error,\n        );\n        return () => sub && sub.unsubscribe();\n      });\n    }\n\n    return makeObservable(variables);\n  }\n\n  public stopQuery(queryId: string) {\n    this.stopQueryNoBroadcast(queryId);\n    this.broadcastQueries();\n  }\n\n  private stopQueryNoBroadcast(queryId: string) {\n    this.stopQueryInStoreNoBroadcast(queryId);\n    this.removeQuery(queryId);\n  }\n\n  public removeQuery(queryId: string) {\n    // teardown all links\n    // Both `QueryManager.fetchRequest` and `QueryManager.query` create separate promises\n    // that each add their reject functions to fetchQueryRejectFns.\n    // A query created with `QueryManager.query()` could trigger a `QueryManager.fetchRequest`.\n    // The same queryId could have two rejection fns for two promises\n    this.fetchQueryRejectFns.delete(`query:${queryId}`);\n    this.fetchQueryRejectFns.delete(`fetchRequest:${queryId}`);\n    this.getQuery(queryId).subscriptions.forEach(x => x.unsubscribe());\n    this.queries.delete(queryId);\n  }\n\n  public getCurrentQueryResult<T>(\n    observableQuery: ObservableQuery<T>,\n    optimistic: boolean = true,\n  ): {\n    data: T | undefined;\n    partial: boolean;\n  } {\n    const { variables, query, fetchPolicy, returnPartialData } = observableQuery.options;\n    const lastResult = observableQuery.getLastResult();\n    const { newData } = this.getQuery(observableQuery.queryId);\n\n    if (newData && newData.complete) {\n      return { data: newData.result, partial: false };\n    }\n\n    if (fetchPolicy === 'no-cache' || fetchPolicy === 'network-only') {\n      return { data: undefined, partial: false };\n    }\n\n    const { result, complete } = this.dataStore.getCache().diff<T>({\n      query,\n      variables,\n      previousResult: lastResult ? lastResult.data : undefined,\n      returnPartialData: true,\n      optimistic,\n    });\n\n    return {\n      data: (complete || returnPartialData) ? result : void 0,\n      partial: !complete,\n    };\n  }\n\n  public getQueryWithPreviousResult<TData, TVariables = OperationVariables>(\n    queryIdOrObservable: string | ObservableQuery<TData, TVariables>,\n  ): {\n    previousResult: any;\n    variables: TVariables | undefined;\n    document: DocumentNode;\n  } {\n    let observableQuery: ObservableQuery<TData, any>;\n    if (typeof queryIdOrObservable === 'string') {\n      const { observableQuery: foundObserveableQuery } = this.getQuery(\n        queryIdOrObservable,\n      );\n      invariant(\n        foundObserveableQuery,\n        `ObservableQuery with this id doesn't exist: ${queryIdOrObservable}`\n      );\n      observableQuery = foundObserveableQuery!;\n    } else {\n      observableQuery = queryIdOrObservable;\n    }\n\n    const { variables, query } = observableQuery.options;\n    return {\n      previousResult: this.getCurrentQueryResult(observableQuery, false).data,\n      variables,\n      document: query,\n    };\n  }\n\n  public broadcastQueries() {\n    this.onBroadcast();\n    this.queries.forEach((info, id) => {\n      if (info.invalidated) {\n        info.listeners.forEach(listener => {\n          // it's possible for the listener to be undefined if the query is being stopped\n          // See here for more detail: https://github.com/apollostack/apollo-client/issues/231\n          if (listener) {\n            listener(this.queryStore.get(id), info.newData);\n          }\n        });\n      }\n    });\n  }\n\n  public getLocalState(): LocalState<TStore> {\n    return this.localState;\n  }\n\n  private inFlightLinkObservables = new Map<\n    DocumentNode,\n    Map<string, Observable<FetchResult>>\n  >();\n\n  private getObservableFromLink<T = any>(\n    query: DocumentNode,\n    context: any,\n    variables?: OperationVariables,\n    deduplication: boolean = this.queryDeduplication,\n  ): Observable<FetchResult<T>> {\n    let observable: Observable<FetchResult<T>>;\n\n    const { serverQuery } = this.transform(query);\n    if (serverQuery) {\n      const { inFlightLinkObservables, link } = this;\n\n      const operation = {\n        query: serverQuery,\n        variables,\n        operationName: getOperationName(serverQuery) || void 0,\n        context: this.prepareContext({\n          ...context,\n          forceFetch: !deduplication\n        }),\n      };\n\n      context = operation.context;\n\n      if (deduplication) {\n        const byVariables = inFlightLinkObservables.get(serverQuery) || new Map();\n        inFlightLinkObservables.set(serverQuery, byVariables);\n\n        const varJson = JSON.stringify(variables);\n        observable = byVariables.get(varJson);\n\n        if (!observable) {\n          byVariables.set(\n            varJson,\n            observable = multiplex(\n              execute(link, operation) as Observable<FetchResult<T>>\n            )\n          );\n\n          const cleanup = () => {\n            byVariables.delete(varJson);\n            if (!byVariables.size) inFlightLinkObservables.delete(serverQuery);\n            cleanupSub.unsubscribe();\n          };\n\n          const cleanupSub = observable.subscribe({\n            next: cleanup,\n            error: cleanup,\n            complete: cleanup,\n          });\n        }\n\n      } else {\n        observable = multiplex(execute(link, operation) as Observable<FetchResult<T>>);\n      }\n    } else {\n      observable = Observable.of({ data: {} } as FetchResult<T>);\n      context = this.prepareContext(context);\n    }\n\n    const { clientQuery } = this.transform(query);\n    if (clientQuery) {\n      observable = asyncMap(observable, result => {\n        return this.localState.runResolvers({\n          document: clientQuery,\n          remoteResult: result,\n          context,\n          variables,\n        });\n      });\n    }\n\n    return observable;\n  }\n\n  // Takes a request id, query id, a query document and information associated with the query\n  // and send it to the network interface. Returns\n  // a promise for the result associated with that request.\n  private fetchRequest<T>({\n    requestId,\n    queryId,\n    document,\n    options,\n    fetchMoreForQueryId,\n  }: {\n    requestId: number;\n    queryId: string;\n    document: DocumentNode;\n    options: WatchQueryOptions;\n    fetchMoreForQueryId?: string;\n  }): Promise<FetchResult<T>> {\n    const { variables, errorPolicy = 'none', fetchPolicy } = options;\n    let resultFromStore: any;\n    let errorsFromStore: any;\n\n    return new Promise<ApolloQueryResult<T>>((resolve, reject) => {\n      const observable = this.getObservableFromLink(\n        document,\n        options.context,\n        variables,\n      );\n\n      const fqrfId = `fetchRequest:${queryId}`;\n      this.fetchQueryRejectFns.set(fqrfId, reject);\n\n      const cleanup = () => {\n        this.fetchQueryRejectFns.delete(fqrfId);\n        this.setQuery(queryId, ({ subscriptions }) => {\n          subscriptions.delete(subscription);\n        });\n      };\n\n      const subscription = observable.map((result: FetchResult<T>) => {\n        if (requestId >= this.getQuery(queryId).lastRequestId) {\n          this.markQueryResult(\n            queryId,\n            result,\n            options,\n            fetchMoreForQueryId,\n          );\n\n          this.queryStore.markQueryResult(\n            queryId,\n            result,\n            fetchMoreForQueryId,\n          );\n\n          this.invalidate(queryId);\n          this.invalidate(fetchMoreForQueryId);\n\n          this.broadcastQueries();\n        }\n\n        if (errorPolicy === 'none' && isNonEmptyArray(result.errors)) {\n          return reject(new ApolloError({\n            graphQLErrors: result.errors,\n          }));\n        }\n\n        if (errorPolicy === 'all') {\n          errorsFromStore = result.errors;\n        }\n\n        if (fetchMoreForQueryId || fetchPolicy === 'no-cache') {\n          // We don't write fetchMore results to the store because this would overwrite\n          // the original result in case an @connection directive is used.\n          resultFromStore = result.data;\n        } else {\n          // ensure result is combined with data already in store\n          const { result, complete } = this.dataStore.getCache().diff<T>({\n            variables,\n            query: document,\n            optimistic: false,\n            returnPartialData: true,\n          });\n\n          if (complete || options.returnPartialData) {\n            resultFromStore = result;\n          }\n        }\n      }).subscribe({\n        error(error: ApolloError) {\n          cleanup();\n          reject(error);\n        },\n\n        complete() {\n          cleanup();\n          resolve({\n            data: resultFromStore,\n            errors: errorsFromStore,\n            loading: false,\n            networkStatus: NetworkStatus.ready,\n            stale: false,\n          });\n        },\n      });\n\n      this.setQuery(queryId, ({ subscriptions }) => {\n        subscriptions.add(subscription);\n      });\n    });\n  }\n\n  private getQuery(queryId: string) {\n    return (\n      this.queries.get(queryId) || {\n        listeners: new Set<QueryListener>(),\n        invalidated: false,\n        document: null,\n        newData: null,\n        lastRequestId: 1,\n        observableQuery: null,\n        subscriptions: new Set<Subscription>(),\n      }\n    );\n  }\n\n  private setQuery<T extends keyof QueryInfo>(\n    queryId: string,\n    updater: (prev: QueryInfo) => Pick<QueryInfo, T> | void,\n  ) {\n    const prev = this.getQuery(queryId);\n    const newInfo = { ...prev, ...updater(prev) };\n    this.queries.set(queryId, newInfo);\n  }\n\n  private invalidate(\n    queryId: string | undefined,\n    invalidated = true,\n  ) {\n    if (queryId) {\n      this.setQuery(queryId, () => ({ invalidated }));\n    }\n  }\n\n  private prepareContext(context = {}) {\n    const newContext = this.localState.prepareContext(context);\n    return {\n      ...newContext,\n      clientAwareness: this.clientAwareness,\n    };\n  }\n\n  public checkInFlight(queryId: string) {\n    const query = this.queryStore.get(queryId);\n\n    return (\n      query &&\n      query.networkStatus !== NetworkStatus.ready &&\n      query.networkStatus !== NetworkStatus.error\n    );\n  }\n\n  // Map from client ID to { interval, options }.\n  private pollingInfoByQueryId = new Map<string, {\n    interval: number;\n    timeout: NodeJS.Timeout;\n    options: WatchQueryOptions;\n  }>();\n\n  public startPollingQuery(\n    options: WatchQueryOptions,\n    queryId: string,\n    listener?: QueryListener,\n  ): string {\n    const { pollInterval } = options;\n\n    invariant(\n      pollInterval,\n      'Attempted to start a polling query without a polling interval.',\n    );\n\n    // Do not poll in SSR mode\n    if (!this.ssrMode) {\n      let info = this.pollingInfoByQueryId.get(queryId)!;\n      if (!info) {\n        this.pollingInfoByQueryId.set(queryId, (info = {} as any));\n      }\n\n      info.interval = pollInterval!;\n      info.options = {\n        ...options,\n        fetchPolicy: 'network-only',\n      };\n\n      const maybeFetch = () => {\n        const info = this.pollingInfoByQueryId.get(queryId);\n        if (info) {\n          if (this.checkInFlight(queryId)) {\n            poll();\n          } else {\n            this.fetchQuery(queryId, info.options, FetchType.poll).then(\n              poll,\n              poll,\n            );\n          }\n        }\n      };\n\n      const poll = () => {\n        const info = this.pollingInfoByQueryId.get(queryId);\n        if (info) {\n          clearTimeout(info.timeout);\n          info.timeout = setTimeout(maybeFetch, info.interval);\n        }\n      };\n\n      if (listener) {\n        this.addQueryListener(queryId, listener);\n      }\n\n      poll();\n    }\n\n    return queryId;\n  }\n\n  public stopPollingQuery(queryId: string) {\n    this.pollingInfoByQueryId.delete(queryId);\n  }\n}\n","import { ExecutionResult, DocumentNode } from 'graphql';\nimport { ApolloCache, Cache, DataProxy } from 'apollo-cache';\n\nimport { QueryStoreValue } from '../data/queries';\nimport {\n  getOperationName,\n  tryFunctionOrLogError,\n  graphQLResultHasError,\n} from 'apollo-utilities';\nimport { MutationQueryReducer } from '../core/types';\n\nexport type QueryWithUpdater = {\n  updater: MutationQueryReducer<Object>;\n  query: QueryStoreValue;\n};\n\nexport interface DataWrite {\n  rootId: string;\n  result: any;\n  document: DocumentNode;\n  operationName: string | null;\n  variables: Object;\n}\n\nexport class DataStore<TSerialized> {\n  private cache: ApolloCache<TSerialized>;\n\n  constructor(initialCache: ApolloCache<TSerialized>) {\n    this.cache = initialCache;\n  }\n\n  public getCache(): ApolloCache<TSerialized> {\n    return this.cache;\n  }\n\n  public markQueryResult(\n    result: ExecutionResult,\n    document: DocumentNode,\n    variables: any,\n    fetchMoreForQueryId: string | undefined,\n    ignoreErrors: boolean = false,\n  ) {\n    let writeWithErrors = !graphQLResultHasError(result);\n    if (ignoreErrors && graphQLResultHasError(result) && result.data) {\n      writeWithErrors = true;\n    }\n    if (!fetchMoreForQueryId && writeWithErrors) {\n      this.cache.write({\n        result: result.data,\n        dataId: 'ROOT_QUERY',\n        query: document,\n        variables: variables,\n      });\n    }\n  }\n\n  public markSubscriptionResult(\n    result: ExecutionResult,\n    document: DocumentNode,\n    variables: any,\n  ) {\n    // the subscription interface should handle not sending us results we no longer subscribe to.\n    // XXX I don't think we ever send in an object with errors, but we might in the future...\n    if (!graphQLResultHasError(result)) {\n      this.cache.write({\n        result: result.data,\n        dataId: 'ROOT_SUBSCRIPTION',\n        query: document,\n        variables: variables,\n      });\n    }\n  }\n\n  public markMutationInit(mutation: {\n    mutationId: string;\n    document: DocumentNode;\n    variables: any;\n    updateQueries: { [queryId: string]: QueryWithUpdater };\n    update: ((proxy: DataProxy, mutationResult: Object) => void) | undefined;\n    optimisticResponse: Object | Function | undefined;\n  }) {\n    if (mutation.optimisticResponse) {\n      let optimistic: Object;\n      if (typeof mutation.optimisticResponse === 'function') {\n        optimistic = mutation.optimisticResponse(mutation.variables);\n      } else {\n        optimistic = mutation.optimisticResponse;\n      }\n\n      this.cache.recordOptimisticTransaction(c => {\n        const orig = this.cache;\n        this.cache = c;\n\n        try {\n          this.markMutationResult({\n            mutationId: mutation.mutationId,\n            result: { data: optimistic },\n            document: mutation.document,\n            variables: mutation.variables,\n            updateQueries: mutation.updateQueries,\n            update: mutation.update,\n          });\n        } finally {\n          this.cache = orig;\n        }\n      }, mutation.mutationId);\n    }\n  }\n\n  public markMutationResult(mutation: {\n    mutationId: string;\n    result: ExecutionResult;\n    document: DocumentNode;\n    variables: any;\n    updateQueries: { [queryId: string]: QueryWithUpdater };\n    update: ((proxy: DataProxy, mutationResult: Object) => void) | undefined;\n  }) {\n    // Incorporate the result from this mutation into the store\n    if (!graphQLResultHasError(mutation.result)) {\n      const cacheWrites: Cache.WriteOptions[] = [{\n        result: mutation.result.data,\n        dataId: 'ROOT_MUTATION',\n        query: mutation.document,\n        variables: mutation.variables,\n      }];\n\n      const { updateQueries } = mutation;\n      if (updateQueries) {\n        Object.keys(updateQueries).forEach(id => {\n          const { query, updater } = updateQueries[id];\n\n          // Read the current query result from the store.\n          const { result: currentQueryResult, complete } = this.cache.diff({\n            query: query.document,\n            variables: query.variables,\n            returnPartialData: true,\n            optimistic: false,\n          });\n\n          if (complete) {\n            // Run our reducer using the current query result and the mutation result.\n            const nextQueryResult = tryFunctionOrLogError(() =>\n              updater(currentQueryResult, {\n                mutationResult: mutation.result,\n                queryName: getOperationName(query.document) || undefined,\n                queryVariables: query.variables,\n              }),\n            );\n\n            // Write the modified result back into the store if we got a new result.\n            if (nextQueryResult) {\n              cacheWrites.push({\n                result: nextQueryResult,\n                dataId: 'ROOT_QUERY',\n                query: query.document,\n                variables: query.variables,\n              });\n            }\n          }\n        });\n      }\n\n      this.cache.performTransaction(c => {\n        cacheWrites.forEach(write => c.write(write));\n\n        // If the mutation has some writes associated with it then we need to\n        // apply those writes to the store by running this reducer again with a\n        // write action.\n        const { update } = mutation;\n        if (update) {\n          tryFunctionOrLogError(() => update(c, mutation.result));\n        }\n      });\n    }\n  }\n\n  public markMutationComplete({\n    mutationId,\n    optimisticResponse,\n  }: {\n    mutationId: string;\n    optimisticResponse?: any;\n  }) {\n    if (optimisticResponse) {\n      this.cache.removeOptimistic(mutationId);\n    }\n  }\n\n  public markUpdateQueryResult(\n    document: DocumentNode,\n    variables: any,\n    newResult: any,\n  ) {\n    this.cache.write({\n      result: newResult,\n      dataId: 'ROOT_QUERY',\n      variables,\n      query: document,\n    });\n  }\n\n  public reset(): Promise<void> {\n    return this.cache.reset();\n  }\n}\n","import {\n  ApolloLink,\n  FetchResult,\n  GraphQLRequest,\n  execute,\n} from 'apollo-link';\nimport { ExecutionResult, DocumentNode } from 'graphql';\nimport { ApolloCache, DataProxy } from 'apollo-cache';\n\nimport { invariant, InvariantError } from 'ts-invariant';\n\nimport { QueryManager } from './core/QueryManager';\nimport {\n  ApolloQueryResult,\n  OperationVariables,\n  Resolvers,\n} from './core/types';\nimport { ObservableQuery } from './core/ObservableQuery';\nimport { LocalState, FragmentMatcher } from './core/LocalState';\nimport { Observable } from './util/Observable';\n\nimport {\n  QueryOptions,\n  WatchQueryOptions,\n  SubscriptionOptions,\n  MutationOptions,\n  WatchQueryFetchPolicy,\n} from './core/watchQueryOptions';\n\nimport { DataStore } from './data/store';\n\nimport { version } from './version';\n\nexport interface DefaultOptions {\n  watchQuery?: Partial<WatchQueryOptions>;\n  query?: Partial<QueryOptions>;\n  mutate?: Partial<MutationOptions>;\n}\n\nlet hasSuggestedDevtools = false;\n\nexport type ApolloClientOptions<TCacheShape> = {\n  link?: ApolloLink;\n  cache: ApolloCache<TCacheShape>;\n  ssrForceFetchDelay?: number;\n  ssrMode?: boolean;\n  connectToDevTools?: boolean;\n  queryDeduplication?: boolean;\n  defaultOptions?: DefaultOptions;\n  assumeImmutableResults?: boolean;\n  resolvers?: Resolvers | Resolvers[];\n  typeDefs?: string | string[] | DocumentNode | DocumentNode[];\n  fragmentMatcher?: FragmentMatcher;\n  name?: string;\n  version?: string;\n};\n\n/**\n * This is the primary Apollo Client class. It is used to send GraphQL documents (i.e. queries\n * and mutations) to a GraphQL spec-compliant server over a {@link NetworkInterface} instance,\n * receive results from the server and cache the results in a store. It also delivers updates\n * to GraphQL queries through {@link Observable} instances.\n */\nexport default class ApolloClient<TCacheShape> implements DataProxy {\n  public link: ApolloLink;\n  public store: DataStore<TCacheShape>;\n  public cache: ApolloCache<TCacheShape>;\n  public readonly queryManager: QueryManager<TCacheShape>;\n  public disableNetworkFetches: boolean;\n  public version: string;\n  public queryDeduplication: boolean;\n  public defaultOptions: DefaultOptions = {};\n  public readonly typeDefs: ApolloClientOptions<TCacheShape>['typeDefs'];\n\n  private devToolsHookCb: Function;\n  private resetStoreCallbacks: Array<() => Promise<any>> = [];\n  private clearStoreCallbacks: Array<() => Promise<any>> = [];\n  private localState: LocalState<TCacheShape>;\n\n  /**\n   * Constructs an instance of {@link ApolloClient}.\n   *\n   * @param link The {@link ApolloLink} over which GraphQL documents will be resolved into a response.\n   *\n   * @param cache The initial cache to use in the data store.\n   *\n   * @param ssrMode Determines whether this is being run in Server Side Rendering (SSR) mode.\n   *\n   * @param ssrForceFetchDelay Determines the time interval before we force fetch queries for a\n   * server side render.\n   *\n   * @param queryDeduplication If set to false, a query will still be sent to the server even if a query\n   * with identical parameters (query, variables, operationName) is already in flight.\n   *\n   * @param defaultOptions Used to set application wide defaults for the\n   *                       options supplied to `watchQuery`, `query`, or\n   *                       `mutate`.\n   *\n   * @param assumeImmutableResults When this option is true, the client will assume results\n   *                               read from the cache are never mutated by application code,\n   *                               which enables substantial performance optimizations. Passing\n   *                               `{ freezeResults: true }` to the `InMemoryCache` constructor\n   *                               can help enforce this immutability.\n   *\n   * @param name A custom name that can be used to identify this client, when\n   *             using Apollo client awareness features. E.g. \"iOS\".\n   *\n   * @param version A custom version that can be used to identify this client,\n   *                when using Apollo client awareness features. This is the\n   *                version of your client, which you may want to increment on\n   *                new builds. This is NOT the version of Apollo Client that\n   *                you are using.\n   */\n  constructor(options: ApolloClientOptions<TCacheShape>) {\n    const {\n      cache,\n      ssrMode = false,\n      ssrForceFetchDelay = 0,\n      connectToDevTools,\n      queryDeduplication = true,\n      defaultOptions,\n      assumeImmutableResults = false,\n      resolvers,\n      typeDefs,\n      fragmentMatcher,\n      name: clientAwarenessName,\n      version: clientAwarenessVersion,\n    } = options;\n\n    let { link } = options;\n\n    // If a link hasn't been defined, but local state resolvers have been set,\n    // setup a default empty link.\n    if (!link && resolvers) {\n      link = ApolloLink.empty();\n    }\n\n    if (!link || !cache) {\n      throw new InvariantError(\n        \"In order to initialize Apollo Client, you must specify 'link' and 'cache' properties in the options object.\\n\" +\n        \"These options are part of the upgrade requirements when migrating from Apollo Client 1.x to Apollo Client 2.x.\\n\" +\n        \"For more information, please visit: https://www.apollographql.com/docs/tutorial/client.html#apollo-client-setup\"\n      );\n    }\n\n    // remove apollo-client supported directives\n    this.link = link;\n    this.cache = cache;\n    this.store = new DataStore(cache);\n    this.disableNetworkFetches = ssrMode || ssrForceFetchDelay > 0;\n    this.queryDeduplication = queryDeduplication;\n    this.defaultOptions = defaultOptions || {};\n    this.typeDefs = typeDefs;\n\n    if (ssrForceFetchDelay) {\n      setTimeout(\n        () => (this.disableNetworkFetches = false),\n        ssrForceFetchDelay,\n      );\n    }\n\n    this.watchQuery = this.watchQuery.bind(this);\n    this.query = this.query.bind(this);\n    this.mutate = this.mutate.bind(this);\n    this.resetStore = this.resetStore.bind(this);\n    this.reFetchObservableQueries = this.reFetchObservableQueries.bind(this);\n\n    // Attach the client instance to window to let us be found by chrome devtools, but only in\n    // development mode\n    const defaultConnectToDevTools =\n      process.env.NODE_ENV !== 'production' &&\n      typeof window !== 'undefined' &&\n      !(window as any).__APOLLO_CLIENT__;\n\n    if (\n      typeof connectToDevTools === 'undefined'\n        ? defaultConnectToDevTools\n        : connectToDevTools && typeof window !== 'undefined'\n    ) {\n      (window as any).__APOLLO_CLIENT__ = this;\n    }\n\n    /**\n     * Suggest installing the devtools for developers who don't have them\n     */\n    if (!hasSuggestedDevtools && process.env.NODE_ENV !== 'production') {\n      hasSuggestedDevtools = true;\n      if (\n        typeof window !== 'undefined' &&\n        window.document &&\n        window.top === window.self\n      ) {\n        // First check if devtools is not installed\n        if (\n          typeof (window as any).__APOLLO_DEVTOOLS_GLOBAL_HOOK__ === 'undefined'\n        ) {\n          // Only for Chrome\n          if (\n            window.navigator &&\n            window.navigator.userAgent &&\n            window.navigator.userAgent.indexOf('Chrome') > -1\n          ) {\n            // tslint:disable-next-line\n            console.debug(\n              'Download the Apollo DevTools ' +\n                'for a better development experience: ' +\n                'https://chrome.google.com/webstore/detail/apollo-client-developer-t/jdkknkkbebbapilgoeccciglkfbmbnfm',\n            );\n          }\n        }\n      }\n    }\n\n    this.version = version;\n\n    this.localState = new LocalState({\n      cache,\n      client: this,\n      resolvers,\n      fragmentMatcher,\n    });\n\n    this.queryManager = new QueryManager({\n      link: this.link,\n      store: this.store,\n      queryDeduplication,\n      ssrMode,\n      clientAwareness: {\n        name: clientAwarenessName!,\n        version: clientAwarenessVersion!,\n      },\n      localState: this.localState,\n      assumeImmutableResults,\n      onBroadcast: () => {\n        if (this.devToolsHookCb) {\n          this.devToolsHookCb({\n            action: {},\n            state: {\n              queries: this.queryManager.queryStore.getStore(),\n              mutations: this.queryManager.mutationStore.getStore(),\n            },\n            dataWithOptimisticResults: this.cache.extract(true),\n          });\n        }\n      },\n    });\n  }\n\n  /**\n   * Call this method to terminate any active client processes, making it safe\n   * to dispose of this `ApolloClient` instance.\n   */\n  public stop() {\n    this.queryManager.stop();\n  }\n\n  /**\n   * This watches the cache store of the query according to the options specified and\n   * returns an {@link ObservableQuery}. We can subscribe to this {@link ObservableQuery} and\n   * receive updated results through a GraphQL observer when the cache store changes.\n   * <p /><p />\n   * Note that this method is not an implementation of GraphQL subscriptions. Rather,\n   * it uses Apollo's store in order to reactively deliver updates to your query results.\n   * <p /><p />\n   * For example, suppose you call watchQuery on a GraphQL query that fetches a person's\n   * first and last name and this person has a particular object identifer, provided by\n   * dataIdFromObject. Later, a different query fetches that same person's\n   * first and last name and the first name has now changed. Then, any observers associated\n   * with the results of the first query will be updated with a new result object.\n   * <p /><p />\n   * Note that if the cache does not change, the subscriber will *not* be notified.\n   * <p /><p />\n   * See [here](https://medium.com/apollo-stack/the-concepts-of-graphql-bc68bd819be3#.3mb0cbcmc) for\n   * a description of store reactivity.\n   */\n  public watchQuery<T = any, TVariables = OperationVariables>(\n    options: WatchQueryOptions<TVariables>,\n  ): ObservableQuery<T, TVariables> {\n    if (this.defaultOptions.watchQuery) {\n      options = {\n        ...this.defaultOptions.watchQuery,\n        ...options,\n      } as WatchQueryOptions<TVariables>;\n    }\n\n    // XXX Overwriting options is probably not the best way to do this long term...\n    if (\n      this.disableNetworkFetches &&\n      (options.fetchPolicy === 'network-only' ||\n        options.fetchPolicy === 'cache-and-network')\n    ) {\n      options = { ...options, fetchPolicy: 'cache-first' };\n    }\n\n    return this.queryManager.watchQuery<T, TVariables>(options);\n  }\n\n  /**\n   * This resolves a single query according to the options specified and\n   * returns a {@link Promise} which is either resolved with the resulting data\n   * or rejected with an error.\n   *\n   * @param options An object of type {@link QueryOptions} that allows us to\n   * describe how this query should be treated e.g. whether it should hit the\n   * server at all or just resolve from the cache, etc.\n   */\n  public query<T = any, TVariables = OperationVariables>(\n    options: QueryOptions<TVariables>,\n  ): Promise<ApolloQueryResult<T>> {\n    if (this.defaultOptions.query) {\n      options = { ...this.defaultOptions.query, ...options } as QueryOptions<\n        TVariables\n      >;\n    }\n\n    invariant(\n      (options.fetchPolicy as WatchQueryFetchPolicy) !== 'cache-and-network',\n      'The cache-and-network fetchPolicy does not work with client.query, because ' +\n      'client.query can only return a single result. Please use client.watchQuery ' +\n      'to receive multiple results from the cache and the network, or consider ' +\n      'using a different fetchPolicy, such as cache-first or network-only.'\n    );\n\n    if (this.disableNetworkFetches && options.fetchPolicy === 'network-only') {\n      options = { ...options, fetchPolicy: 'cache-first' };\n    }\n\n    return this.queryManager.query<T>(options);\n  }\n\n  /**\n   * This resolves a single mutation according to the options specified and returns a\n   * {@link Promise} which is either resolved with the resulting data or rejected with an\n   * error.\n   *\n   * It takes options as an object with the following keys and values:\n   */\n  public mutate<T = any, TVariables = OperationVariables>(\n    options: MutationOptions<T, TVariables>,\n  ): Promise<FetchResult<T>> {\n    if (this.defaultOptions.mutate) {\n      options = {\n        ...this.defaultOptions.mutate,\n        ...options,\n      } as MutationOptions<T, TVariables>;\n    }\n\n    return this.queryManager.mutate<T>(options);\n  }\n\n  /**\n   * This subscribes to a graphql subscription according to the options specified and returns an\n   * {@link Observable} which either emits received data or an error.\n   */\n  public subscribe<T = any, TVariables = OperationVariables>(\n    options: SubscriptionOptions<TVariables>,\n  ): Observable<FetchResult<T>> {\n    return this.queryManager.startGraphQLSubscription<T>(options);\n  }\n\n  /**\n   * Tries to read some data from the store in the shape of the provided\n   * GraphQL query without making a network request. This method will start at\n   * the root query. To start at a specific id returned by `dataIdFromObject`\n   * use `readFragment`.\n   *\n   * @param optimistic Set to `true` to allow `readQuery` to return\n   * optimistic results. Is `false` by default.\n   */\n  public readQuery<T = any, TVariables = OperationVariables>(\n    options: DataProxy.Query<TVariables>,\n    optimistic: boolean = false,\n  ): T | null {\n    return this.cache.readQuery<T, TVariables>(options, optimistic);\n  }\n\n  /**\n   * Tries to read some data from the store in the shape of the provided\n   * GraphQL fragment without making a network request. This method will read a\n   * GraphQL fragment from any arbitrary id that is currently cached, unlike\n   * `readQuery` which will only read from the root query.\n   *\n   * You must pass in a GraphQL document with a single fragment or a document\n   * with multiple fragments that represent what you are reading. If you pass\n   * in a document with multiple fragments then you must also specify a\n   * `fragmentName`.\n   *\n   * @param optimistic Set to `true` to allow `readFragment` to return\n   * optimistic results. Is `false` by default.\n   */\n  public readFragment<T = any, TVariables = OperationVariables>(\n    options: DataProxy.Fragment<TVariables>,\n    optimistic: boolean = false,\n  ): T | null {\n    return this.cache.readFragment<T, TVariables>(options, optimistic);\n  }\n\n  /**\n   * Writes some data in the shape of the provided GraphQL query directly to\n   * the store. This method will start at the root query. To start at a\n   * specific id returned by `dataIdFromObject` then use `writeFragment`.\n   */\n  public writeQuery<TData = any, TVariables = OperationVariables>(\n    options: DataProxy.WriteQueryOptions<TData, TVariables>,\n  ): void {\n    const result = this.cache.writeQuery<TData, TVariables>(options);\n    this.queryManager.broadcastQueries();\n    return result;\n  }\n\n  /**\n   * Writes some data in the shape of the provided GraphQL fragment directly to\n   * the store. This method will write to a GraphQL fragment from any arbitrary\n   * id that is currently cached, unlike `writeQuery` which will only write\n   * from the root query.\n   *\n   * You must pass in a GraphQL document with a single fragment or a document\n   * with multiple fragments that represent what you are writing. If you pass\n   * in a document with multiple fragments then you must also specify a\n   * `fragmentName`.\n   */\n  public writeFragment<TData = any, TVariables = OperationVariables>(\n    options: DataProxy.WriteFragmentOptions<TData, TVariables>,\n  ): void {\n    const result = this.cache.writeFragment<TData, TVariables>(options);\n    this.queryManager.broadcastQueries();\n    return result;\n  }\n\n  /**\n   * Sugar for writeQuery & writeFragment\n   * This method will construct a query from the data object passed in.\n   * If no id is supplied, writeData will write the data to the root.\n   * If an id is supplied, writeData will write a fragment to the object\n   * specified by the id in the store.\n   *\n   * Since you aren't passing in a query to check the shape of the data,\n   * you must pass in an object that conforms to the shape of valid GraphQL data.\n   */\n  public writeData<TData = any>(\n    options: DataProxy.WriteDataOptions<TData>,\n  ): void {\n    const result = this.cache.writeData<TData>(options);\n    this.queryManager.broadcastQueries();\n    return result;\n  }\n\n  public __actionHookForDevTools(cb: () => any) {\n    this.devToolsHookCb = cb;\n  }\n\n  public __requestRaw(payload: GraphQLRequest): Observable<ExecutionResult> {\n    return execute(this.link, payload);\n  }\n\n  /**\n   * This initializes the query manager that tracks queries and the cache\n   */\n  public initQueryManager(): QueryManager<TCacheShape> {\n    invariant.warn(\n      'Calling the initQueryManager method is no longer necessary, ' +\n        'and it will be removed from ApolloClient in version 3.0.',\n    );\n    return this.queryManager;\n  }\n\n  /**\n   * Resets your entire store by clearing out your cache and then re-executing\n   * all of your active queries. This makes it so that you may guarantee that\n   * there is no data left in your store from a time before you called this\n   * method.\n   *\n   * `resetStore()` is useful when your user just logged out. You’ve removed the\n   * user session, and you now want to make sure that any references to data you\n   * might have fetched while the user session was active is gone.\n   *\n   * It is important to remember that `resetStore()` *will* refetch any active\n   * queries. This means that any components that might be mounted will execute\n   * their queries again using your network interface. If you do not want to\n   * re-execute any queries then you should make sure to stop watching any\n   * active queries.\n   */\n  public resetStore(): Promise<ApolloQueryResult<any>[] | null> {\n    return Promise.resolve()\n      .then(() => this.queryManager.clearStore())\n      .then(() => Promise.all(this.resetStoreCallbacks.map(fn => fn())))\n      .then(() => this.reFetchObservableQueries());\n  }\n\n  /**\n   * Remove all data from the store. Unlike `resetStore`, `clearStore` will\n   * not refetch any active queries.\n   */\n  public clearStore(): Promise<any[]> {\n    return Promise.resolve()\n      .then(() => this.queryManager.clearStore())\n      .then(() => Promise.all(this.clearStoreCallbacks.map(fn => fn())));\n  }\n\n  /**\n   * Allows callbacks to be registered that are executed when the store is\n   * reset. `onResetStore` returns an unsubscribe function that can be used\n   * to remove registered callbacks.\n   */\n  public onResetStore(cb: () => Promise<any>): () => void {\n    this.resetStoreCallbacks.push(cb);\n    return () => {\n      this.resetStoreCallbacks = this.resetStoreCallbacks.filter(c => c !== cb);\n    };\n  }\n\n  /**\n   * Allows callbacks to be registered that are executed when the store is\n   * cleared. `onClearStore` returns an unsubscribe function that can be used\n   * to remove registered callbacks.\n   */\n  public onClearStore(cb: () => Promise<any>): () => void {\n    this.clearStoreCallbacks.push(cb);\n    return () => {\n      this.clearStoreCallbacks = this.clearStoreCallbacks.filter(c => c !== cb);\n    };\n  }\n\n  /**\n   * Refetches all of your active queries.\n   *\n   * `reFetchObservableQueries()` is useful if you want to bring the client back to proper state in case of a network outage\n   *\n   * It is important to remember that `reFetchObservableQueries()` *will* refetch any active\n   * queries. This means that any components that might be mounted will execute\n   * their queries again using your network interface. If you do not want to\n   * re-execute any queries then you should make sure to stop watching any\n   * active queries.\n   * Takes optional parameter `includeStandby` which will include queries in standby-mode when refetching.\n   */\n  public reFetchObservableQueries(\n    includeStandby?: boolean,\n  ): Promise<ApolloQueryResult<any>[]> {\n    return this.queryManager.reFetchObservableQueries(includeStandby);\n  }\n\n  /**\n   * Exposes the cache's complete state, in a serializable format for later restoration.\n   */\n  public extract(optimistic?: boolean): TCacheShape {\n    return this.cache.extract(optimistic);\n  }\n\n  /**\n   * Replaces existing state in the cache (if any) with the values expressed by\n   * `serializedState`.\n   *\n   * Called when hydrating a cache (server side rendering, or offline storage),\n   * and also (potentially) during hot reloads.\n   */\n  public restore(serializedState: TCacheShape): ApolloCache<TCacheShape> {\n    return this.cache.restore(serializedState);\n  }\n\n  /**\n   * Add additional local resolvers.\n   */\n  public addResolvers(resolvers: Resolvers | Resolvers[]) {\n    this.localState.addResolvers(resolvers);\n  }\n\n  /**\n   * Set (override existing) local resolvers.\n   */\n  public setResolvers(resolvers: Resolvers | Resolvers[]) {\n    this.localState.setResolvers(resolvers);\n  }\n\n  /**\n   * Get all registered local resolvers.\n   */\n  public getResolvers() {\n    return this.localState.getResolvers();\n  }\n\n  /**\n   * Set a custom local state fragment matcher.\n   */\n  public setLocalStateFragmentMatcher(fragmentMatcher: FragmentMatcher) {\n    this.localState.setFragmentMatcher(fragmentMatcher);\n  }\n}\n","export const version = \"2.6.10\"","/* global window */\nimport ponyfill from './ponyfill.js';\n\nvar root;\n\nif (typeof self !== 'undefined') {\n  root = self;\n} else if (typeof window !== 'undefined') {\n  root = window;\n} else if (typeof global !== 'undefined') {\n  root = global;\n} else if (typeof module !== 'undefined') {\n  root = module;\n} else {\n  root = Function('return this')();\n}\n\nvar result = ponyfill(root);\nexport default result;\n","const { toString, hasOwnProperty } = Object.prototype;\nconst previousComparisons = new Map<object, Set<object>>();\n\n/**\n * Performs a deep equality check on two JavaScript values, tolerating cycles.\n */\nexport function equal(a: any, b: any): boolean {\n  try {\n    return check(a, b);\n  } finally {\n    previousComparisons.clear();\n  }\n}\n\n// Allow default imports as well.\nexport default equal;\n\nfunction check(a: any, b: any): boolean {\n  // If the two values are strictly equal, our job is easy.\n  if (a === b) {\n    return true;\n  }\n\n  // Object.prototype.toString returns a representation of the runtime type of\n  // the given value that is considerably more precise than typeof.\n  const aTag = toString.call(a);\n  const bTag = toString.call(b);\n\n  // If the runtime types of a and b are different, they could maybe be equal\n  // under some interpretation of equality, but for simplicity and performance\n  // we just return false instead.\n  if (aTag !== bTag) {\n    return false;\n  }\n\n  switch (aTag) {\n    case '[object Array]':\n      // Arrays are a lot like other objects, but we can cheaply compare their\n      // lengths as a short-cut before comparing their elements.\n      if (a.length !== b.length) return false;\n      // Fall through to object case...\n    case '[object Object]': {\n      if (previouslyCompared(a, b)) return true;\n\n      const aKeys = Object.keys(a);\n      const bKeys = Object.keys(b);\n\n      // If `a` and `b` have a different number of enumerable keys, they\n      // must be different.\n      const keyCount = aKeys.length;\n      if (keyCount !== bKeys.length) return false;\n\n      // Now make sure they have the same keys.\n      for (let k = 0; k < keyCount; ++k) {\n        if (!hasOwnProperty.call(b, aKeys[k])) {\n          return false;\n        }\n      }\n\n      // Finally, check deep equality of all child properties.\n      for (let k = 0; k < keyCount; ++k) {\n        const key = aKeys[k];\n        if (!check(a[key], b[key])) {\n          return false;\n        }\n      }\n\n      return true;\n    }\n\n    case '[object Error]':\n      return a.name === b.name && a.message === b.message;\n\n    case '[object Number]':\n      // Handle NaN, which is !== itself.\n      if (a !== a) return b !== b;\n      // Fall through to shared +a === +b case...\n    case '[object Boolean]':\n    case '[object Date]':\n      return +a === +b;\n\n    case '[object RegExp]':\n    case '[object String]':\n      return a == `${b}`;\n\n    case '[object Map]':\n    case '[object Set]': {\n      if (a.size !== b.size) return false;\n      if (previouslyCompared(a, b)) return true;\n\n      const aIterator = a.entries();\n      const isMap = aTag === '[object Map]';\n\n      while (true) {\n        const info = aIterator.next();\n        if (info.done) break;\n\n        // If a instanceof Set, aValue === aKey.\n        const [aKey, aValue] = info.value;\n\n        // So this works the same way for both Set and Map.\n        if (!b.has(aKey)) {\n          return false;\n        }\n\n        // However, we care about deep equality of values only when dealing\n        // with Map structures.\n        if (isMap && !check(aValue, b.get(aKey))) {\n          return false;\n        }\n      }\n\n      return true;\n    }\n  }\n\n  // Otherwise the values are not equal.\n  return false;\n}\n\nfunction previouslyCompared(a: object, b: object): boolean {\n  // Though cyclic references can make an object graph appear infinite from the\n  // perspective of a depth-first traversal, the graph still contains a finite\n  // number of distinct object references. We use the previousComparisons cache\n  // to avoid comparing the same pair of object references more than once, which\n  // guarantees termination (even if we end up comparing every object in one\n  // graph to every object in the other graph, which is extremely unlikely),\n  // while still allowing weird isomorphic structures (like rings with different\n  // lengths) a chance to pass the equality test.\n  let bSet = previousComparisons.get(a);\n  if (bSet) {\n    // Return true here because we can be sure false will be returned somewhere\n    // else if the objects are not equivalent.\n    if (bSet.has(b)) return true;\n  } else {\n    previousComparisons.set(a, bSet = new Set);\n  }\n  bSet.add(b);\n  return false;\n}\n","import {\n  DocumentNode,\n  OperationDefinitionNode,\n  SelectionSetNode,\n  FieldNode,\n  FragmentDefinitionNode,\n} from 'graphql';\n\nexport function queryFromPojo(obj: any): DocumentNode {\n  const op: OperationDefinitionNode = {\n    kind: 'OperationDefinition',\n    operation: 'query',\n    name: {\n      kind: 'Name',\n      value: 'GeneratedClientQuery',\n    },\n    selectionSet: selectionSetFromObj(obj),\n  };\n\n  const out: DocumentNode = {\n    kind: 'Document',\n    definitions: [op],\n  };\n\n  return out;\n}\n\nexport function fragmentFromPojo(obj: any, typename?: string): DocumentNode {\n  const frag: FragmentDefinitionNode = {\n    kind: 'FragmentDefinition',\n    typeCondition: {\n      kind: 'NamedType',\n      name: {\n        kind: 'Name',\n        value: typename || '__FakeType',\n      },\n    },\n    name: {\n      kind: 'Name',\n      value: 'GeneratedClientQuery',\n    },\n    selectionSet: selectionSetFromObj(obj),\n  };\n\n  const out: DocumentNode = {\n    kind: 'Document',\n    definitions: [frag],\n  };\n\n  return out;\n}\n\nfunction selectionSetFromObj(obj: any): SelectionSetNode {\n  if (\n    typeof obj === 'number' ||\n    typeof obj === 'boolean' ||\n    typeof obj === 'string' ||\n    typeof obj === 'undefined' ||\n    obj === null\n  ) {\n    // No selection set here\n    return null;\n  }\n\n  if (Array.isArray(obj)) {\n    // GraphQL queries don't include arrays\n    return selectionSetFromObj(obj[0]);\n  }\n\n  // Now we know it's an object\n  const selections: FieldNode[] = [];\n\n  Object.keys(obj).forEach(key => {\n    const nestedSelSet: SelectionSetNode = selectionSetFromObj(obj[key]);\n\n    const field: FieldNode = {\n      kind: 'Field',\n      name: {\n        kind: 'Name',\n        value: key,\n      },\n      selectionSet: nestedSelSet || undefined,\n    };\n\n    selections.push(field);\n  });\n\n  const selectionSet: SelectionSetNode = {\n    kind: 'SelectionSet',\n    selections,\n  };\n\n  return selectionSet;\n}\n\nexport const justTypenameQuery: DocumentNode = {\n  kind: 'Document',\n  definitions: [\n    {\n      kind: 'OperationDefinition',\n      operation: 'query',\n      name: null,\n      variableDefinitions: null,\n      directives: [],\n      selectionSet: {\n        kind: 'SelectionSet',\n        selections: [\n          {\n            kind: 'Field',\n            alias: null,\n            name: {\n              kind: 'Name',\n              value: '__typename',\n            },\n            arguments: [],\n            directives: [],\n            selectionSet: null,\n          },\n        ],\n      },\n    },\n  ],\n};\n","import { DataProxy } from './DataProxy';\n\nexport namespace Cache {\n  export type WatchCallback = (newData: any) => void;\n  export interface EvictionResult {\n    success: Boolean;\n  }\n\n  export interface ReadOptions<TVariables = any>\n    extends DataProxy.Query<TVariables> {\n    rootId?: string;\n    previousResult?: any;\n    optimistic: boolean;\n  }\n\n  export interface WriteOptions<TResult = any, TVariables = any>\n    extends DataProxy.Query<TVariables> {\n    dataId: string;\n    result: TResult;\n  }\n\n  export interface DiffOptions extends ReadOptions {\n    returnPartialData?: boolean;\n  }\n\n  export interface WatchOptions extends ReadOptions {\n    callback: WatchCallback;\n  }\n\n  export interface EvictOptions<TVariables = any>\n    extends DataProxy.Query<TVariables> {\n    rootId?: string;\n  }\n\n  export import DiffResult = DataProxy.DiffResult;\n  export import WriteQueryOptions = DataProxy.WriteQueryOptions;\n  export import WriteFragmentOptions = DataProxy.WriteFragmentOptions;\n  export import WriteDataOptions = DataProxy.WriteDataOptions;\n  export import Fragment = DataProxy.Fragment;\n}\n","interface Node<K, V> {\n  key: K;\n  value: V;\n  newer: Node<K, V> | null;\n  older: Node<K, V> | null;\n}\n\nfunction defaultDispose() {}\n\nexport class Cache<K = any, V = any> {\n  private map = new Map<K, Node<K, V>>();\n  private newest: Node<K, V> | null = null;\n  private oldest: Node<K, V> | null = null;\n\n  constructor(\n    private max = Infinity,\n    public dispose: (value: V, key: K) => void = defaultDispose,\n  ) {}\n\n  public has(key: K) {\n    return this.map.has(key);\n  }\n\n  public get(key: K) {\n    const entry = this.getEntry(key);\n    return entry && entry.value;\n  }\n\n  private getEntry(key: K): Node<K, V> | void {\n    const entry = this.map.get(key);\n\n    if (entry && entry !== this.newest) {\n      const { older, newer } = entry;\n\n      if (newer) {\n        newer.older = older;\n      }\n\n      if (older) {\n        older.newer = newer;\n      }\n\n      entry.older = this.newest;\n      entry.older!.newer = entry;\n\n      entry.newer = null;\n      this.newest = entry;\n\n      if (entry === this.oldest) {\n        this.oldest = newer;\n      }\n    }\n\n    return entry;\n  }\n\n  public set(key: K, value: V) {\n    let entry = this.getEntry(key);\n    if (entry) {\n      return entry.value = value;\n    }\n\n    entry = {\n      key: key,\n      value: value,\n      newer: null,\n      older: this.newest\n    };\n\n    if (this.newest) {\n      this.newest.newer = entry;\n    }\n\n    this.newest = entry;\n    this.oldest = this.oldest || entry;\n\n    this.map.set(key, entry);\n\n    return entry.value;\n  }\n\n  public clean() {\n    while (this.oldest && this.map.size > this.max) {\n      this.delete(this.oldest.key);\n    }\n  }\n\n  public delete(key: K) {\n    const entry = this.map.get(key);\n    if (entry) {\n      if (entry === this.newest) {\n        this.newest = entry.older;\n      }\n\n      if (entry === this.oldest) {\n        this.oldest = entry.newer;\n      }\n\n      if (entry.newer) {\n        entry.newer.older = entry.older;\n      }\n\n      if (entry.older) {\n        entry.older.newer = entry.newer;\n      }\n\n      this.map.delete(key);\n      this.dispose(entry.value, key);\n\n      return true;\n    }\n\n    return false;\n  }\n}\n","type Context = {\n  parent: Context | null;\n  slots: { [slotId: string]: any };\n}\n\n// This currentContext variable will only be used if the makeSlotClass\n// function is called, which happens only if this is the first copy of the\n// @wry/context package to be imported.\nlet currentContext: Context | null = null;\n\n// This unique internal object is used to denote the absence of a value\n// for a given Slot, and is never exposed to outside code.\nconst MISSING_VALUE: any = {};\n\nlet idCounter = 1;\n\n// Although we can't do anything about the cost of duplicated code from\n// accidentally bundling multiple copies of the @wry/context package, we can\n// avoid creating the Slot class more than once using makeSlotClass.\nconst makeSlotClass = () => class Slot<TValue> {\n  // If you have a Slot object, you can find out its slot.id, but you cannot\n  // guess the slot.id of a Slot you don't have access to, thanks to the\n  // randomized suffix.\n  public readonly id = [\n    \"slot\",\n    idCounter++,\n    Date.now(),\n    Math.random().toString(36).slice(2),\n  ].join(\":\");\n\n  public hasValue() {\n    for (let context = currentContext; context; context = context.parent) {\n      // We use the Slot object iself as a key to its value, which means the\n      // value cannot be obtained without a reference to the Slot object.\n      if (this.id in context.slots) {\n        const value = context.slots[this.id];\n        if (value === MISSING_VALUE) break;\n        if (context !== currentContext) {\n          // Cache the value in currentContext.slots so the next lookup will\n          // be faster. This caching is safe because the tree of contexts and\n          // the values of the slots are logically immutable.\n          currentContext!.slots[this.id] = value;\n        }\n        return true;\n      }\n    }\n    if (currentContext) {\n      // If a value was not found for this Slot, it's never going to be found\n      // no matter how many times we look it up, so we might as well cache\n      // the absence of the value, too.\n      currentContext.slots[this.id] = MISSING_VALUE;\n    }\n    return false;\n  }\n\n  public getValue(): TValue | undefined {\n    if (this.hasValue()) {\n      return currentContext!.slots[this.id] as TValue;\n    }\n  }\n\n  public withValue<TResult, TArgs extends any[], TThis = any>(\n    value: TValue,\n    callback: (this: TThis, ...args: TArgs) => TResult,\n    // Given the prevalence of arrow functions, specifying arguments is likely\n    // to be much more common than specifying `this`, hence this ordering:\n    args?: TArgs,\n    thisArg?: TThis,\n  ): TResult {\n    const slots = {\n      __proto__: null,\n      [this.id]: value,\n    };\n    const parent = currentContext;\n    currentContext = { parent, slots };\n    try {\n      // Function.prototype.apply allows the arguments array argument to be\n      // omitted or undefined, so args! is fine here.\n      return callback.apply(thisArg!, args!);\n    } finally {\n      currentContext = parent;\n    }\n  }\n\n  // Capture the current context and wrap a callback function so that it\n  // reestablishes the captured context when called.\n  static bind<TArgs extends any[], TResult>(\n    callback: (...args: TArgs) => TResult,\n  ) {\n    const context = currentContext;\n    return function (this: any) {\n      const saved = currentContext;\n      try {\n        currentContext = context;\n        return callback.apply(this, arguments as any);\n      } finally {\n        currentContext = saved;\n      }\n    } as typeof callback;\n  }\n\n  // Immediately run a callback function without any captured context.\n  static noContext<TResult, TArgs extends any[], TThis = any>(\n    callback: (this: TThis, ...args: TArgs) => TResult,\n    // Given the prevalence of arrow functions, specifying arguments is likely\n    // to be much more common than specifying `this`, hence this ordering:\n    args?: TArgs,\n    thisArg?: TThis,\n  ) {\n    if (currentContext) {\n      const saved = currentContext;\n      try {\n        currentContext = null;\n        // Function.prototype.apply allows the arguments array argument to be\n        // omitted or undefined, so args! is fine here.\n        return callback.apply(thisArg!, args!);\n      } finally {\n        currentContext = saved;\n      }\n    } else {\n      return callback.apply(thisArg!, args!);\n    }\n  }\n};\n\n// We store a single global implementation of the Slot class as a permanent\n// non-enumerable symbol property of the Array constructor. This obfuscation\n// does nothing to prevent access to the Slot class, but at least it ensures\n// the implementation (i.e. currentContext) cannot be tampered with, and all\n// copies of the @wry/context package (hopefully just one) will share the\n// same Slot implementation. Since the first copy of the @wry/context package\n// to be imported wins, this technique imposes a very high cost for any\n// future breaking changes to the Slot class.\nconst globalKey = \"@wry/context:Slot\";\nconst host = Array as any;\n\nexport const Slot: ReturnType<typeof makeSlotClass> = host[globalKey] || function () {\n  const Slot = makeSlotClass();\n  try {\n    Object.defineProperty(host, globalKey, {\n      value: host[globalKey] = Slot,\n      enumerable: false,\n      writable: false,\n      configurable: false,\n    });\n  } finally {\n    return Slot;\n  }\n}();\n","import { AnyEntry } from \"./entry\";\nimport { Slot } from \"@wry/context\";\n\nexport const parentEntrySlot = new Slot<AnyEntry>();\n\nexport {\n  bind as bindContext,\n  noContext,\n  setTimeout,\n  asyncFromGen,\n} from \"@wry/context\";\n","import { parentEntrySlot } from \"./context\";\nimport { OptimisticWrapOptions } from \"./index\";\n\nconst reusableEmptyArray: AnyEntry[] = [];\nconst emptySetPool: Set<AnyEntry>[] = [];\nconst POOL_TARGET_SIZE = 100;\n\n// Since this package might be used browsers, we should avoid using the\n// Node built-in assert module.\nfunction assert(condition: any, optionalMessage?: string) {\n  if (! condition) {\n    throw new Error(optionalMessage || \"assertion failure\");\n  }\n}\n\n// Since exceptions are cached just like normal values, we need an efficient\n// way of representing unknown, ordinary, and exceptional values.\ntype Value<T> =\n  | []           // unknown\n  | [T]          // known value\n  | [void, any]; // known exception\n\nfunction valueIs(a: Value<any>, b: Value<any>) {\n  const len = a.length;\n  return (\n    // Unknown values are not equal to each other.\n    len > 0 &&\n    // Both values must be ordinary (or both exceptional) to be equal.\n    len === b.length &&\n    // The underlying value or exception must be the same.\n    a[len - 1] === b[len - 1]\n  );\n}\n\nfunction valueGet<T>(value: Value<T>): T {\n  switch (value.length) {\n    case 0: throw new Error(\"unknown value\");\n    case 1: return value[0];\n    case 2: throw value[1];\n  }\n}\n\nfunction valueCopy<T>(value: Value<T>): Value<T> {\n  return value.slice(0) as Value<T>;\n}\n\nexport type AnyEntry = Entry<any, any>;\n\nexport class Entry<TArgs extends any[], TValue> {\n  public static count = 0;\n\n  public subscribe: OptimisticWrapOptions<TArgs>[\"subscribe\"];\n  public unsubscribe?: () => any;\n  public reportOrphan?: (this: Entry<TArgs, TValue>) => any;\n\n  public readonly parents = new Set<AnyEntry>();\n  public readonly childValues = new Map<AnyEntry, Value<any>>();\n\n  // When this Entry has children that are dirty, this property becomes\n  // a Set containing other Entry objects, borrowed from emptySetPool.\n  // When the set becomes empty, it gets recycled back to emptySetPool.\n  public dirtyChildren: Set<AnyEntry> | null = null;\n\n  public dirty = true;\n  public recomputing = false;\n  public readonly value: Value<TValue> = [];\n\n  constructor(\n    public readonly fn: (...args: TArgs) => TValue,\n    public args: TArgs,\n  ) {\n    ++Entry.count;\n  }\n\n  // This is the most important method of the Entry API, because it\n  // determines whether the cached this.value can be returned immediately,\n  // or must be recomputed. The overall performance of the caching system\n  // depends on the truth of the following observations: (1) this.dirty is\n  // usually false, (2) this.dirtyChildren is usually null/empty, and thus\n  // (3) valueGet(this.value) is usually returned without recomputation.\n  public recompute(): TValue {\n    assert(! this.recomputing, \"already recomputing\");\n\n    if (! rememberParent(this) && maybeReportOrphan(this)) {\n      // The recipient of the entry.reportOrphan callback decided to dispose\n      // of this orphan entry by calling entry.dispose(), so we don't need to\n      // (and should not) proceed with the recomputation.\n      return void 0 as any;\n    }\n\n    return mightBeDirty(this)\n      ? reallyRecompute(this)\n      : valueGet(this.value);\n  }\n\n  public setDirty() {\n    if (this.dirty) return;\n    this.dirty = true;\n    this.value.length = 0;\n    reportDirty(this);\n    // We can go ahead and unsubscribe here, since any further dirty\n    // notifications we receive will be redundant, and unsubscribing may\n    // free up some resources, e.g. file watchers.\n    maybeUnsubscribe(this);\n  }\n\n  public dispose() {\n    forgetChildren(this).forEach(maybeReportOrphan);\n    maybeUnsubscribe(this);\n\n    // Because this entry has been kicked out of the cache (in index.js),\n    // we've lost the ability to find out if/when this entry becomes dirty,\n    // whether that happens through a subscription, because of a direct call\n    // to entry.setDirty(), or because one of its children becomes dirty.\n    // Because of this loss of future information, we have to assume the\n    // worst (that this entry might have become dirty very soon), so we must\n    // immediately mark this entry's parents as dirty. Normally we could\n    // just call entry.setDirty() rather than calling parent.setDirty() for\n    // each parent, but that would leave this entry in parent.childValues\n    // and parent.dirtyChildren, which would prevent the child from being\n    // truly forgotten.\n    this.parents.forEach(parent => {\n      parent.setDirty();\n      forgetChild(parent, this);\n    });\n  }\n}\n\nfunction rememberParent(child: AnyEntry) {\n  const parent = parentEntrySlot.getValue();\n  if (parent) {\n    child.parents.add(parent);\n\n    if (! parent.childValues.has(child)) {\n      parent.childValues.set(child, []);\n    }\n\n    if (mightBeDirty(child)) {\n      reportDirtyChild(parent, child);\n    } else {\n      reportCleanChild(parent, child);\n    }\n\n    return parent;\n  }\n}\n\nfunction reallyRecompute(entry: AnyEntry) {\n  // Since this recomputation is likely to re-remember some of this\n  // entry's children, we forget our children here but do not call\n  // maybeReportOrphan until after the recomputation finishes.\n  const originalChildren = forgetChildren(entry);\n\n  // Set entry as the parent entry while calling recomputeNewValue(entry).\n  parentEntrySlot.withValue(entry, recomputeNewValue, [entry]);\n\n  if (maybeSubscribe(entry)) {\n    // If we successfully recomputed entry.value and did not fail to\n    // (re)subscribe, then this Entry is no longer explicitly dirty.\n    setClean(entry);\n  }\n\n  // Now that we've had a chance to re-remember any children that were\n  // involved in the recomputation, we can safely report any orphan\n  // children that remain.\n  originalChildren.forEach(maybeReportOrphan);\n\n  return valueGet(entry.value);\n}\n\nfunction recomputeNewValue(entry: AnyEntry) {\n  entry.recomputing = true;\n  // Set entry.value as unknown.\n  entry.value.length = 0;\n  try {\n    // If entry.fn succeeds, entry.value will become a normal Value.\n    entry.value[0] = entry.fn.apply(null, entry.args);\n  } catch (e) {\n    // If entry.fn throws, entry.value will become exceptional.\n    entry.value[1] = e;\n  }\n  // Either way, this line is always reached.\n  entry.recomputing = false;\n}\n\nfunction mightBeDirty(entry: AnyEntry) {\n  return entry.dirty || !!(entry.dirtyChildren && entry.dirtyChildren.size);\n}\n\nfunction setClean(entry: AnyEntry) {\n  entry.dirty = false;\n\n  if (mightBeDirty(entry)) {\n    // This Entry may still have dirty children, in which case we can't\n    // let our parents know we're clean just yet.\n    return;\n  }\n\n  reportClean(entry);\n}\n\nfunction reportDirty(child: AnyEntry) {\n  child.parents.forEach(parent => reportDirtyChild(parent, child));\n}\n\nfunction reportClean(child: AnyEntry) {\n  child.parents.forEach(parent => reportCleanChild(parent, child));\n}\n\n// Let a parent Entry know that one of its children may be dirty.\nfunction reportDirtyChild(parent: AnyEntry, child: AnyEntry) {\n  // Must have called rememberParent(child) before calling\n  // reportDirtyChild(parent, child).\n  assert(parent.childValues.has(child));\n  assert(mightBeDirty(child));\n\n  if (! parent.dirtyChildren) {\n    parent.dirtyChildren = emptySetPool.pop() || new Set;\n\n  } else if (parent.dirtyChildren.has(child)) {\n    // If we already know this child is dirty, then we must have already\n    // informed our own parents that we are dirty, so we can terminate\n    // the recursion early.\n    return;\n  }\n\n  parent.dirtyChildren.add(child);\n  reportDirty(parent);\n}\n\n// Let a parent Entry know that one of its children is no longer dirty.\nfunction reportCleanChild(parent: AnyEntry, child: AnyEntry) {\n  // Must have called rememberChild(child) before calling\n  // reportCleanChild(parent, child).\n  assert(parent.childValues.has(child));\n  assert(! mightBeDirty(child));\n\n  const childValue = parent.childValues.get(child)!;\n  if (childValue.length === 0) {\n    parent.childValues.set(child, valueCopy(child.value));\n  } else if (! valueIs(childValue, child.value)) {\n    parent.setDirty();\n  }\n\n  removeDirtyChild(parent, child);\n\n  if (mightBeDirty(parent)) {\n    return;\n  }\n\n  reportClean(parent);\n}\n\nfunction removeDirtyChild(parent: AnyEntry, child: AnyEntry) {\n  const dc = parent.dirtyChildren;\n  if (dc) {\n    dc.delete(child);\n    if (dc.size === 0) {\n      if (emptySetPool.length < POOL_TARGET_SIZE) {\n        emptySetPool.push(dc);\n      }\n      parent.dirtyChildren = null;\n    }\n  }\n}\n\n// If the given entry has a reportOrphan method, and no remaining parents,\n// call entry.reportOrphan and return true iff it returns true. The\n// reportOrphan function should return true to indicate entry.dispose()\n// has been called, and the entry has been removed from any other caches\n// (see index.js for the only current example).\nfunction maybeReportOrphan(entry: AnyEntry) {\n  return entry.parents.size === 0 &&\n    typeof entry.reportOrphan === \"function\" &&\n    entry.reportOrphan() === true;\n}\n\n// Removes all children from this entry and returns an array of the\n// removed children.\nfunction forgetChildren(parent: AnyEntry) {\n  let children = reusableEmptyArray;\n\n  if (parent.childValues.size > 0) {\n    children = [];\n    parent.childValues.forEach((_value, child) => {\n      forgetChild(parent, child);\n      children.push(child);\n    });\n  }\n\n  // After we forget all our children, this.dirtyChildren must be empty\n  // and therefore must have been reset to null.\n  assert(parent.dirtyChildren === null);\n\n  return children;\n}\n\nfunction forgetChild(parent: AnyEntry, child: AnyEntry) {\n  child.parents.delete(parent);\n  parent.childValues.delete(child);\n  removeDirtyChild(parent, child);\n}\n\nfunction maybeSubscribe(entry: AnyEntry) {\n  if (typeof entry.subscribe === \"function\") {\n    try {\n      maybeUnsubscribe(entry); // Prevent double subscriptions.\n      entry.unsubscribe = entry.subscribe.apply(null, entry.args);\n    } catch (e) {\n      // If this Entry has a subscribe function and it threw an exception\n      // (or an unsubscribe function it previously returned now throws),\n      // return false to indicate that we were not able to subscribe (or\n      // unsubscribe), and this Entry should remain dirty.\n      entry.setDirty();\n      return false;\n    }\n  }\n\n  // Returning true indicates either that there was no entry.subscribe\n  // function or that it succeeded.\n  return true;\n}\n\nfunction maybeUnsubscribe(entry: AnyEntry) {\n  const { unsubscribe } = entry;\n  if (typeof unsubscribe === \"function\") {\n    entry.unsubscribe = void 0;\n    unsubscribe();\n  }\n}\n","// A trie data structure that holds object keys weakly, yet can also hold\n// non-object keys, unlike the native `WeakMap`.\nexport class KeyTrie<K> {\n  // Since a `WeakMap` cannot hold primitive values as keys, we need a\n  // backup `Map` instance to hold primitive keys. Both `this._weakMap`\n  // and `this._strongMap` are lazily initialized.\n  private weak?: WeakMap<any, KeyTrie<K>>;\n  private strong?: Map<any, KeyTrie<K>>;\n  private data?: K;\n\n  constructor(private readonly weakness: boolean) {}\n\n  public lookup<T extends any[]>(...array: T): K {\n    return this.lookupArray(array);\n  }\n\n  public lookupArray<T extends any[]>(array: T): K {\n    let node: KeyTrie<K> = this;\n    array.forEach(key => node = node.getChildTrie(key));\n    return node.data || (node.data = Object.create(null));\n  }\n\n  private getChildTrie(key: any) {\n    const map = this.weakness && isObjRef(key)\n      ? this.weak || (this.weak = new WeakMap<any, KeyTrie<K>>())\n      : this.strong || (this.strong = new Map<any, KeyTrie<K>>());\n    let child = map.get(key);\n    if (!child) map.set(key, child = new KeyTrie<K>(this.weakness));\n    return child;\n  }\n}\n\nfunction isObjRef(value: any) {\n  switch (typeof value) {\n  case \"object\":\n    if (value === null) break;\n    // Fall through to return true...\n  case \"function\":\n    return true;\n  }\n  return false;\n}\n","import { isTest, IdValue } from 'apollo-utilities';\nimport { invariant } from 'ts-invariant';\n\nimport {\n  ReadStoreContext,\n  FragmentMatcherInterface,\n  PossibleTypesMap,\n  IntrospectionResultData,\n} from './types';\n\nlet haveWarned = false;\n\nfunction shouldWarn() {\n  const answer = !haveWarned;\n  /* istanbul ignore if */\n  if (!isTest()) {\n    haveWarned = true;\n  }\n  return answer;\n}\n\n/**\n * This fragment matcher is very basic and unable to match union or interface type conditions\n */\nexport class HeuristicFragmentMatcher implements FragmentMatcherInterface {\n  constructor() {\n    // do nothing\n  }\n\n  public ensureReady() {\n    return Promise.resolve();\n  }\n\n  public canBypassInit() {\n    return true; // we don't need to initialize this fragment matcher.\n  }\n\n  public match(\n    idValue: IdValue,\n    typeCondition: string,\n    context: ReadStoreContext,\n  ): boolean | 'heuristic' {\n    const obj = context.store.get(idValue.id);\n    const isRootQuery = idValue.id === 'ROOT_QUERY';\n\n    if (!obj) {\n      // https://github.com/apollographql/apollo-client/pull/3507\n      return isRootQuery;\n    }\n\n    const { __typename = isRootQuery && 'Query' } = obj;\n\n    if (!__typename) {\n      if (shouldWarn()) {\n        invariant.warn(`You're using fragments in your queries, but either don't have the addTypename:\n  true option set in Apollo Client, or you are trying to write a fragment to the store without the __typename.\n   Please turn on the addTypename option and include __typename when writing fragments so that Apollo Client\n   can accurately match fragments.`);\n        invariant.warn(\n          'Could not find __typename on Fragment ',\n          typeCondition,\n          obj,\n        );\n        invariant.warn(\n          `DEPRECATION WARNING: using fragments without __typename is unsupported behavior ` +\n            `and will be removed in future versions of Apollo client. You should fix this and set addTypename to true now.`,\n        );\n      }\n\n      return 'heuristic';\n    }\n\n    if (__typename === typeCondition) {\n      return true;\n    }\n\n    // At this point we don't know if this fragment should match or not. It's\n    // either:\n    //\n    // 1. (GOOD) A fragment on a matching interface or union.\n    // 2. (BAD) A fragment on a non-matching concrete type or interface or union.\n    //\n    // If it's 2, we don't want it to match. If it's 1, we want it to match. We\n    // can't tell the difference, so we warn the user, but still try to match\n    // it (for backwards compatibility reasons). This unfortunately means that\n    // using the `HeuristicFragmentMatcher` with unions and interfaces is\n    // very unreliable. This will be addressed in a future major version of\n    // Apollo Client, but for now the recommendation is to use the\n    // `IntrospectionFragmentMatcher` when working with unions/interfaces.\n\n    if (shouldWarn()) {\n      invariant.error(\n        'You are using the simple (heuristic) fragment matcher, but your ' +\n          'queries contain union or interface types. Apollo Client will not be ' +\n          'able to accurately map fragments. To make this error go away, use ' +\n          'the `IntrospectionFragmentMatcher` as described in the docs: ' +\n          'https://www.apollographql.com/docs/react/advanced/fragments.html#fragment-matcher',\n      );\n    }\n\n    return 'heuristic';\n  }\n}\n\nexport class IntrospectionFragmentMatcher implements FragmentMatcherInterface {\n  private isReady: boolean;\n  private possibleTypesMap: PossibleTypesMap;\n\n  constructor(options?: {\n    introspectionQueryResultData?: IntrospectionResultData;\n  }) {\n    if (options && options.introspectionQueryResultData) {\n      this.possibleTypesMap = this.parseIntrospectionResult(\n        options.introspectionQueryResultData,\n      );\n      this.isReady = true;\n    } else {\n      this.isReady = false;\n    }\n\n    this.match = this.match.bind(this);\n  }\n\n  public match(\n    idValue: IdValue,\n    typeCondition: string,\n    context: ReadStoreContext,\n  ) {\n    invariant(\n      this.isReady,\n      'FragmentMatcher.match() was called before FragmentMatcher.init()',\n    );\n\n    const obj = context.store.get(idValue.id);\n    const isRootQuery = idValue.id === 'ROOT_QUERY';\n\n    if (!obj) {\n      // https://github.com/apollographql/apollo-client/pull/4620\n      return isRootQuery;\n    }\n\n    const { __typename = isRootQuery && 'Query' } = obj;\n\n    invariant(\n      __typename,\n      `Cannot match fragment because __typename property is missing: ${JSON.stringify(\n        obj,\n      )}`,\n    );\n\n    if (__typename === typeCondition) {\n      return true;\n    }\n\n    const implementingTypes = this.possibleTypesMap[typeCondition];\n    if (\n      __typename &&\n      implementingTypes &&\n      implementingTypes.indexOf(__typename) > -1\n    ) {\n      return true;\n    }\n\n    return false;\n  }\n\n  private parseIntrospectionResult(\n    introspectionResultData: IntrospectionResultData,\n  ): PossibleTypesMap {\n    const typeMap: PossibleTypesMap = {};\n    introspectionResultData.__schema.types.forEach(type => {\n      if (type.kind === 'UNION' || type.kind === 'INTERFACE') {\n        typeMap[type.name] = type.possibleTypes.map(\n          implementingType => implementingType.name,\n        );\n      }\n    });\n    return typeMap;\n  }\n}\n","import { NormalizedCache, NormalizedCacheObject, StoreObject } from './types';\nimport { wrap, OptimisticWrapperFunction } from 'optimism';\n\nconst hasOwn = Object.prototype.hasOwnProperty;\n\nexport class DepTrackingCache implements NormalizedCache {\n  // Wrapper function produced by the optimism library, used to depend on\n  // dataId strings, for easy invalidation of specific IDs.\n  private depend: OptimisticWrapperFunction<[string], StoreObject | undefined>;\n\n  constructor(private data: NormalizedCacheObject = Object.create(null)) {\n    this.depend = wrap((dataId: string) => this.data[dataId], {\n      disposable: true,\n      makeCacheKey(dataId: string) {\n        return dataId;\n      },\n    });\n  }\n\n  public toObject(): NormalizedCacheObject {\n    return this.data;\n  }\n\n  public get(dataId: string): StoreObject {\n    this.depend(dataId);\n    return this.data[dataId]!;\n  }\n\n  public set(dataId: string, value?: StoreObject) {\n    const oldValue = this.data[dataId];\n    if (value !== oldValue) {\n      this.data[dataId] = value;\n      this.depend.dirty(dataId);\n    }\n  }\n\n  public delete(dataId: string): void {\n    if (hasOwn.call(this.data, dataId)) {\n      delete this.data[dataId];\n      this.depend.dirty(dataId);\n    }\n  }\n\n  public clear(): void {\n    this.replace(null);\n  }\n\n  public replace(newData: NormalizedCacheObject | null): void {\n    if (newData) {\n      Object.keys(newData).forEach(dataId => {\n        this.set(dataId, newData[dataId]);\n      });\n      Object.keys(this.data).forEach(dataId => {\n        if (!hasOwn.call(newData, dataId)) {\n          this.delete(dataId);\n        }\n      });\n    } else {\n      Object.keys(this.data).forEach(dataId => {\n        this.delete(dataId);\n      });\n    }\n  }\n}\n\nexport function defaultNormalizedCacheFactory(\n  seed?: NormalizedCacheObject,\n): NormalizedCache {\n  return new DepTrackingCache(seed);\n}\n","import {\n  argumentsObjectFromField,\n  assign,\n  canUseWeakMap,\n  createFragmentMap,\n  DirectiveInfo,\n  FragmentMap,\n  getDefaultValues,\n  getDirectiveInfoFromField,\n  getFragmentDefinitions,\n  getMainDefinition,\n  getQueryDefinition,\n  getStoreKeyName,\n  IdValue,\n  isEqual,\n  isField,\n  isIdValue,\n  isInlineFragment,\n  isJsonValue,\n  maybeDeepFreeze,\n  mergeDeepArray,\n  resultKeyNameFromField,\n  shouldInclude,\n  StoreValue,\n  toIdValue,\n} from 'apollo-utilities';\n\nimport { Cache } from 'apollo-cache';\n\nimport {\n  ReadStoreContext,\n  DiffQueryAgainstStoreOptions,\n  ReadQueryOptions,\n  StoreObject,\n} from './types';\n\nimport {\n  DocumentNode,\n  FieldNode,\n  FragmentDefinitionNode,\n  InlineFragmentNode,\n  SelectionSetNode,\n} from 'graphql';\n\nimport { wrap, KeyTrie } from 'optimism';\nimport { DepTrackingCache } from './depTrackingCache';\nimport { invariant, InvariantError } from 'ts-invariant';\n\nexport type VariableMap = { [name: string]: any };\n\nexport type FragmentMatcher = (\n  rootValue: any,\n  typeCondition: string,\n  context: ReadStoreContext,\n) => boolean | 'heuristic';\n\ntype ExecContext = {\n  query: DocumentNode;\n  fragmentMap: FragmentMap;\n  contextValue: ReadStoreContext;\n  variableValues: VariableMap;\n  fragmentMatcher: FragmentMatcher;\n};\n\ntype ExecInfo = {\n  resultKey: string;\n  directives: DirectiveInfo;\n};\n\nexport type ExecResultMissingField = {\n  object: StoreObject;\n  fieldName: string;\n  tolerable: boolean;\n};\n\nexport type ExecResult<R = any> = {\n  result: R;\n  // Empty array if no missing fields encountered while computing result.\n  missing?: ExecResultMissingField[];\n};\n\ntype ExecStoreQueryOptions = {\n  query: DocumentNode;\n  rootValue: IdValue;\n  contextValue: ReadStoreContext;\n  variableValues: VariableMap;\n  // Default matcher always matches all fragments\n  fragmentMatcher?: FragmentMatcher;\n};\n\ntype ExecSelectionSetOptions = {\n  selectionSet: SelectionSetNode;\n  rootValue: any;\n  execContext: ExecContext;\n};\n\ntype ExecSubSelectedArrayOptions = {\n  field: FieldNode;\n  array: any[];\n  execContext: ExecContext;\n};\n\nexport interface StoreReaderConfig {\n  cacheKeyRoot?: KeyTrie<object>;\n  freezeResults?: boolean;\n}\n\nexport class StoreReader {\n  private freezeResults: boolean;\n\n  constructor({\n    cacheKeyRoot = new KeyTrie<object>(canUseWeakMap),\n    freezeResults = false,\n  }: StoreReaderConfig = {}) {\n    const {\n      executeStoreQuery,\n      executeSelectionSet,\n      executeSubSelectedArray,\n    } = this;\n\n    this.freezeResults = freezeResults;\n\n    this.executeStoreQuery = wrap((options: ExecStoreQueryOptions) => {\n      return executeStoreQuery.call(this, options);\n    }, {\n      makeCacheKey({\n        query,\n        rootValue,\n        contextValue,\n        variableValues,\n        fragmentMatcher,\n      }: ExecStoreQueryOptions) {\n        // The result of executeStoreQuery can be safely cached only if the\n        // underlying store is capable of tracking dependencies and invalidating\n        // the cache when relevant data have changed.\n        if (contextValue.store instanceof DepTrackingCache) {\n          return cacheKeyRoot.lookup(\n            contextValue.store,\n            query,\n            fragmentMatcher,\n            JSON.stringify(variableValues),\n            rootValue.id,\n          );\n        }\n      }\n    });\n\n    this.executeSelectionSet = wrap((options: ExecSelectionSetOptions) => {\n      return executeSelectionSet.call(this, options);\n    }, {\n      makeCacheKey({\n        selectionSet,\n        rootValue,\n        execContext,\n      }: ExecSelectionSetOptions) {\n        if (execContext.contextValue.store instanceof DepTrackingCache) {\n          return cacheKeyRoot.lookup(\n            execContext.contextValue.store,\n            selectionSet,\n            execContext.fragmentMatcher,\n            JSON.stringify(execContext.variableValues),\n            rootValue.id,\n          );\n        }\n      }\n    });\n\n    this.executeSubSelectedArray = wrap((options: ExecSubSelectedArrayOptions) => {\n      return executeSubSelectedArray.call(this, options);\n    }, {\n      makeCacheKey({ field, array, execContext }) {\n        if (execContext.contextValue.store instanceof DepTrackingCache) {\n          return cacheKeyRoot.lookup(\n            execContext.contextValue.store,\n            field,\n            array,\n            JSON.stringify(execContext.variableValues),\n          );\n        }\n      }\n    });\n  }\n\n  /**\n   * Resolves the result of a query solely from the store (i.e. never hits the server).\n   *\n   * @param {Store} store The {@link NormalizedCache} used by Apollo for the `data` portion of the\n   * store.\n   *\n   * @param {DocumentNode} query The query document to resolve from the data available in the store.\n   *\n   * @param {Object} [variables] A map from the name of a variable to its value. These variables can\n   * be referenced by the query document.\n   *\n   * @param {any} previousResult The previous result returned by this function for the same query.\n   * If nothing in the store changed since that previous result then values from the previous result\n   * will be returned to preserve referential equality.\n   */\n  public readQueryFromStore<QueryType>(\n    options: ReadQueryOptions,\n  ): QueryType | undefined {\n    return this.diffQueryAgainstStore<QueryType>({\n      ...options,\n      returnPartialData: false,\n    }).result;\n  }\n\n  /**\n   * Given a store and a query, return as much of the result as possible and\n   * identify if any data was missing from the store.\n   * @param  {DocumentNode} query A parsed GraphQL query document\n   * @param  {Store} store The Apollo Client store object\n   * @param  {any} previousResult The previous result returned by this function for the same query\n   * @return {result: Object, complete: [boolean]}\n   */\n  public diffQueryAgainstStore<T>({\n    store,\n    query,\n    variables,\n    previousResult,\n    returnPartialData = true,\n    rootId = 'ROOT_QUERY',\n    fragmentMatcherFunction,\n    config,\n  }: DiffQueryAgainstStoreOptions): Cache.DiffResult<T> {\n    // Throw the right validation error by trying to find a query in the document\n    const queryDefinition = getQueryDefinition(query);\n\n    variables = assign({}, getDefaultValues(queryDefinition), variables);\n\n    const context: ReadStoreContext = {\n      // Global settings\n      store,\n      dataIdFromObject: config && config.dataIdFromObject,\n      cacheRedirects: (config && config.cacheRedirects) || {},\n    };\n\n    const execResult = this.executeStoreQuery({\n      query,\n      rootValue: {\n        type: 'id',\n        id: rootId,\n        generated: true,\n        typename: 'Query',\n      },\n      contextValue: context,\n      variableValues: variables,\n      fragmentMatcher: fragmentMatcherFunction,\n    });\n\n    const hasMissingFields =\n      execResult.missing && execResult.missing.length > 0;\n\n    if (hasMissingFields && ! returnPartialData) {\n      execResult.missing!.forEach(info => {\n        if (info.tolerable) return;\n        throw new InvariantError(\n          `Can't find field ${info.fieldName} on object ${JSON.stringify(\n            info.object,\n            null,\n            2,\n          )}.`,\n        );\n      });\n    }\n\n    if (previousResult) {\n      if (isEqual(previousResult, execResult.result)) {\n        execResult.result = previousResult;\n      }\n    }\n\n    return {\n      result: execResult.result,\n      complete: !hasMissingFields,\n    };\n  }\n\n  /**\n   * Based on graphql function from graphql-js:\n   *\n   * graphql(\n   *   schema: GraphQLSchema,\n   *   requestString: string,\n   *   rootValue?: ?any,\n   *   contextValue?: ?any,\n   *   variableValues?: ?{[key: string]: any},\n   *   operationName?: ?string\n   * ): Promise<GraphQLResult>\n   *\n   * The default export as of graphql-anywhere is sync as of 4.0,\n   * but below is an exported alternative that is async.\n   * In the 5.0 version, this will be the only export again\n   * and it will be async\n   *\n   */\n  private executeStoreQuery({\n    query,\n    rootValue,\n    contextValue,\n    variableValues,\n    // Default matcher always matches all fragments\n    fragmentMatcher = defaultFragmentMatcher,\n  }: ExecStoreQueryOptions): ExecResult {\n    const mainDefinition = getMainDefinition(query);\n    const fragments = getFragmentDefinitions(query);\n    const fragmentMap = createFragmentMap(fragments);\n    const execContext: ExecContext = {\n      query,\n      fragmentMap,\n      contextValue,\n      variableValues,\n      fragmentMatcher,\n    };\n\n    return this.executeSelectionSet({\n      selectionSet: mainDefinition.selectionSet,\n      rootValue,\n      execContext,\n    });\n  }\n\n  private executeSelectionSet({\n    selectionSet,\n    rootValue,\n    execContext,\n  }: ExecSelectionSetOptions): ExecResult {\n    const { fragmentMap, contextValue, variableValues: variables } = execContext;\n    const finalResult: ExecResult = { result: null };\n\n    const objectsToMerge: { [key: string]: any }[] = [];\n\n    const object: StoreObject = contextValue.store.get(rootValue.id);\n\n    const typename =\n      (object && object.__typename) ||\n      (rootValue.id === 'ROOT_QUERY' && 'Query') ||\n      void 0;\n\n    function handleMissing<T>(result: ExecResult<T>): T {\n      if (result.missing) {\n        finalResult.missing = finalResult.missing || [];\n        finalResult.missing.push(...result.missing);\n      }\n      return result.result;\n    }\n\n    selectionSet.selections.forEach(selection => {\n      if (!shouldInclude(selection, variables)) {\n        // Skip this entirely\n        return;\n      }\n\n      if (isField(selection)) {\n        const fieldResult = handleMissing(\n          this.executeField(object, typename, selection, execContext),\n        );\n\n        if (typeof fieldResult !== 'undefined') {\n          objectsToMerge.push({\n            [resultKeyNameFromField(selection)]: fieldResult,\n          });\n        }\n\n      } else {\n        let fragment: InlineFragmentNode | FragmentDefinitionNode;\n\n        if (isInlineFragment(selection)) {\n          fragment = selection;\n        } else {\n          // This is a named fragment\n          fragment = fragmentMap[selection.name.value];\n\n          if (!fragment) {\n            throw new InvariantError(`No fragment named ${selection.name.value}`);\n          }\n        }\n\n        const typeCondition =\n          fragment.typeCondition && fragment.typeCondition.name.value;\n\n        const match =\n          !typeCondition ||\n          execContext.fragmentMatcher(rootValue, typeCondition, contextValue);\n\n        if (match) {\n          let fragmentExecResult = this.executeSelectionSet({\n            selectionSet: fragment.selectionSet,\n            rootValue,\n            execContext,\n          });\n\n          if (match === 'heuristic' && fragmentExecResult.missing) {\n            fragmentExecResult = {\n              ...fragmentExecResult,\n              missing: fragmentExecResult.missing.map(info => {\n                return { ...info, tolerable: true };\n              }),\n            };\n          }\n\n          objectsToMerge.push(handleMissing(fragmentExecResult));\n        }\n      }\n    });\n\n    // Perform a single merge at the end so that we can avoid making more\n    // defensive shallow copies than necessary.\n    finalResult.result = mergeDeepArray(objectsToMerge);\n\n    if (this.freezeResults && process.env.NODE_ENV !== 'production') {\n      Object.freeze(finalResult.result);\n    }\n\n    return finalResult;\n  }\n\n  private executeField(\n    object: StoreObject,\n    typename: string | void,\n    field: FieldNode,\n    execContext: ExecContext,\n  ): ExecResult {\n    const { variableValues: variables, contextValue } = execContext;\n    const fieldName = field.name.value;\n    const args = argumentsObjectFromField(field, variables);\n\n    const info: ExecInfo = {\n      resultKey: resultKeyNameFromField(field),\n      directives: getDirectiveInfoFromField(field, variables),\n    };\n\n    const readStoreResult = readStoreResolver(\n      object,\n      typename,\n      fieldName,\n      args,\n      contextValue,\n      info,\n    );\n\n    if (Array.isArray(readStoreResult.result)) {\n      return this.combineExecResults(\n        readStoreResult,\n        this.executeSubSelectedArray({\n          field,\n          array: readStoreResult.result,\n          execContext,\n        }),\n      );\n    }\n\n    // Handle all scalar types here\n    if (!field.selectionSet) {\n      assertSelectionSetForIdValue(field, readStoreResult.result);\n      if (this.freezeResults && process.env.NODE_ENV !== 'production') {\n        maybeDeepFreeze(readStoreResult);\n      }\n      return readStoreResult;\n    }\n\n    // From here down, the field has a selection set, which means it's trying to\n    // query a GraphQLObjectType\n    if (readStoreResult.result == null) {\n      // Basically any field in a GraphQL response can be null, or missing\n      return readStoreResult;\n    }\n\n    // Returned value is an object, and the query has a sub-selection. Recurse.\n    return this.combineExecResults(\n      readStoreResult,\n      this.executeSelectionSet({\n        selectionSet: field.selectionSet,\n        rootValue: readStoreResult.result,\n        execContext,\n      }),\n    );\n  }\n\n  private combineExecResults<T>(\n    ...execResults: ExecResult<T>[]\n  ): ExecResult<T> {\n    let missing: ExecResultMissingField[] | undefined;\n    execResults.forEach(execResult => {\n      if (execResult.missing) {\n        missing = missing || [];\n        missing.push(...execResult.missing);\n      }\n    });\n    return {\n      result: execResults.pop()!.result,\n      missing,\n    };\n  }\n\n  private executeSubSelectedArray({\n    field,\n    array,\n    execContext,\n  }: ExecSubSelectedArrayOptions): ExecResult {\n    let missing: ExecResultMissingField[] | undefined;\n\n    function handleMissing<T>(childResult: ExecResult<T>): T {\n      if (childResult.missing) {\n        missing = missing || [];\n        missing.push(...childResult.missing);\n      }\n\n      return childResult.result;\n    }\n\n    array = array.map(item => {\n      // null value in array\n      if (item === null) {\n        return null;\n      }\n\n      // This is a nested array, recurse\n      if (Array.isArray(item)) {\n        return handleMissing(this.executeSubSelectedArray({\n          field,\n          array: item,\n          execContext,\n        }));\n      }\n\n      // This is an object, run the selection set on it\n      if (field.selectionSet) {\n        return handleMissing(this.executeSelectionSet({\n          selectionSet: field.selectionSet,\n          rootValue: item,\n          execContext,\n        }));\n      }\n\n      assertSelectionSetForIdValue(field, item);\n\n      return item;\n    });\n\n    if (this.freezeResults && process.env.NODE_ENV !== 'production') {\n      Object.freeze(array);\n    }\n\n    return { result: array, missing };\n  }\n}\n\nfunction assertSelectionSetForIdValue(\n  field: FieldNode,\n  value: any,\n) {\n  if (!field.selectionSet && isIdValue(value)) {\n    throw new InvariantError(\n      `Missing selection set for object of type ${\n        value.typename\n      } returned for query field ${field.name.value}`\n    );\n  }\n}\n\nfunction defaultFragmentMatcher() {\n  return true;\n}\n\nexport function assertIdValue(idValue: IdValue) {\n  invariant(isIdValue(idValue), `\\\nEncountered a sub-selection on the query, but the store doesn't have \\\nan object reference. This should never happen during normal use unless you have custom code \\\nthat is directly manipulating the store; please file an issue.`);\n}\n\nfunction readStoreResolver(\n  object: StoreObject,\n  typename: string | void,\n  fieldName: string,\n  args: any,\n  context: ReadStoreContext,\n  { resultKey, directives }: ExecInfo,\n): ExecResult<StoreValue> {\n  let storeKeyName = fieldName;\n  if (args || directives) {\n    // We happen to know here that getStoreKeyName returns its first\n    // argument unmodified if there are no args or directives, so we can\n    // avoid calling the function at all in that case, as a small but\n    // important optimization to this frequently executed code.\n    storeKeyName = getStoreKeyName(storeKeyName, args, directives);\n  }\n\n  let fieldValue: StoreValue | void = void 0;\n\n  if (object) {\n    fieldValue = object[storeKeyName];\n\n    if (\n      typeof fieldValue === 'undefined' &&\n      context.cacheRedirects &&\n      typeof typename === 'string'\n    ) {\n      // Look for the type in the custom resolver map\n      const type = context.cacheRedirects[typename];\n      if (type) {\n        // Look for the field in the custom resolver map\n        const resolver = type[fieldName];\n        if (resolver) {\n          fieldValue = resolver(object, args, {\n            getCacheKey(storeObj: StoreObject) {\n              const id = context.dataIdFromObject!(storeObj);\n              return id && toIdValue({\n                id,\n                typename: storeObj.__typename,\n              });\n            },\n          });\n        }\n      }\n    }\n  }\n\n  if (typeof fieldValue === 'undefined') {\n    return {\n      result: fieldValue,\n      missing: [{\n        object,\n        fieldName: storeKeyName,\n        tolerable: false,\n      }],\n    };\n  }\n\n  if (isJsonValue(fieldValue)) {\n    fieldValue = fieldValue.json;\n  }\n\n  return {\n    result: fieldValue,\n  };\n}\n","import { NormalizedCache, NormalizedCacheObject, StoreObject } from './types';\n\nexport class ObjectCache implements NormalizedCache {\n  constructor(protected data: NormalizedCacheObject = Object.create(null)) {}\n\n  public toObject() {\n    return this.data;\n  }\n\n  public get(dataId: string) {\n    return this.data[dataId]!;\n  }\n\n  public set(dataId: string, value: StoreObject) {\n    this.data[dataId] = value;\n  }\n\n  public delete(dataId: string) {\n    this.data[dataId] = void 0;\n  }\n\n  public clear() {\n    this.data = Object.create(null);\n  }\n\n  public replace(newData: NormalizedCacheObject) {\n    this.data = newData || Object.create(null);\n  }\n}\n\nexport function defaultNormalizedCacheFactory(\n  seed?: NormalizedCacheObject,\n): NormalizedCache {\n  return new ObjectCache(seed);\n}\n","import {\n  SelectionSetNode,\n  FieldNode,\n  DocumentNode,\n  InlineFragmentNode,\n  FragmentDefinitionNode,\n} from 'graphql';\nimport { FragmentMatcher } from './readFromStore';\n\nimport {\n  assign,\n  createFragmentMap,\n  FragmentMap,\n  getDefaultValues,\n  getFragmentDefinitions,\n  getOperationDefinition,\n  IdValue,\n  isField,\n  isIdValue,\n  isInlineFragment,\n  isProduction,\n  resultKeyNameFromField,\n  shouldInclude,\n  storeKeyNameFromField,\n  StoreValue,\n  toIdValue,\n  isEqual,\n} from 'apollo-utilities';\n\nimport { invariant } from 'ts-invariant';\n\nimport { ObjectCache } from './objectCache';\nimport { defaultNormalizedCacheFactory } from './depTrackingCache';\n\nimport {\n  IdGetter,\n  NormalizedCache,\n  ReadStoreContext,\n  StoreObject,\n} from './types';\n\nexport class WriteError extends Error {\n  public type = 'WriteError';\n}\n\nexport function enhanceErrorWithDocument(error: Error, document: DocumentNode) {\n  // XXX A bit hacky maybe ...\n  const enhancedError = new WriteError(\n    `Error writing result to store for query:\\n ${JSON.stringify(document)}`,\n  );\n  enhancedError.message += '\\n' + error.message;\n  enhancedError.stack = error.stack;\n  return enhancedError;\n}\n\nexport type WriteContext = {\n  readonly store: NormalizedCache;\n  readonly processedData?: { [x: string]: FieldNode[] };\n  readonly variables?: any;\n  readonly dataIdFromObject?: IdGetter;\n  readonly fragmentMap?: FragmentMap;\n  readonly fragmentMatcherFunction?: FragmentMatcher;\n};\n\nexport class StoreWriter {\n  /**\n   * Writes the result of a query to the store.\n   *\n   * @param result The result object returned for the query document.\n   *\n   * @param query The query document whose result we are writing to the store.\n   *\n   * @param store The {@link NormalizedCache} used by Apollo for the `data` portion of the store.\n   *\n   * @param variables A map from the name of a variable to its value. These variables can be\n   * referenced by the query document.\n   *\n   * @param dataIdFromObject A function that returns an object identifier given a particular result\n   * object. See the store documentation for details and an example of this function.\n   *\n   * @param fragmentMatcherFunction A function to use for matching fragment conditions in GraphQL documents\n   */\n  public writeQueryToStore({\n    query,\n    result,\n    store = defaultNormalizedCacheFactory(),\n    variables,\n    dataIdFromObject,\n    fragmentMatcherFunction,\n  }: {\n    query: DocumentNode;\n    result: Object;\n    store?: NormalizedCache;\n    variables?: Object;\n    dataIdFromObject?: IdGetter;\n    fragmentMatcherFunction?: FragmentMatcher;\n  }): NormalizedCache {\n    return this.writeResultToStore({\n      dataId: 'ROOT_QUERY',\n      result,\n      document: query,\n      store,\n      variables,\n      dataIdFromObject,\n      fragmentMatcherFunction,\n    });\n  }\n\n  public writeResultToStore({\n    dataId,\n    result,\n    document,\n    store = defaultNormalizedCacheFactory(),\n    variables,\n    dataIdFromObject,\n    fragmentMatcherFunction,\n  }: {\n    dataId: string;\n    result: any;\n    document: DocumentNode;\n    store?: NormalizedCache;\n    variables?: Object;\n    dataIdFromObject?: IdGetter;\n    fragmentMatcherFunction?: FragmentMatcher;\n  }): NormalizedCache {\n    // XXX TODO REFACTOR: this is a temporary workaround until query normalization is made to work with documents.\n    const operationDefinition = getOperationDefinition(document)!;\n\n    try {\n      return this.writeSelectionSetToStore({\n        result,\n        dataId,\n        selectionSet: operationDefinition.selectionSet,\n        context: {\n          store,\n          processedData: {},\n          variables: assign(\n            {},\n            getDefaultValues(operationDefinition),\n            variables,\n          ),\n          dataIdFromObject,\n          fragmentMap: createFragmentMap(getFragmentDefinitions(document)),\n          fragmentMatcherFunction,\n        },\n      });\n    } catch (e) {\n      throw enhanceErrorWithDocument(e, document);\n    }\n  }\n\n  public writeSelectionSetToStore({\n    result,\n    dataId,\n    selectionSet,\n    context,\n  }: {\n    dataId: string;\n    result: any;\n    selectionSet: SelectionSetNode;\n    context: WriteContext;\n  }): NormalizedCache {\n    const { variables, store, fragmentMap } = context;\n\n    selectionSet.selections.forEach(selection => {\n      if (!shouldInclude(selection, variables)) {\n        return;\n      }\n\n      if (isField(selection)) {\n        const resultFieldKey: string = resultKeyNameFromField(selection);\n        const value: any = result[resultFieldKey];\n\n        if (typeof value !== 'undefined') {\n          this.writeFieldToStore({\n            dataId,\n            value,\n            field: selection,\n            context,\n          });\n        } else {\n          let isDefered = false;\n          let isClient = false;\n          if (selection.directives && selection.directives.length) {\n            // If this is a defered field we don't need to throw / warn.\n            isDefered = selection.directives.some(\n              directive => directive.name && directive.name.value === 'defer',\n            );\n\n            // When using the @client directive, it might be desirable in\n            // some cases to want to write a selection set to the store,\n            // without having all of the selection set values available.\n            // This is because the @client field values might have already\n            // been written to the cache separately (e.g. via Apollo\n            // Cache's `writeData` capabilities). Because of this, we'll\n            // skip the missing field warning for fields with @client\n            // directives.\n            isClient = selection.directives.some(\n              directive => directive.name && directive.name.value === 'client',\n            );\n          }\n\n          if (!isDefered && !isClient && context.fragmentMatcherFunction) {\n            // XXX We'd like to throw an error, but for backwards compatibility's sake\n            // we just print a warning for the time being.\n            //throw new WriteError(`Missing field ${resultFieldKey} in ${JSON.stringify(result, null, 2).substring(0, 100)}`);\n            invariant.warn(\n              `Missing field ${resultFieldKey} in ${JSON.stringify(\n                result,\n                null,\n                2,\n              ).substring(0, 100)}`,\n            );\n          }\n        }\n      } else {\n        // This is not a field, so it must be a fragment, either inline or named\n        let fragment: InlineFragmentNode | FragmentDefinitionNode;\n\n        if (isInlineFragment(selection)) {\n          fragment = selection;\n        } else {\n          // Named fragment\n          fragment = (fragmentMap || {})[selection.name.value];\n          invariant(fragment, `No fragment named ${selection.name.value}.`);\n        }\n\n        let matches = true;\n        if (context.fragmentMatcherFunction && fragment.typeCondition) {\n          // TODO we need to rewrite the fragment matchers for this to work properly and efficiently\n          // Right now we have to pretend that we're passing in an idValue and that there's a store\n          // on the context.\n          const id = dataId || 'self';\n          const idValue = toIdValue({ id, typename: undefined });\n          const fakeContext: ReadStoreContext = {\n            // NOTE: fakeContext always uses ObjectCache\n            // since this is only to ensure the return value of 'matches'\n            store: new ObjectCache({ [id]: result }),\n            cacheRedirects: {},\n          };\n          const match = context.fragmentMatcherFunction(\n            idValue,\n            fragment.typeCondition.name.value,\n            fakeContext,\n          );\n          if (!isProduction() && match === 'heuristic') {\n            invariant.error('WARNING: heuristic fragment matching going on!');\n          }\n          matches = !!match;\n        }\n\n        if (matches) {\n          this.writeSelectionSetToStore({\n            result,\n            selectionSet: fragment.selectionSet,\n            dataId,\n            context,\n          });\n        }\n      }\n    });\n\n    return store;\n  }\n\n  private writeFieldToStore({\n    field,\n    value,\n    dataId,\n    context,\n  }: {\n    field: FieldNode;\n    value: any;\n    dataId: string;\n    context: WriteContext;\n  }) {\n    const { variables, dataIdFromObject, store } = context;\n\n    let storeValue: StoreValue;\n    let storeObject: StoreObject;\n\n    const storeFieldName: string = storeKeyNameFromField(field, variables);\n\n    // If this is a scalar value...\n    if (!field.selectionSet || value === null) {\n      storeValue =\n        value != null && typeof value === 'object'\n          ? // If the scalar value is a JSON blob, we have to \"escape\" it so it can’t pretend to be\n            // an id.\n            { type: 'json', json: value }\n          : // Otherwise, just store the scalar directly in the store.\n            value;\n    } else if (Array.isArray(value)) {\n      const generatedId = `${dataId}.${storeFieldName}`;\n\n      storeValue = this.processArrayValue(\n        value,\n        generatedId,\n        field.selectionSet,\n        context,\n      );\n    } else {\n      // It's an object\n      let valueDataId = `${dataId}.${storeFieldName}`;\n      let generated = true;\n\n      // We only prepend the '$' if the valueDataId isn't already a generated\n      // id.\n      if (!isGeneratedId(valueDataId)) {\n        valueDataId = '$' + valueDataId;\n      }\n\n      if (dataIdFromObject) {\n        const semanticId = dataIdFromObject(value);\n\n        // We throw an error if the first character of the id is '$. This is\n        // because we use that character to designate an Apollo-generated id\n        // and we use the distinction between user-desiginated and application-provided\n        // ids when managing overwrites.\n        invariant(\n          !semanticId || !isGeneratedId(semanticId),\n          'IDs returned by dataIdFromObject cannot begin with the \"$\" character.',\n        );\n\n        if (\n          semanticId ||\n          (typeof semanticId === 'number' && semanticId === 0)\n        ) {\n          valueDataId = semanticId;\n          generated = false;\n        }\n      }\n\n      if (!isDataProcessed(valueDataId, field, context.processedData)) {\n        this.writeSelectionSetToStore({\n          dataId: valueDataId,\n          result: value,\n          selectionSet: field.selectionSet,\n          context,\n        });\n      }\n\n      // We take the id and escape it (i.e. wrap it with an enclosing object).\n      // This allows us to distinguish IDs from normal scalars.\n      const typename = value.__typename;\n      storeValue = toIdValue({ id: valueDataId, typename }, generated);\n\n      // check if there was a generated id at the location where we're\n      // about to place this new id. If there was, we have to merge the\n      // data from that id with the data we're about to write in the store.\n      storeObject = store.get(dataId);\n      const escapedId =\n        storeObject && (storeObject[storeFieldName] as IdValue | undefined);\n      if (escapedId !== storeValue && isIdValue(escapedId)) {\n        const hadTypename = escapedId.typename !== undefined;\n        const hasTypename = typename !== undefined;\n        const typenameChanged =\n          hadTypename && hasTypename && escapedId.typename !== typename;\n\n        // If there is already a real id in the store and the current id we\n        // are dealing with is generated, we throw an error.\n        // One exception we allow is when the typename has changed, which occurs\n        // when schema defines a union, both with and without an ID in the same place.\n        // checks if we \"lost\" the read id\n        invariant(\n          !generated || escapedId.generated || typenameChanged,\n          `Store error: the application attempted to write an object with no provided id but the store already contains an id of ${\n            escapedId.id\n          } for this object. The selectionSet that was trying to be written is:\\n${\n            JSON.stringify(field)\n          }`,\n        );\n\n        // checks if we \"lost\" the typename\n        invariant(\n          !hadTypename || hasTypename,\n          `Store error: the application attempted to write an object with no provided typename but the store already contains an object with typename of ${\n            escapedId.typename\n          } for the object of id ${escapedId.id}. The selectionSet that was trying to be written is:\\n${\n            JSON.stringify(field)\n          }`,\n        );\n\n        if (escapedId.generated) {\n          // We should only merge if it's an object of the same type,\n          // otherwise we should delete the generated object\n          if (typenameChanged) {\n            // Only delete the generated object when the old object was\n            // inlined, and the new object is not. This is indicated by\n            // the old id being generated, and the new id being real.\n            if (!generated) {\n              store.delete(escapedId.id);\n            }\n          } else {\n            mergeWithGenerated(escapedId.id, (storeValue as IdValue).id, store);\n          }\n        }\n      }\n    }\n\n    storeObject = store.get(dataId);\n    if (!storeObject || !isEqual(storeValue, storeObject[storeFieldName])) {\n      store.set(dataId, {\n        ...storeObject,\n        [storeFieldName]: storeValue,\n      });\n    }\n  }\n\n  private processArrayValue(\n    value: any[],\n    generatedId: string,\n    selectionSet: SelectionSetNode,\n    context: WriteContext,\n  ): any[] {\n    return value.map((item: any, index: any) => {\n      if (item === null) {\n        return null;\n      }\n\n      let itemDataId = `${generatedId}.${index}`;\n\n      if (Array.isArray(item)) {\n        return this.processArrayValue(item, itemDataId, selectionSet, context);\n      }\n\n      let generated = true;\n\n      if (context.dataIdFromObject) {\n        const semanticId = context.dataIdFromObject(item);\n\n        if (semanticId) {\n          itemDataId = semanticId;\n          generated = false;\n        }\n      }\n\n      if (!isDataProcessed(itemDataId, selectionSet, context.processedData)) {\n        this.writeSelectionSetToStore({\n          dataId: itemDataId,\n          result: item,\n          selectionSet,\n          context,\n        });\n      }\n\n      return toIdValue(\n        { id: itemDataId, typename: item.__typename },\n        generated,\n      );\n    });\n  }\n}\n\n// Checks if the id given is an id that was generated by Apollo\n// rather than by dataIdFromObject.\nfunction isGeneratedId(id: string): boolean {\n  return id[0] === '$';\n}\n\nfunction mergeWithGenerated(\n  generatedKey: string,\n  realKey: string,\n  cache: NormalizedCache,\n): boolean {\n  if (generatedKey === realKey) {\n    return false;\n  }\n\n  const generated = cache.get(generatedKey);\n  const real = cache.get(realKey);\n  let madeChanges = false;\n\n  Object.keys(generated).forEach(key => {\n    const value = generated[key];\n    const realValue = real[key];\n\n    if (\n      isIdValue(value) &&\n      isGeneratedId(value.id) &&\n      isIdValue(realValue) &&\n      !isEqual(value, realValue) &&\n      mergeWithGenerated(value.id, realValue.id, cache)\n    ) {\n      madeChanges = true;\n    }\n  });\n\n  cache.delete(generatedKey);\n  const newRealValue = { ...generated, ...real };\n\n  if (isEqual(newRealValue, real)) {\n    return madeChanges;\n  }\n\n  cache.set(realKey, newRealValue);\n  return true;\n}\n\nfunction isDataProcessed(\n  dataId: string,\n  field: FieldNode | SelectionSetNode,\n  processedData?: { [x: string]: (FieldNode | SelectionSetNode)[] },\n): boolean {\n  if (!processedData) {\n    return false;\n  }\n\n  if (processedData[dataId]) {\n    if (processedData[dataId].indexOf(field) >= 0) {\n      return true;\n    } else {\n      processedData[dataId].push(field);\n    }\n  } else {\n    processedData[dataId] = [field];\n  }\n\n  return false;\n}\n","// Make builtins like Map and Set safe to use with non-extensible objects.\nimport './fixPolyfills';\n\nimport { DocumentNode } from 'graphql';\n\nimport { Cache, ApolloCache, Transaction } from 'apollo-cache';\n\nimport { addTypenameToDocument, canUseWeakMap } from 'apollo-utilities';\n\nimport { wrap } from 'optimism';\n\nimport { invariant, InvariantError } from 'ts-invariant';\n\nimport { HeuristicFragmentMatcher } from './fragmentMatcher';\nimport {\n  ApolloReducerConfig,\n  NormalizedCache,\n  NormalizedCacheObject,\n} from './types';\n\nimport { StoreReader } from './readFromStore';\nimport { StoreWriter } from './writeToStore';\nimport { DepTrackingCache } from './depTrackingCache';\nimport { KeyTrie } from 'optimism';\nimport { ObjectCache } from './objectCache';\n\nexport interface InMemoryCacheConfig extends ApolloReducerConfig {\n  resultCaching?: boolean;\n  freezeResults?: boolean;\n}\n\nconst defaultConfig: InMemoryCacheConfig = {\n  fragmentMatcher: new HeuristicFragmentMatcher(),\n  dataIdFromObject: defaultDataIdFromObject,\n  addTypename: true,\n  resultCaching: true,\n  freezeResults: false,\n};\n\nexport function defaultDataIdFromObject(result: any): string | null {\n  if (result.__typename) {\n    if (result.id !== undefined) {\n      return `${result.__typename}:${result.id}`;\n    }\n    if (result._id !== undefined) {\n      return `${result.__typename}:${result._id}`;\n    }\n  }\n  return null;\n}\n\nconst hasOwn = Object.prototype.hasOwnProperty;\n\nexport class OptimisticCacheLayer extends ObjectCache {\n  constructor(\n    public readonly optimisticId: string,\n    // OptimisticCacheLayer objects always wrap some other parent cache, so\n    // this.parent should never be null.\n    public readonly parent: NormalizedCache,\n    public readonly transaction: Transaction<NormalizedCacheObject>,\n  ) {\n    super(Object.create(null));\n  }\n\n  public toObject(): NormalizedCacheObject {\n    return {\n      ...this.parent.toObject(),\n      ...this.data,\n    };\n  }\n\n  // All the other accessor methods of ObjectCache work without knowing about\n  // this.parent, but the get method needs to be overridden to implement the\n  // fallback this.parent.get(dataId) behavior.\n  public get(dataId: string) {\n    return hasOwn.call(this.data, dataId)\n      ? this.data[dataId]\n      : this.parent.get(dataId);\n  }\n}\n\nexport class InMemoryCache extends ApolloCache<NormalizedCacheObject> {\n  private data: NormalizedCache;\n  private optimisticData: NormalizedCache;\n\n  protected config: InMemoryCacheConfig;\n  private watches = new Set<Cache.WatchOptions>();\n  private addTypename: boolean;\n  private typenameDocumentCache = new Map<DocumentNode, DocumentNode>();\n  private storeReader: StoreReader;\n  private storeWriter: StoreWriter;\n  private cacheKeyRoot = new KeyTrie<object>(canUseWeakMap);\n\n  // Set this while in a transaction to prevent broadcasts...\n  // don't forget to turn it back on!\n  private silenceBroadcast: boolean = false;\n\n  constructor(config: InMemoryCacheConfig = {}) {\n    super();\n    this.config = { ...defaultConfig, ...config };\n\n    // backwards compat\n    if ((this.config as any).customResolvers) {\n      invariant.warn(\n        'customResolvers have been renamed to cacheRedirects. Please update your config as we will be deprecating customResolvers in the next major version.',\n      );\n      this.config.cacheRedirects = (this.config as any).customResolvers;\n    }\n\n    if ((this.config as any).cacheResolvers) {\n      invariant.warn(\n        'cacheResolvers have been renamed to cacheRedirects. Please update your config as we will be deprecating cacheResolvers in the next major version.',\n      );\n      this.config.cacheRedirects = (this.config as any).cacheResolvers;\n    }\n\n    this.addTypename = !!this.config.addTypename;\n\n    // Passing { resultCaching: false } in the InMemoryCache constructor options\n    // will completely disable dependency tracking, which will improve memory\n    // usage but worsen the performance of repeated reads.\n    this.data = this.config.resultCaching\n      ? new DepTrackingCache()\n      : new ObjectCache();\n\n    // When no optimistic writes are currently active, cache.optimisticData ===\n    // cache.data, so there are no additional layers on top of the actual data.\n    // When an optimistic update happens, this.optimisticData will become a\n    // linked list of OptimisticCacheLayer objects that terminates with the\n    // original this.data cache object.\n    this.optimisticData = this.data;\n\n    this.storeWriter = new StoreWriter();\n    this.storeReader = new StoreReader({\n      cacheKeyRoot: this.cacheKeyRoot,\n      freezeResults: config.freezeResults,\n    });\n\n    const cache = this;\n    const { maybeBroadcastWatch } = cache;\n    this.maybeBroadcastWatch = wrap((c: Cache.WatchOptions) => {\n      return maybeBroadcastWatch.call(this, c);\n    }, {\n      makeCacheKey(c: Cache.WatchOptions) {\n        if (c.optimistic) {\n          // If we're reading optimistic data, it doesn't matter if this.data\n          // is a DepTrackingCache, since it will be ignored.\n          return;\n        }\n\n        if (c.previousResult) {\n          // If a previousResult was provided, assume the caller would prefer\n          // to compare the previous data to the new data to determine whether\n          // to broadcast, so we should disable caching by returning here, to\n          // give maybeBroadcastWatch a chance to do that comparison.\n          return;\n        }\n\n        if (cache.data instanceof DepTrackingCache) {\n          // Return a cache key (thus enabling caching) only if we're currently\n          // using a data store that can track cache dependencies.\n          return cache.cacheKeyRoot.lookup(\n            c.query,\n            JSON.stringify(c.variables),\n          );\n        }\n      }\n    });\n  }\n\n  public restore(data: NormalizedCacheObject): this {\n    if (data) this.data.replace(data);\n    return this;\n  }\n\n  public extract(optimistic: boolean = false): NormalizedCacheObject {\n    return (optimistic ? this.optimisticData : this.data).toObject();\n  }\n\n  public read<T>(options: Cache.ReadOptions): T | null {\n    if (typeof options.rootId === 'string' &&\n        typeof this.data.get(options.rootId) === 'undefined') {\n      return null;\n    }\n\n    const { fragmentMatcher } = this.config;\n    const fragmentMatcherFunction = fragmentMatcher && fragmentMatcher.match;\n\n    return this.storeReader.readQueryFromStore({\n      store: options.optimistic ? this.optimisticData : this.data,\n      query: this.transformDocument(options.query),\n      variables: options.variables,\n      rootId: options.rootId,\n      fragmentMatcherFunction,\n      previousResult: options.previousResult,\n      config: this.config,\n    }) || null;\n  }\n\n  public write(write: Cache.WriteOptions): void {\n    const { fragmentMatcher } = this.config;\n    const fragmentMatcherFunction = fragmentMatcher && fragmentMatcher.match;\n\n    this.storeWriter.writeResultToStore({\n      dataId: write.dataId,\n      result: write.result,\n      variables: write.variables,\n      document: this.transformDocument(write.query),\n      store: this.data,\n      dataIdFromObject: this.config.dataIdFromObject,\n      fragmentMatcherFunction,\n    });\n\n    this.broadcastWatches();\n  }\n\n  public diff<T>(query: Cache.DiffOptions): Cache.DiffResult<T> {\n    const { fragmentMatcher } = this.config;\n    const fragmentMatcherFunction = fragmentMatcher && fragmentMatcher.match;\n\n    return this.storeReader.diffQueryAgainstStore({\n      store: query.optimistic ? this.optimisticData : this.data,\n      query: this.transformDocument(query.query),\n      variables: query.variables,\n      returnPartialData: query.returnPartialData,\n      previousResult: query.previousResult,\n      fragmentMatcherFunction,\n      config: this.config,\n    });\n  }\n\n  public watch(watch: Cache.WatchOptions): () => void {\n    this.watches.add(watch);\n\n    return () => {\n      this.watches.delete(watch);\n    };\n  }\n\n  public evict(query: Cache.EvictOptions): Cache.EvictionResult {\n    throw new InvariantError(`eviction is not implemented on InMemory Cache`);\n  }\n\n  public reset(): Promise<void> {\n    this.data.clear();\n    this.broadcastWatches();\n\n    return Promise.resolve();\n  }\n\n  public removeOptimistic(idToRemove: string) {\n    const toReapply: OptimisticCacheLayer[] = [];\n    let removedCount = 0;\n    let layer = this.optimisticData;\n\n    while (layer instanceof OptimisticCacheLayer) {\n      if (layer.optimisticId === idToRemove) {\n        ++removedCount;\n      } else {\n        toReapply.push(layer);\n      }\n      layer = layer.parent;\n    }\n\n    if (removedCount > 0) {\n      // Reset this.optimisticData to the first non-OptimisticCacheLayer object,\n      // which is almost certainly this.data.\n      this.optimisticData = layer;\n\n      // Reapply the layers whose optimistic IDs do not match the removed ID.\n      while (toReapply.length > 0) {\n        const layer = toReapply.pop()!;\n        this.performTransaction(layer.transaction, layer.optimisticId);\n      }\n\n      this.broadcastWatches();\n    }\n  }\n\n  public performTransaction(\n    transaction: Transaction<NormalizedCacheObject>,\n    // This parameter is not part of the performTransaction signature inherited\n    // from the ApolloCache abstract class, but it's useful because it saves us\n    // from duplicating this implementation in recordOptimisticTransaction.\n    optimisticId?: string,\n  ) {\n    const { data, silenceBroadcast } = this;\n    this.silenceBroadcast = true;\n\n    if (typeof optimisticId === 'string') {\n      // Add a new optimistic layer and temporarily make this.data refer to\n      // that layer for the duration of the transaction.\n      this.data = this.optimisticData = new OptimisticCacheLayer(\n        // Note that there can be multiple layers with the same optimisticId.\n        // When removeOptimistic(id) is called for that id, all matching layers\n        // will be removed, and the remaining layers will be reapplied.\n        optimisticId,\n        this.optimisticData,\n        transaction,\n      );\n    }\n\n    try {\n      transaction(this);\n    } finally {\n      this.silenceBroadcast = silenceBroadcast;\n      this.data = data;\n    }\n\n    // This broadcast does nothing if this.silenceBroadcast is true.\n    this.broadcastWatches();\n  }\n\n  public recordOptimisticTransaction(\n    transaction: Transaction<NormalizedCacheObject>,\n    id: string,\n  ) {\n    return this.performTransaction(transaction, id);\n  }\n\n  public transformDocument(document: DocumentNode): DocumentNode {\n    if (this.addTypename) {\n      let result = this.typenameDocumentCache.get(document);\n      if (!result) {\n        result = addTypenameToDocument(document);\n        this.typenameDocumentCache.set(document, result);\n        // If someone calls transformDocument and then mistakenly passes the\n        // result back into an API that also calls transformDocument, make sure\n        // we don't keep creating new query documents.\n        this.typenameDocumentCache.set(result, result);\n      }\n      return result;\n    }\n    return document;\n  }\n\n  protected broadcastWatches() {\n    if (!this.silenceBroadcast) {\n      this.watches.forEach(c => this.maybeBroadcastWatch(c));\n    }\n  }\n\n  // This method is wrapped in the constructor so that it will be called only\n  // if the data that would be broadcast has changed.\n  private maybeBroadcastWatch(c: Cache.WatchOptions) {\n    c.callback(\n      this.diff({\n        query: c.query,\n        variables: c.variables,\n        previousResult: c.previousResult && c.previousResult(),\n        optimistic: c.optimistic,\n      }),\n    );\n  }\n}\n","export default function _taggedTemplateLiteral(strings, raw) {\n  if (!raw) {\n    raw = strings.slice(0);\n  }\n\n  return Object.freeze(Object.defineProperties(strings, {\n    raw: {\n      value: Object.freeze(raw)\n    }\n  }));\n}","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.graphql = graphql;\n\nvar _parser = require('./language/parser');\n\nvar _validate = require('./validation/validate');\n\nvar _execute = require('./execution/execute');\n\n/**\n * This is the primary entry point function for fulfilling GraphQL operations\n * by parsing, validating, and executing a GraphQL document along side a\n * GraphQL schema.\n *\n * More sophisticated GraphQL servers, such as those which persist queries,\n * may wish to separate the validation and execution phases to a static time\n * tooling step, and a server runtime step.\n *\n * Accepts either an object with named arguments, or individual arguments:\n *\n * schema:\n *    The GraphQL type system to use when validating and executing a query.\n * source:\n *    A GraphQL language formatted string representing the requested operation.\n * rootValue:\n *    The value provided as the first argument to resolver functions on the top\n *    level type (e.g. the query object type).\n * variableValues:\n *    A mapping of variable name to runtime value to use for all variables\n *    defined in the requestString.\n * operationName:\n *    The name of the operation to use if requestString contains multiple\n *    possible operations. Can be omitted if requestString contains only\n *    one operation.\n * fieldResolver:\n *    A resolver function to use when one is not provided by the schema.\n *    If not provided, the default field resolver is used (which looks for a\n *    value or method on the source value with the field's name).\n */\n\n/* eslint-disable no-redeclare */\nfunction graphql(argsOrSchema, source, rootValue, contextValue, variableValues, operationName, fieldResolver) {\n  // Extract arguments from object args if provided.\n  var args = arguments.length === 1 ? argsOrSchema : undefined;\n  var schema = args ? args.schema : argsOrSchema;\n  return args ? graphqlImpl(schema, args.source, args.rootValue, args.contextValue, args.variableValues, args.operationName, args.fieldResolver) : graphqlImpl(schema, source, rootValue, contextValue, variableValues, operationName, fieldResolver);\n}\n/**\n *  Copyright (c) 2015, Facebook, Inc.\n *  All rights reserved.\n *\n *  This source code is licensed under the BSD-style license found in the\n *  LICENSE file in the root directory of this source tree. An additional grant\n *  of patent rights can be found in the PATENTS file in the same directory.\n */\n\nfunction graphqlImpl(schema, source, rootValue, contextValue, variableValues, operationName, fieldResolver) {\n  return new Promise(function (resolve) {\n    // Parse\n    var document = void 0;\n    try {\n      document = (0, _parser.parse)(source);\n    } catch (syntaxError) {\n      return resolve({ errors: [syntaxError] });\n    }\n\n    // Validate\n    var validationErrors = (0, _validate.validate)(schema, document);\n    if (validationErrors.length > 0) {\n      return resolve({ errors: validationErrors });\n    }\n\n    // Execute\n    resolve((0, _execute.execute)(schema, document, rootValue, contextValue, variableValues, operationName, fieldResolver));\n  });\n}","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.syntaxError = syntaxError;\n\nvar _location = require('../language/location');\n\nvar _GraphQLError = require('./GraphQLError');\n\n/**\n * Produces a GraphQLError representing a syntax error, containing useful\n * descriptive information about the syntax error's position in the source.\n */\n\n/**\n *  Copyright (c) 2015, Facebook, Inc.\n *  All rights reserved.\n *\n *  This source code is licensed under the BSD-style license found in the\n *  LICENSE file in the root directory of this source tree. An additional grant\n *  of patent rights can be found in the PATENTS file in the same directory.\n */\n\nfunction syntaxError(source, position, description) {\n  var location = (0, _location.getLocation)(source, position);\n  var line = location.line + source.locationOffset.line - 1;\n  var columnOffset = getColumnOffset(source, location);\n  var column = location.column + columnOffset;\n  var error = new _GraphQLError.GraphQLError('Syntax Error ' + source.name + ' (' + line + ':' + column + ') ' + description + '\\n\\n' + highlightSourceAtLocation(source, location), undefined, source, [position]);\n  return error;\n}\n\n/**\n * Render a helpful description of the location of the error in the GraphQL\n * Source document.\n */\nfunction highlightSourceAtLocation(source, location) {\n  var line = location.line;\n  var lineOffset = source.locationOffset.line - 1;\n  var columnOffset = getColumnOffset(source, location);\n  var contextLine = line + lineOffset;\n  var prevLineNum = (contextLine - 1).toString();\n  var lineNum = contextLine.toString();\n  var nextLineNum = (contextLine + 1).toString();\n  var padLen = nextLineNum.length;\n  var lines = source.body.split(/\\r\\n|[\\n\\r]/g);\n  lines[0] = whitespace(source.locationOffset.column - 1) + lines[0];\n  return (line >= 2 ? lpad(padLen, prevLineNum) + ': ' + lines[line - 2] + '\\n' : '') + lpad(padLen, lineNum) + ': ' + lines[line - 1] + '\\n' + whitespace(2 + padLen + location.column - 1 + columnOffset) + '^\\n' + (line < lines.length ? lpad(padLen, nextLineNum) + ': ' + lines[line] + '\\n' : '');\n}\n\nfunction getColumnOffset(source, location) {\n  return location.line === 1 ? source.locationOffset.column - 1 : 0;\n}\n\nfunction whitespace(len) {\n  return Array(len + 1).join(' ');\n}\n\nfunction lpad(len, str) {\n  return whitespace(len - str.length) + str;\n}","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.locatedError = locatedError;\n\nvar _GraphQLError = require('./GraphQLError');\n\n/**\n * Given an arbitrary Error, presumably thrown while attempting to execute a\n * GraphQL operation, produce a new GraphQLError aware of the location in the\n * document responsible for the original Error.\n */\nfunction locatedError(originalError, nodes, path) {\n  // Note: this uses a brand-check to support GraphQL errors originating from\n  // other contexts.\n  if (originalError && originalError.path) {\n    return originalError;\n  }\n\n  var message = originalError ? originalError.message || String(originalError) : 'An unknown error occurred.';\n  return new _GraphQLError.GraphQLError(message, originalError && originalError.nodes || nodes, originalError && originalError.source, originalError && originalError.positions, path, originalError);\n}\n/**\n *  Copyright (c) 2015, Facebook, Inc.\n *  All rights reserved.\n *\n *  This source code is licensed under the BSD-style license found in the\n *  LICENSE file in the root directory of this source tree. An additional grant\n *  of patent rights can be found in the PATENTS file in the same directory.\n */","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.formatError = formatError;\n\nvar _invariant = require('../jsutils/invariant');\n\nvar _invariant2 = _interopRequireDefault(_invariant);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Given a GraphQLError, format it according to the rules described by the\n * Response Format, Errors section of the GraphQL Specification.\n */\nfunction formatError(error) {\n  !error ? (0, _invariant2.default)(0, 'Received null or undefined error.') : void 0;\n  return {\n    message: error.message,\n    locations: error.locations,\n    path: error.path\n  };\n}\n/**\n *  Copyright (c) 2015, Facebook, Inc.\n *  All rights reserved.\n *\n *  This source code is licensed under the BSD-style license found in the\n *  LICENSE file in the root directory of this source tree. An additional grant\n *  of patent rights can be found in the PATENTS file in the same directory.\n */","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _schema = require('./schema');\n\nObject.defineProperty(exports, 'GraphQLSchema', {\n  enumerable: true,\n  get: function get() {\n    return _schema.GraphQLSchema;\n  }\n});\n\nvar _definition = require('./definition');\n\nObject.defineProperty(exports, 'isType', {\n  enumerable: true,\n  get: function get() {\n    return _definition.isType;\n  }\n});\nObject.defineProperty(exports, 'isInputType', {\n  enumerable: true,\n  get: function get() {\n    return _definition.isInputType;\n  }\n});\nObject.defineProperty(exports, 'isOutputType', {\n  enumerable: true,\n  get: function get() {\n    return _definition.isOutputType;\n  }\n});\nObject.defineProperty(exports, 'isLeafType', {\n  enumerable: true,\n  get: function get() {\n    return _definition.isLeafType;\n  }\n});\nObject.defineProperty(exports, 'isCompositeType', {\n  enumerable: true,\n  get: function get() {\n    return _definition.isCompositeType;\n  }\n});\nObject.defineProperty(exports, 'isAbstractType', {\n  enumerable: true,\n  get: function get() {\n    return _definition.isAbstractType;\n  }\n});\nObject.defineProperty(exports, 'isNamedType', {\n  enumerable: true,\n  get: function get() {\n    return _definition.isNamedType;\n  }\n});\nObject.defineProperty(exports, 'assertType', {\n  enumerable: true,\n  get: function get() {\n    return _definition.assertType;\n  }\n});\nObject.defineProperty(exports, 'assertInputType', {\n  enumerable: true,\n  get: function get() {\n    return _definition.assertInputType;\n  }\n});\nObject.defineProperty(exports, 'assertOutputType', {\n  enumerable: true,\n  get: function get() {\n    return _definition.assertOutputType;\n  }\n});\nObject.defineProperty(exports, 'assertLeafType', {\n  enumerable: true,\n  get: function get() {\n    return _definition.assertLeafType;\n  }\n});\nObject.defineProperty(exports, 'assertCompositeType', {\n  enumerable: true,\n  get: function get() {\n    return _definition.assertCompositeType;\n  }\n});\nObject.defineProperty(exports, 'assertAbstractType', {\n  enumerable: true,\n  get: function get() {\n    return _definition.assertAbstractType;\n  }\n});\nObject.defineProperty(exports, 'assertNamedType', {\n  enumerable: true,\n  get: function get() {\n    return _definition.assertNamedType;\n  }\n});\nObject.defineProperty(exports, 'getNullableType', {\n  enumerable: true,\n  get: function get() {\n    return _definition.getNullableType;\n  }\n});\nObject.defineProperty(exports, 'getNamedType', {\n  enumerable: true,\n  get: function get() {\n    return _definition.getNamedType;\n  }\n});\nObject.defineProperty(exports, 'GraphQLScalarType', {\n  enumerable: true,\n  get: function get() {\n    return _definition.GraphQLScalarType;\n  }\n});\nObject.defineProperty(exports, 'GraphQLObjectType', {\n  enumerable: true,\n  get: function get() {\n    return _definition.GraphQLObjectType;\n  }\n});\nObject.defineProperty(exports, 'GraphQLInterfaceType', {\n  enumerable: true,\n  get: function get() {\n    return _definition.GraphQLInterfaceType;\n  }\n});\nObject.defineProperty(exports, 'GraphQLUnionType', {\n  enumerable: true,\n  get: function get() {\n    return _definition.GraphQLUnionType;\n  }\n});\nObject.defineProperty(exports, 'GraphQLEnumType', {\n  enumerable: true,\n  get: function get() {\n    return _definition.GraphQLEnumType;\n  }\n});\nObject.defineProperty(exports, 'GraphQLInputObjectType', {\n  enumerable: true,\n  get: function get() {\n    return _definition.GraphQLInputObjectType;\n  }\n});\nObject.defineProperty(exports, 'GraphQLList', {\n  enumerable: true,\n  get: function get() {\n    return _definition.GraphQLList;\n  }\n});\nObject.defineProperty(exports, 'GraphQLNonNull', {\n  enumerable: true,\n  get: function get() {\n    return _definition.GraphQLNonNull;\n  }\n});\n\nvar _directives = require('./directives');\n\nObject.defineProperty(exports, 'DirectiveLocation', {\n  enumerable: true,\n  get: function get() {\n    return _directives.DirectiveLocation;\n  }\n});\nObject.defineProperty(exports, 'GraphQLDirective', {\n  enumerable: true,\n  get: function get() {\n    return _directives.GraphQLDirective;\n  }\n});\nObject.defineProperty(exports, 'specifiedDirectives', {\n  enumerable: true,\n  get: function get() {\n    return _directives.specifiedDirectives;\n  }\n});\nObject.defineProperty(exports, 'GraphQLIncludeDirective', {\n  enumerable: true,\n  get: function get() {\n    return _directives.GraphQLIncludeDirective;\n  }\n});\nObject.defineProperty(exports, 'GraphQLSkipDirective', {\n  enumerable: true,\n  get: function get() {\n    return _directives.GraphQLSkipDirective;\n  }\n});\nObject.defineProperty(exports, 'GraphQLDeprecatedDirective', {\n  enumerable: true,\n  get: function get() {\n    return _directives.GraphQLDeprecatedDirective;\n  }\n});\nObject.defineProperty(exports, 'DEFAULT_DEPRECATION_REASON', {\n  enumerable: true,\n  get: function get() {\n    return _directives.DEFAULT_DEPRECATION_REASON;\n  }\n});\n\nvar _scalars = require('./scalars');\n\nObject.defineProperty(exports, 'GraphQLInt', {\n  enumerable: true,\n  get: function get() {\n    return _scalars.GraphQLInt;\n  }\n});\nObject.defineProperty(exports, 'GraphQLFloat', {\n  enumerable: true,\n  get: function get() {\n    return _scalars.GraphQLFloat;\n  }\n});\nObject.defineProperty(exports, 'GraphQLString', {\n  enumerable: true,\n  get: function get() {\n    return _scalars.GraphQLString;\n  }\n});\nObject.defineProperty(exports, 'GraphQLBoolean', {\n  enumerable: true,\n  get: function get() {\n    return _scalars.GraphQLBoolean;\n  }\n});\nObject.defineProperty(exports, 'GraphQLID', {\n  enumerable: true,\n  get: function get() {\n    return _scalars.GraphQLID;\n  }\n});\n\nvar _introspection = require('./introspection');\n\nObject.defineProperty(exports, 'TypeKind', {\n  enumerable: true,\n  get: function get() {\n    return _introspection.TypeKind;\n  }\n});\nObject.defineProperty(exports, '__Schema', {\n  enumerable: true,\n  get: function get() {\n    return _introspection.__Schema;\n  }\n});\nObject.defineProperty(exports, '__Directive', {\n  enumerable: true,\n  get: function get() {\n    return _introspection.__Directive;\n  }\n});\nObject.defineProperty(exports, '__DirectiveLocation', {\n  enumerable: true,\n  get: function get() {\n    return _introspection.__DirectiveLocation;\n  }\n});\nObject.defineProperty(exports, '__Type', {\n  enumerable: true,\n  get: function get() {\n    return _introspection.__Type;\n  }\n});\nObject.defineProperty(exports, '__Field', {\n  enumerable: true,\n  get: function get() {\n    return _introspection.__Field;\n  }\n});\nObject.defineProperty(exports, '__InputValue', {\n  enumerable: true,\n  get: function get() {\n    return _introspection.__InputValue;\n  }\n});\nObject.defineProperty(exports, '__EnumValue', {\n  enumerable: true,\n  get: function get() {\n    return _introspection.__EnumValue;\n  }\n});\nObject.defineProperty(exports, '__TypeKind', {\n  enumerable: true,\n  get: function get() {\n    return _introspection.__TypeKind;\n  }\n});\nObject.defineProperty(exports, 'SchemaMetaFieldDef', {\n  enumerable: true,\n  get: function get() {\n    return _introspection.SchemaMetaFieldDef;\n  }\n});\nObject.defineProperty(exports, 'TypeMetaFieldDef', {\n  enumerable: true,\n  get: function get() {\n    return _introspection.TypeMetaFieldDef;\n  }\n});\nObject.defineProperty(exports, 'TypeNameMetaFieldDef', {\n  enumerable: true,\n  get: function get() {\n    return _introspection.TypeNameMetaFieldDef;\n  }\n});","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.BREAK = exports.getVisitFn = exports.visitWithTypeInfo = exports.visitInParallel = exports.visit = exports.Source = exports.print = exports.parseType = exports.parseValue = exports.parse = exports.TokenKind = exports.createLexer = exports.Kind = exports.getLocation = undefined;\n\nvar _location = require('./location');\n\nObject.defineProperty(exports, 'getLocation', {\n  enumerable: true,\n  get: function get() {\n    return _location.getLocation;\n  }\n});\n\nvar _lexer = require('./lexer');\n\nObject.defineProperty(exports, 'createLexer', {\n  enumerable: true,\n  get: function get() {\n    return _lexer.createLexer;\n  }\n});\nObject.defineProperty(exports, 'TokenKind', {\n  enumerable: true,\n  get: function get() {\n    return _lexer.TokenKind;\n  }\n});\n\nvar _parser = require('./parser');\n\nObject.defineProperty(exports, 'parse', {\n  enumerable: true,\n  get: function get() {\n    return _parser.parse;\n  }\n});\nObject.defineProperty(exports, 'parseValue', {\n  enumerable: true,\n  get: function get() {\n    return _parser.parseValue;\n  }\n});\nObject.defineProperty(exports, 'parseType', {\n  enumerable: true,\n  get: function get() {\n    return _parser.parseType;\n  }\n});\n\nvar _printer = require('./printer');\n\nObject.defineProperty(exports, 'print', {\n  enumerable: true,\n  get: function get() {\n    return _printer.print;\n  }\n});\n\nvar _source = require('./source');\n\nObject.defineProperty(exports, 'Source', {\n  enumerable: true,\n  get: function get() {\n    return _source.Source;\n  }\n});\n\nvar _visitor = require('./visitor');\n\nObject.defineProperty(exports, 'visit', {\n  enumerable: true,\n  get: function get() {\n    return _visitor.visit;\n  }\n});\nObject.defineProperty(exports, 'visitInParallel', {\n  enumerable: true,\n  get: function get() {\n    return _visitor.visitInParallel;\n  }\n});\nObject.defineProperty(exports, 'visitWithTypeInfo', {\n  enumerable: true,\n  get: function get() {\n    return _visitor.visitWithTypeInfo;\n  }\n});\nObject.defineProperty(exports, 'getVisitFn', {\n  enumerable: true,\n  get: function get() {\n    return _visitor.getVisitFn;\n  }\n});\nObject.defineProperty(exports, 'BREAK', {\n  enumerable: true,\n  get: function get() {\n    return _visitor.BREAK;\n  }\n});\n\nvar _kinds = require('./kinds');\n\nvar Kind = _interopRequireWildcard(_kinds);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nexports.Kind = Kind;","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _execute = require('./execute');\n\nObject.defineProperty(exports, 'execute', {\n  enumerable: true,\n  get: function get() {\n    return _execute.execute;\n  }\n});\nObject.defineProperty(exports, 'defaultFieldResolver', {\n  enumerable: true,\n  get: function get() {\n    return _execute.defaultFieldResolver;\n  }\n});\nObject.defineProperty(exports, 'responsePathAsArray', {\n  enumerable: true,\n  get: function get() {\n    return _execute.responsePathAsArray;\n  }\n});\n\nvar _values = require('./values');\n\nObject.defineProperty(exports, 'getDirectiveValues', {\n  enumerable: true,\n  get: function get() {\n    return _values.getDirectiveValues;\n  }\n});","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _subscribe = require('./subscribe');\n\nObject.defineProperty(exports, 'subscribe', {\n  enumerable: true,\n  get: function get() {\n    return _subscribe.subscribe;\n  }\n});\nObject.defineProperty(exports, 'createSourceEventStream', {\n  enumerable: true,\n  get: function get() {\n    return _subscribe.createSourceEventStream;\n  }\n});","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.subscribe = subscribe;\nexports.createSourceEventStream = createSourceEventStream;\n\nvar _iterall = require('iterall');\n\nvar _execute = require('../execution/execute');\n\nvar _schema = require('../type/schema');\n\nvar _invariant = require('../jsutils/invariant');\n\nvar _invariant2 = _interopRequireDefault(_invariant);\n\nvar _mapAsyncIterator = require('./mapAsyncIterator');\n\nvar _mapAsyncIterator2 = _interopRequireDefault(_mapAsyncIterator);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Implements the \"Subscribe\" algorithm described in the GraphQL specification.\n *\n * Returns an AsyncIterator\n *\n * If the arguments to this function do not result in a legal execution context,\n * a GraphQLError will be thrown immediately explaining the invalid input.\n *\n * Accepts either an object with named arguments, or individual arguments.\n */\n\n/* eslint-disable no-redeclare */\nfunction subscribe(argsOrSchema, document, rootValue, contextValue, variableValues, operationName, fieldResolver, subscribeFieldResolver) {\n  // Extract arguments from object args if provided.\n  var args = arguments.length === 1 ? argsOrSchema : undefined;\n  var schema = args ? args.schema : argsOrSchema;\n  return args ? subscribeImpl(schema, args.document, args.rootValue, args.contextValue, args.variableValues, args.operationName, args.fieldResolver, args.subscribeFieldResolver) : subscribeImpl(schema, document, rootValue, contextValue, variableValues, operationName, fieldResolver, subscribeFieldResolver);\n} /**\n   * Copyright (c) 2017, Facebook, Inc.\n   * All rights reserved.\n   *\n   * This source code is licensed under the BSD-style license found in the\n   * LICENSE file in the root directory of this source tree. An additional grant\n   * of patent rights can be found in the PATENTS file in the same directory.\n   *\n   * \n   */\n\nfunction subscribeImpl(schema, document, rootValue, contextValue, variableValues, operationName, fieldResolver, subscribeFieldResolver) {\n  var subscription = createSourceEventStream(schema, document, rootValue, contextValue, variableValues, operationName, subscribeFieldResolver);\n\n  // For each payload yielded from a subscription, map it over the normal\n  // GraphQL `execute` function, with `payload` as the rootValue.\n  // This implements the \"MapSourceToResponseEvent\" algorithm described in\n  // the GraphQL specification. The `execute` function provides the\n  // \"ExecuteSubscriptionEvent\" algorithm, as it is nearly identical to the\n  // \"ExecuteQuery\" algorithm, for which `execute` is also used.\n  return (0, _mapAsyncIterator2.default)(subscription, function (payload) {\n    return (0, _execute.execute)(schema, document, payload, contextValue, variableValues, operationName, fieldResolver);\n  });\n}\n\n/**\n * Implements the \"CreateSourceEventStream\" algorithm described in the\n * GraphQL specification, resolving the subscription source event stream.\n *\n * Returns an AsyncIterable, may through a GraphQLError.\n *\n * A Source Stream represents the sequence of events, each of which is\n * expected to be used to trigger a GraphQL execution for that event.\n *\n * This may be useful when hosting the stateful subscription service in a\n * different process or machine than the stateless GraphQL execution engine,\n * or otherwise separating these two steps. For more on this, see the\n * \"Supporting Subscriptions at Scale\" information in the GraphQL specification.\n */\nfunction createSourceEventStream(schema, document, rootValue, contextValue, variableValues, operationName, fieldResolver) {\n  // If arguments are missing or incorrect, throw an error.\n  (0, _execute.assertValidExecutionArguments)(schema, document, variableValues);\n\n  // If a valid context cannot be created due to incorrect arguments,\n  // this will throw an error.\n  var exeContext = (0, _execute.buildExecutionContext)(schema, document, rootValue, contextValue, variableValues, operationName, fieldResolver);\n\n  var type = (0, _execute.getOperationRootType)(schema, exeContext.operation);\n  var fields = (0, _execute.collectFields)(exeContext, type, exeContext.operation.selectionSet, Object.create(null), Object.create(null));\n  var responseNames = Object.keys(fields);\n  var responseName = responseNames[0];\n  var fieldNodes = fields[responseName];\n  var fieldNode = fieldNodes[0];\n  var fieldDef = (0, _execute.getFieldDef)(schema, type, fieldNode.name.value);\n  !fieldDef ? (0, _invariant2.default)(0, 'This subscription is not defined by the schema.') : void 0;\n\n  // Call the `subscribe()` resolver or the default resolver to produce an\n  // AsyncIterable yielding raw payloads.\n  var resolveFn = fieldDef.subscribe || exeContext.fieldResolver;\n\n  var info = (0, _execute.buildResolveInfo)(exeContext, fieldDef, fieldNodes, type, (0, _execute.addPath)(undefined, responseName));\n\n  // resolveFieldValueOrError implements the \"ResolveFieldEventStream\"\n  // algorithm from GraphQL specification. It differs from\n  // \"ResolveFieldValue\" due to providing a different `resolveFn`.\n  var subscription = (0, _execute.resolveFieldValueOrError)(exeContext, fieldDef, fieldNodes, resolveFn, rootValue, info);\n\n  if (subscription instanceof Error) {\n    throw subscription;\n  }\n\n  if (!(0, _iterall.isAsyncIterable)(subscription)) {\n    throw new Error('Subscription must return Async Iterable. ' + 'Received: ' + String(subscription));\n  }\n\n  return subscription;\n}","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = mapAsyncIterator;\n\nvar _iterall = require('iterall');\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; } /**\n                                                                                                                                                                                                                   * Copyright (c) 2017, Facebook, Inc.\n                                                                                                                                                                                                                   * All rights reserved.\n                                                                                                                                                                                                                   *\n                                                                                                                                                                                                                   * This source code is licensed under the BSD-style license found in the\n                                                                                                                                                                                                                   * LICENSE file in the root directory of this source tree. An additional grant\n                                                                                                                                                                                                                   * of patent rights can be found in the PATENTS file in the same directory.\n                                                                                                                                                                                                                   *\n                                                                                                                                                                                                                   * \n                                                                                                                                                                                                                   */\n\n/**\n * Given an AsyncIterable and a callback function, return an AsyncIterator\n * which produces values mapped via calling the callback function.\n */\nfunction mapAsyncIterator(iterable, callback) {\n  var iterator = (0, _iterall.getAsyncIterator)(iterable);\n  var $return = void 0;\n  var abruptClose = void 0;\n  if (typeof iterator.return === 'function') {\n    $return = iterator.return;\n    abruptClose = function abruptClose(error) {\n      var rethrow = function rethrow() {\n        return Promise.reject(error);\n      };\n      return $return.call(iterator).then(rethrow, rethrow);\n    };\n  }\n\n  function mapResult(result) {\n    return result.done ? result : asyncMapValue(result.value, callback).then(iteratorResult, abruptClose);\n  }\n\n  return _defineProperty({\n    next: function next() {\n      return iterator.next().then(mapResult);\n    },\n    return: function _return() {\n      return $return ? $return.call(iterator).then(mapResult) : Promise.resolve({ value: undefined, done: true });\n    },\n    throw: function _throw(error) {\n      if (typeof iterator.throw === 'function') {\n        return iterator.throw(error).then(mapResult);\n      }\n      return Promise.reject(error).catch(abruptClose);\n    }\n  }, _iterall.$$asyncIterator, function () {\n    return this;\n  });\n}\n\nfunction asyncMapValue(value, callback) {\n  return new Promise(function (resolve) {\n    return resolve(callback(value));\n  });\n}\n\nfunction iteratorResult(value) {\n  return { value: value, done: false };\n}","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _validate = require('./validate');\n\nObject.defineProperty(exports, 'validate', {\n  enumerable: true,\n  get: function get() {\n    return _validate.validate;\n  }\n});\nObject.defineProperty(exports, 'ValidationContext', {\n  enumerable: true,\n  get: function get() {\n    return _validate.ValidationContext;\n  }\n});\n\nvar _specifiedRules = require('./specifiedRules');\n\nObject.defineProperty(exports, 'specifiedRules', {\n  enumerable: true,\n  get: function get() {\n    return _specifiedRules.specifiedRules;\n  }\n});\n\nvar _ArgumentsOfCorrectType = require('./rules/ArgumentsOfCorrectType');\n\nObject.defineProperty(exports, 'ArgumentsOfCorrectTypeRule', {\n  enumerable: true,\n  get: function get() {\n    return _ArgumentsOfCorrectType.ArgumentsOfCorrectType;\n  }\n});\n\nvar _DefaultValuesOfCorrectType = require('./rules/DefaultValuesOfCorrectType');\n\nObject.defineProperty(exports, 'DefaultValuesOfCorrectTypeRule', {\n  enumerable: true,\n  get: function get() {\n    return _DefaultValuesOfCorrectType.DefaultValuesOfCorrectType;\n  }\n});\n\nvar _FieldsOnCorrectType = require('./rules/FieldsOnCorrectType');\n\nObject.defineProperty(exports, 'FieldsOnCorrectTypeRule', {\n  enumerable: true,\n  get: function get() {\n    return _FieldsOnCorrectType.FieldsOnCorrectType;\n  }\n});\n\nvar _FragmentsOnCompositeTypes = require('./rules/FragmentsOnCompositeTypes');\n\nObject.defineProperty(exports, 'FragmentsOnCompositeTypesRule', {\n  enumerable: true,\n  get: function get() {\n    return _FragmentsOnCompositeTypes.FragmentsOnCompositeTypes;\n  }\n});\n\nvar _KnownArgumentNames = require('./rules/KnownArgumentNames');\n\nObject.defineProperty(exports, 'KnownArgumentNamesRule', {\n  enumerable: true,\n  get: function get() {\n    return _KnownArgumentNames.KnownArgumentNames;\n  }\n});\n\nvar _KnownDirectives = require('./rules/KnownDirectives');\n\nObject.defineProperty(exports, 'KnownDirectivesRule', {\n  enumerable: true,\n  get: function get() {\n    return _KnownDirectives.KnownDirectives;\n  }\n});\n\nvar _KnownFragmentNames = require('./rules/KnownFragmentNames');\n\nObject.defineProperty(exports, 'KnownFragmentNamesRule', {\n  enumerable: true,\n  get: function get() {\n    return _KnownFragmentNames.KnownFragmentNames;\n  }\n});\n\nvar _KnownTypeNames = require('./rules/KnownTypeNames');\n\nObject.defineProperty(exports, 'KnownTypeNamesRule', {\n  enumerable: true,\n  get: function get() {\n    return _KnownTypeNames.KnownTypeNames;\n  }\n});\n\nvar _LoneAnonymousOperation = require('./rules/LoneAnonymousOperation');\n\nObject.defineProperty(exports, 'LoneAnonymousOperationRule', {\n  enumerable: true,\n  get: function get() {\n    return _LoneAnonymousOperation.LoneAnonymousOperation;\n  }\n});\n\nvar _NoFragmentCycles = require('./rules/NoFragmentCycles');\n\nObject.defineProperty(exports, 'NoFragmentCyclesRule', {\n  enumerable: true,\n  get: function get() {\n    return _NoFragmentCycles.NoFragmentCycles;\n  }\n});\n\nvar _NoUndefinedVariables = require('./rules/NoUndefinedVariables');\n\nObject.defineProperty(exports, 'NoUndefinedVariablesRule', {\n  enumerable: true,\n  get: function get() {\n    return _NoUndefinedVariables.NoUndefinedVariables;\n  }\n});\n\nvar _NoUnusedFragments = require('./rules/NoUnusedFragments');\n\nObject.defineProperty(exports, 'NoUnusedFragmentsRule', {\n  enumerable: true,\n  get: function get() {\n    return _NoUnusedFragments.NoUnusedFragments;\n  }\n});\n\nvar _NoUnusedVariables = require('./rules/NoUnusedVariables');\n\nObject.defineProperty(exports, 'NoUnusedVariablesRule', {\n  enumerable: true,\n  get: function get() {\n    return _NoUnusedVariables.NoUnusedVariables;\n  }\n});\n\nvar _OverlappingFieldsCanBeMerged = require('./rules/OverlappingFieldsCanBeMerged');\n\nObject.defineProperty(exports, 'OverlappingFieldsCanBeMergedRule', {\n  enumerable: true,\n  get: function get() {\n    return _OverlappingFieldsCanBeMerged.OverlappingFieldsCanBeMerged;\n  }\n});\n\nvar _PossibleFragmentSpreads = require('./rules/PossibleFragmentSpreads');\n\nObject.defineProperty(exports, 'PossibleFragmentSpreadsRule', {\n  enumerable: true,\n  get: function get() {\n    return _PossibleFragmentSpreads.PossibleFragmentSpreads;\n  }\n});\n\nvar _ProvidedNonNullArguments = require('./rules/ProvidedNonNullArguments');\n\nObject.defineProperty(exports, 'ProvidedNonNullArgumentsRule', {\n  enumerable: true,\n  get: function get() {\n    return _ProvidedNonNullArguments.ProvidedNonNullArguments;\n  }\n});\n\nvar _ScalarLeafs = require('./rules/ScalarLeafs');\n\nObject.defineProperty(exports, 'ScalarLeafsRule', {\n  enumerable: true,\n  get: function get() {\n    return _ScalarLeafs.ScalarLeafs;\n  }\n});\n\nvar _SingleFieldSubscriptions = require('./rules/SingleFieldSubscriptions');\n\nObject.defineProperty(exports, 'SingleFieldSubscriptionsRule', {\n  enumerable: true,\n  get: function get() {\n    return _SingleFieldSubscriptions.SingleFieldSubscriptions;\n  }\n});\n\nvar _UniqueArgumentNames = require('./rules/UniqueArgumentNames');\n\nObject.defineProperty(exports, 'UniqueArgumentNamesRule', {\n  enumerable: true,\n  get: function get() {\n    return _UniqueArgumentNames.UniqueArgumentNames;\n  }\n});\n\nvar _UniqueDirectivesPerLocation = require('./rules/UniqueDirectivesPerLocation');\n\nObject.defineProperty(exports, 'UniqueDirectivesPerLocationRule', {\n  enumerable: true,\n  get: function get() {\n    return _UniqueDirectivesPerLocation.UniqueDirectivesPerLocation;\n  }\n});\n\nvar _UniqueFragmentNames = require('./rules/UniqueFragmentNames');\n\nObject.defineProperty(exports, 'UniqueFragmentNamesRule', {\n  enumerable: true,\n  get: function get() {\n    return _UniqueFragmentNames.UniqueFragmentNames;\n  }\n});\n\nvar _UniqueInputFieldNames = require('./rules/UniqueInputFieldNames');\n\nObject.defineProperty(exports, 'UniqueInputFieldNamesRule', {\n  enumerable: true,\n  get: function get() {\n    return _UniqueInputFieldNames.UniqueInputFieldNames;\n  }\n});\n\nvar _UniqueOperationNames = require('./rules/UniqueOperationNames');\n\nObject.defineProperty(exports, 'UniqueOperationNamesRule', {\n  enumerable: true,\n  get: function get() {\n    return _UniqueOperationNames.UniqueOperationNames;\n  }\n});\n\nvar _UniqueVariableNames = require('./rules/UniqueVariableNames');\n\nObject.defineProperty(exports, 'UniqueVariableNamesRule', {\n  enumerable: true,\n  get: function get() {\n    return _UniqueVariableNames.UniqueVariableNames;\n  }\n});\n\nvar _VariablesAreInputTypes = require('./rules/VariablesAreInputTypes');\n\nObject.defineProperty(exports, 'VariablesAreInputTypesRule', {\n  enumerable: true,\n  get: function get() {\n    return _VariablesAreInputTypes.VariablesAreInputTypes;\n  }\n});\n\nvar _VariablesInAllowedPosition = require('./rules/VariablesInAllowedPosition');\n\nObject.defineProperty(exports, 'VariablesInAllowedPositionRule', {\n  enumerable: true,\n  get: function get() {\n    return _VariablesInAllowedPosition.VariablesInAllowedPosition;\n  }\n});","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _introspectionQuery = require('./introspectionQuery');\n\nObject.defineProperty(exports, 'introspectionQuery', {\n  enumerable: true,\n  get: function get() {\n    return _introspectionQuery.introspectionQuery;\n  }\n});\n\nvar _getOperationAST = require('./getOperationAST');\n\nObject.defineProperty(exports, 'getOperationAST', {\n  enumerable: true,\n  get: function get() {\n    return _getOperationAST.getOperationAST;\n  }\n});\n\nvar _buildClientSchema = require('./buildClientSchema');\n\nObject.defineProperty(exports, 'buildClientSchema', {\n  enumerable: true,\n  get: function get() {\n    return _buildClientSchema.buildClientSchema;\n  }\n});\n\nvar _buildASTSchema = require('./buildASTSchema');\n\nObject.defineProperty(exports, 'buildASTSchema', {\n  enumerable: true,\n  get: function get() {\n    return _buildASTSchema.buildASTSchema;\n  }\n});\nObject.defineProperty(exports, 'buildSchema', {\n  enumerable: true,\n  get: function get() {\n    return _buildASTSchema.buildSchema;\n  }\n});\n\nvar _extendSchema = require('./extendSchema');\n\nObject.defineProperty(exports, 'extendSchema', {\n  enumerable: true,\n  get: function get() {\n    return _extendSchema.extendSchema;\n  }\n});\n\nvar _schemaPrinter = require('./schemaPrinter');\n\nObject.defineProperty(exports, 'printSchema', {\n  enumerable: true,\n  get: function get() {\n    return _schemaPrinter.printSchema;\n  }\n});\nObject.defineProperty(exports, 'printType', {\n  enumerable: true,\n  get: function get() {\n    return _schemaPrinter.printType;\n  }\n});\nObject.defineProperty(exports, 'printIntrospectionSchema', {\n  enumerable: true,\n  get: function get() {\n    return _schemaPrinter.printIntrospectionSchema;\n  }\n});\n\nvar _typeFromAST = require('./typeFromAST');\n\nObject.defineProperty(exports, 'typeFromAST', {\n  enumerable: true,\n  get: function get() {\n    return _typeFromAST.typeFromAST;\n  }\n});\n\nvar _valueFromAST = require('./valueFromAST');\n\nObject.defineProperty(exports, 'valueFromAST', {\n  enumerable: true,\n  get: function get() {\n    return _valueFromAST.valueFromAST;\n  }\n});\n\nvar _astFromValue = require('./astFromValue');\n\nObject.defineProperty(exports, 'astFromValue', {\n  enumerable: true,\n  get: function get() {\n    return _astFromValue.astFromValue;\n  }\n});\n\nvar _TypeInfo = require('./TypeInfo');\n\nObject.defineProperty(exports, 'TypeInfo', {\n  enumerable: true,\n  get: function get() {\n    return _TypeInfo.TypeInfo;\n  }\n});\n\nvar _isValidJSValue = require('./isValidJSValue');\n\nObject.defineProperty(exports, 'isValidJSValue', {\n  enumerable: true,\n  get: function get() {\n    return _isValidJSValue.isValidJSValue;\n  }\n});\n\nvar _isValidLiteralValue = require('./isValidLiteralValue');\n\nObject.defineProperty(exports, 'isValidLiteralValue', {\n  enumerable: true,\n  get: function get() {\n    return _isValidLiteralValue.isValidLiteralValue;\n  }\n});\n\nvar _concatAST = require('./concatAST');\n\nObject.defineProperty(exports, 'concatAST', {\n  enumerable: true,\n  get: function get() {\n    return _concatAST.concatAST;\n  }\n});\n\nvar _separateOperations = require('./separateOperations');\n\nObject.defineProperty(exports, 'separateOperations', {\n  enumerable: true,\n  get: function get() {\n    return _separateOperations.separateOperations;\n  }\n});\n\nvar _typeComparators = require('./typeComparators');\n\nObject.defineProperty(exports, 'isEqualType', {\n  enumerable: true,\n  get: function get() {\n    return _typeComparators.isEqualType;\n  }\n});\nObject.defineProperty(exports, 'isTypeSubTypeOf', {\n  enumerable: true,\n  get: function get() {\n    return _typeComparators.isTypeSubTypeOf;\n  }\n});\nObject.defineProperty(exports, 'doTypesOverlap', {\n  enumerable: true,\n  get: function get() {\n    return _typeComparators.doTypesOverlap;\n  }\n});\n\nvar _assertValidName = require('./assertValidName');\n\nObject.defineProperty(exports, 'assertValidName', {\n  enumerable: true,\n  get: function get() {\n    return _assertValidName.assertValidName;\n  }\n});\n\nvar _findBreakingChanges = require('./findBreakingChanges');\n\nObject.defineProperty(exports, 'BreakingChangeType', {\n  enumerable: true,\n  get: function get() {\n    return _findBreakingChanges.BreakingChangeType;\n  }\n});\nObject.defineProperty(exports, 'DangerousChangeType', {\n  enumerable: true,\n  get: function get() {\n    return _findBreakingChanges.DangerousChangeType;\n  }\n});\nObject.defineProperty(exports, 'findBreakingChanges', {\n  enumerable: true,\n  get: function get() {\n    return _findBreakingChanges.findBreakingChanges;\n  }\n});\n\nvar _findDeprecatedUsages = require('./findDeprecatedUsages');\n\nObject.defineProperty(exports, 'findDeprecatedUsages', {\n  enumerable: true,\n  get: function get() {\n    return _findDeprecatedUsages.findDeprecatedUsages;\n  }\n});","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar introspectionQuery = exports.introspectionQuery = '\\n  query IntrospectionQuery {\\n    __schema {\\n      queryType { name }\\n      mutationType { name }\\n      subscriptionType { name }\\n      types {\\n        ...FullType\\n      }\\n      directives {\\n        name\\n        description\\n        locations\\n        args {\\n          ...InputValue\\n        }\\n      }\\n    }\\n  }\\n\\n  fragment FullType on __Type {\\n    kind\\n    name\\n    description\\n    fields(includeDeprecated: true) {\\n      name\\n      description\\n      args {\\n        ...InputValue\\n      }\\n      type {\\n        ...TypeRef\\n      }\\n      isDeprecated\\n      deprecationReason\\n    }\\n    inputFields {\\n      ...InputValue\\n    }\\n    interfaces {\\n      ...TypeRef\\n    }\\n    enumValues(includeDeprecated: true) {\\n      name\\n      description\\n      isDeprecated\\n      deprecationReason\\n    }\\n    possibleTypes {\\n      ...TypeRef\\n    }\\n  }\\n\\n  fragment InputValue on __InputValue {\\n    name\\n    description\\n    type { ...TypeRef }\\n    defaultValue\\n  }\\n\\n  fragment TypeRef on __Type {\\n    kind\\n    name\\n    ofType {\\n      kind\\n      name\\n      ofType {\\n        kind\\n        name\\n        ofType {\\n          kind\\n          name\\n          ofType {\\n            kind\\n            name\\n            ofType {\\n              kind\\n              name\\n              ofType {\\n                kind\\n                name\\n                ofType {\\n                  kind\\n                  name\\n                }\\n              }\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n';\n/**\n *  Copyright (c) 2015, Facebook, Inc.\n *  All rights reserved.\n *\n *  This source code is licensed under the BSD-style license found in the\n *  LICENSE file in the root directory of this source tree. An additional grant\n *  of patent rights can be found in the PATENTS file in the same directory.\n */","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getOperationAST = getOperationAST;\n\nvar _kinds = require('../language/kinds');\n\n/**\n * Returns an operation AST given a document AST and optionally an operation\n * name. If a name is not provided, an operation is only returned if only one is\n * provided in the document.\n */\nfunction getOperationAST(documentAST, operationName) {\n  var operation = null;\n  for (var i = 0; i < documentAST.definitions.length; i++) {\n    var definition = documentAST.definitions[i];\n    if (definition.kind === _kinds.OPERATION_DEFINITION) {\n      if (!operationName) {\n        // If no operation name was provided, only return an Operation if there\n        // is one defined in the document. Upon encountering the second, return\n        // null.\n        if (operation) {\n          return null;\n        }\n        operation = definition;\n      } else if (definition.name && definition.name.value === operationName) {\n        return definition;\n      }\n    }\n  }\n  return operation;\n}\n/**\n *  Copyright (c) 2015, Facebook, Inc.\n *  All rights reserved.\n *\n *  This source code is licensed under the BSD-style license found in the\n *  LICENSE file in the root directory of this source tree. An additional grant\n *  of patent rights can be found in the PATENTS file in the same directory.\n */","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.buildClientSchema = buildClientSchema;\n\nvar _invariant = require('../jsutils/invariant');\n\nvar _invariant2 = _interopRequireDefault(_invariant);\n\nvar _keyMap = require('../jsutils/keyMap');\n\nvar _keyMap2 = _interopRequireDefault(_keyMap);\n\nvar _keyValMap = require('../jsutils/keyValMap');\n\nvar _keyValMap2 = _interopRequireDefault(_keyValMap);\n\nvar _valueFromAST = require('./valueFromAST');\n\nvar _parser = require('../language/parser');\n\nvar _schema = require('../type/schema');\n\nvar _definition = require('../type/definition');\n\nvar _introspection = require('../type/introspection');\n\nvar _scalars = require('../type/scalars');\n\nvar _directives = require('../type/directives');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Build a GraphQLSchema for use by client tools.\n *\n * Given the result of a client running the introspection query, creates and\n * returns a GraphQLSchema instance which can be then used with all graphql-js\n * tools, but cannot be used to execute a query, as introspection does not\n * represent the \"resolver\", \"parse\" or \"serialize\" functions or any other\n * server-internal mechanisms.\n */\nfunction buildClientSchema(introspection) {\n\n  // Get the schema from the introspection result.\n  var schemaIntrospection = introspection.__schema;\n\n  // Converts the list of types into a keyMap based on the type names.\n  var typeIntrospectionMap = (0, _keyMap2.default)(schemaIntrospection.types, function (type) {\n    return type.name;\n  });\n\n  // A cache to use to store the actual GraphQLType definition objects by name.\n  // Initialize to the GraphQL built in scalars. All functions below are inline\n  // so that this type def cache is within the scope of the closure.\n  var typeDefCache = {\n    String: _scalars.GraphQLString,\n    Int: _scalars.GraphQLInt,\n    Float: _scalars.GraphQLFloat,\n    Boolean: _scalars.GraphQLBoolean,\n    ID: _scalars.GraphQLID,\n    __Schema: _introspection.__Schema,\n    __Directive: _introspection.__Directive,\n    __DirectiveLocation: _introspection.__DirectiveLocation,\n    __Type: _introspection.__Type,\n    __Field: _introspection.__Field,\n    __InputValue: _introspection.__InputValue,\n    __EnumValue: _introspection.__EnumValue,\n    __TypeKind: _introspection.__TypeKind\n  };\n\n  // Given a type reference in introspection, return the GraphQLType instance.\n  // preferring cached instances before building new instances.\n  function getType(typeRef) {\n    if (typeRef.kind === _introspection.TypeKind.LIST) {\n      var itemRef = typeRef.ofType;\n      if (!itemRef) {\n        throw new Error('Decorated type deeper than introspection query.');\n      }\n      return new _definition.GraphQLList(getType(itemRef));\n    }\n    if (typeRef.kind === _introspection.TypeKind.NON_NULL) {\n      var nullableRef = typeRef.ofType;\n      if (!nullableRef) {\n        throw new Error('Decorated type deeper than introspection query.');\n      }\n      var nullableType = getType(nullableRef);\n      !!(nullableType instanceof _definition.GraphQLNonNull) ? (0, _invariant2.default)(0, 'No nesting nonnull.') : void 0;\n      return new _definition.GraphQLNonNull(nullableType);\n    }\n    return getNamedType(typeRef.name);\n  }\n\n  function getNamedType(typeName) {\n    if (typeDefCache[typeName]) {\n      return typeDefCache[typeName];\n    }\n    var typeIntrospection = typeIntrospectionMap[typeName];\n    if (!typeIntrospection) {\n      throw new Error('Invalid or incomplete schema, unknown type: ' + typeName + '. Ensure ' + 'that a full introspection query is used in order to build a ' + 'client schema.');\n    }\n    var typeDef = buildType(typeIntrospection);\n    typeDefCache[typeName] = typeDef;\n    return typeDef;\n  }\n\n  function getInputType(typeRef) {\n    var type = getType(typeRef);\n    !(0, _definition.isInputType)(type) ? (0, _invariant2.default)(0, 'Introspection must provide input type for arguments.') : void 0;\n    return type;\n  }\n\n  function getOutputType(typeRef) {\n    var type = getType(typeRef);\n    !(0, _definition.isOutputType)(type) ? (0, _invariant2.default)(0, 'Introspection must provide output type for fields.') : void 0;\n    return type;\n  }\n\n  function getObjectType(typeRef) {\n    var type = getType(typeRef);\n    !(type instanceof _definition.GraphQLObjectType) ? (0, _invariant2.default)(0, 'Introspection must provide object type for possibleTypes.') : void 0;\n    return type;\n  }\n\n  function getInterfaceType(typeRef) {\n    var type = getType(typeRef);\n    !(type instanceof _definition.GraphQLInterfaceType) ? (0, _invariant2.default)(0, 'Introspection must provide interface type for interfaces.') : void 0;\n    return type;\n  }\n\n  // Given a type's introspection result, construct the correct\n  // GraphQLType instance.\n  function buildType(type) {\n    switch (type.kind) {\n      case _introspection.TypeKind.SCALAR:\n        return buildScalarDef(type);\n      case _introspection.TypeKind.OBJECT:\n        return buildObjectDef(type);\n      case _introspection.TypeKind.INTERFACE:\n        return buildInterfaceDef(type);\n      case _introspection.TypeKind.UNION:\n        return buildUnionDef(type);\n      case _introspection.TypeKind.ENUM:\n        return buildEnumDef(type);\n      case _introspection.TypeKind.INPUT_OBJECT:\n        return buildInputObjectDef(type);\n      default:\n        throw new Error('Invalid or incomplete schema, unknown kind: ' + type.kind + '. Ensure ' + 'that a full introspection query is used in order to build a ' + 'client schema.');\n    }\n  }\n\n  function buildScalarDef(scalarIntrospection) {\n    return new _definition.GraphQLScalarType({\n      name: scalarIntrospection.name,\n      description: scalarIntrospection.description,\n      serialize: function serialize(id) {\n        return id;\n      },\n      // Note: validation calls the parse functions to determine if a\n      // literal value is correct. Returning null would cause use of custom\n      // scalars to always fail validation. Returning false causes them to\n      // always pass validation.\n      parseValue: function parseValue() {\n        return false;\n      },\n      parseLiteral: function parseLiteral() {\n        return false;\n      }\n    });\n  }\n\n  function buildObjectDef(objectIntrospection) {\n    return new _definition.GraphQLObjectType({\n      name: objectIntrospection.name,\n      description: objectIntrospection.description,\n      interfaces: objectIntrospection.interfaces.map(getInterfaceType),\n      fields: function fields() {\n        return buildFieldDefMap(objectIntrospection);\n      }\n    });\n  }\n\n  function buildInterfaceDef(interfaceIntrospection) {\n    return new _definition.GraphQLInterfaceType({\n      name: interfaceIntrospection.name,\n      description: interfaceIntrospection.description,\n      fields: function fields() {\n        return buildFieldDefMap(interfaceIntrospection);\n      },\n      resolveType: cannotExecuteClientSchema\n    });\n  }\n\n  function buildUnionDef(unionIntrospection) {\n    return new _definition.GraphQLUnionType({\n      name: unionIntrospection.name,\n      description: unionIntrospection.description,\n      types: unionIntrospection.possibleTypes.map(getObjectType),\n      resolveType: cannotExecuteClientSchema\n    });\n  }\n\n  function buildEnumDef(enumIntrospection) {\n    return new _definition.GraphQLEnumType({\n      name: enumIntrospection.name,\n      description: enumIntrospection.description,\n      values: (0, _keyValMap2.default)(enumIntrospection.enumValues, function (valueIntrospection) {\n        return valueIntrospection.name;\n      }, function (valueIntrospection) {\n        return {\n          description: valueIntrospection.description,\n          deprecationReason: valueIntrospection.deprecationReason\n        };\n      })\n    });\n  }\n\n  function buildInputObjectDef(inputObjectIntrospection) {\n    return new _definition.GraphQLInputObjectType({\n      name: inputObjectIntrospection.name,\n      description: inputObjectIntrospection.description,\n      fields: function fields() {\n        return buildInputValueDefMap(inputObjectIntrospection.inputFields);\n      }\n    });\n  }\n\n  function buildFieldDefMap(typeIntrospection) {\n    return (0, _keyValMap2.default)(typeIntrospection.fields, function (fieldIntrospection) {\n      return fieldIntrospection.name;\n    }, function (fieldIntrospection) {\n      return {\n        description: fieldIntrospection.description,\n        deprecationReason: fieldIntrospection.deprecationReason,\n        type: getOutputType(fieldIntrospection.type),\n        args: buildInputValueDefMap(fieldIntrospection.args)\n      };\n    });\n  }\n\n  function buildInputValueDefMap(inputValueIntrospections) {\n    return (0, _keyValMap2.default)(inputValueIntrospections, function (inputValue) {\n      return inputValue.name;\n    }, buildInputValue);\n  }\n\n  function buildInputValue(inputValueIntrospection) {\n    var type = getInputType(inputValueIntrospection.type);\n    var defaultValue = inputValueIntrospection.defaultValue ? (0, _valueFromAST.valueFromAST)((0, _parser.parseValue)(inputValueIntrospection.defaultValue), type) : undefined;\n    return {\n      name: inputValueIntrospection.name,\n      description: inputValueIntrospection.description,\n      type: type,\n      defaultValue: defaultValue\n    };\n  }\n\n  function buildDirective(directiveIntrospection) {\n    // Support deprecated `on****` fields for building `locations`, as this\n    // is used by GraphiQL which may need to support outdated servers.\n    var locations = directiveIntrospection.locations ? directiveIntrospection.locations.slice() : [].concat(!directiveIntrospection.onField ? [] : [_directives.DirectiveLocation.FIELD], !directiveIntrospection.onOperation ? [] : [_directives.DirectiveLocation.QUERY, _directives.DirectiveLocation.MUTATION, _directives.DirectiveLocation.SUBSCRIPTION], !directiveIntrospection.onFragment ? [] : [_directives.DirectiveLocation.FRAGMENT_DEFINITION, _directives.DirectiveLocation.FRAGMENT_SPREAD, _directives.DirectiveLocation.INLINE_FRAGMENT]);\n    return new _directives.GraphQLDirective({\n      name: directiveIntrospection.name,\n      description: directiveIntrospection.description,\n      locations: locations,\n      args: buildInputValueDefMap(directiveIntrospection.args)\n    });\n  }\n\n  // Iterate through all types, getting the type definition for each, ensuring\n  // that any type not directly referenced by a field will get created.\n  var types = schemaIntrospection.types.map(function (typeIntrospection) {\n    return getNamedType(typeIntrospection.name);\n  });\n\n  // Get the root Query, Mutation, and Subscription types.\n  var queryType = getObjectType(schemaIntrospection.queryType);\n\n  var mutationType = schemaIntrospection.mutationType ? getObjectType(schemaIntrospection.mutationType) : null;\n\n  var subscriptionType = schemaIntrospection.subscriptionType ? getObjectType(schemaIntrospection.subscriptionType) : null;\n\n  // Get the directives supported by Introspection, assuming empty-set if\n  // directives were not queried for.\n  var directives = schemaIntrospection.directives ? schemaIntrospection.directives.map(buildDirective) : [];\n\n  // Then produce and return a Schema with these types.\n  return new _schema.GraphQLSchema({\n    query: queryType,\n    mutation: mutationType,\n    subscription: subscriptionType,\n    types: types,\n    directives: directives\n  });\n}\n/**\n *  Copyright (c) 2015, Facebook, Inc.\n *  All rights reserved.\n *\n *  This source code is licensed under the BSD-style license found in the\n *  LICENSE file in the root directory of this source tree. An additional grant\n *  of patent rights can be found in the PATENTS file in the same directory.\n */\n\nfunction cannotExecuteClientSchema() {\n  throw new Error('Client Schema cannot use Interface or Union types for execution.');\n}","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.extendSchema = extendSchema;\n\nvar _invariant = require('../jsutils/invariant');\n\nvar _invariant2 = _interopRequireDefault(_invariant);\n\nvar _keyMap = require('../jsutils/keyMap');\n\nvar _keyMap2 = _interopRequireDefault(_keyMap);\n\nvar _keyValMap = require('../jsutils/keyValMap');\n\nvar _keyValMap2 = _interopRequireDefault(_keyValMap);\n\nvar _buildASTSchema = require('./buildASTSchema');\n\nvar _valueFromAST = require('./valueFromAST');\n\nvar _GraphQLError = require('../error/GraphQLError');\n\nvar _schema = require('../type/schema');\n\nvar _definition = require('../type/definition');\n\nvar _directives = require('../type/directives');\n\nvar _introspection = require('../type/introspection');\n\nvar _scalars = require('../type/scalars');\n\nvar _kinds = require('../language/kinds');\n\nvar Kind = _interopRequireWildcard(_kinds);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Produces a new schema given an existing schema and a document which may\n * contain GraphQL type extensions and definitions. The original schema will\n * remain unaltered.\n *\n * Because a schema represents a graph of references, a schema cannot be\n * extended without effectively making an entire copy. We do not know until it's\n * too late if subgraphs remain unchanged.\n *\n * This algorithm copies the provided schema, applying extensions while\n * producing the copy. The original schema remains unaltered.\n */\n\n/**\n *  Copyright (c) 2015, Facebook, Inc.\n *  All rights reserved.\n *\n *  This source code is licensed under the BSD-style license found in the\n *  LICENSE file in the root directory of this source tree. An additional grant\n *  of patent rights can be found in the PATENTS file in the same directory.\n */\n\nfunction extendSchema(schema, documentAST) {\n  !(schema instanceof _schema.GraphQLSchema) ? (0, _invariant2.default)(0, 'Must provide valid GraphQLSchema') : void 0;\n\n  !(documentAST && documentAST.kind === Kind.DOCUMENT) ? (0, _invariant2.default)(0, 'Must provide valid Document AST') : void 0;\n\n  // Collect the type definitions and extensions found in the document.\n  var typeDefinitionMap = Object.create(null);\n  var typeExtensionsMap = Object.create(null);\n\n  // New directives and types are separate because a directives and types can\n  // have the same name. For example, a type named \"skip\".\n  var directiveDefinitions = [];\n\n  for (var i = 0; i < documentAST.definitions.length; i++) {\n    var def = documentAST.definitions[i];\n    switch (def.kind) {\n      case Kind.OBJECT_TYPE_DEFINITION:\n      case Kind.INTERFACE_TYPE_DEFINITION:\n      case Kind.ENUM_TYPE_DEFINITION:\n      case Kind.UNION_TYPE_DEFINITION:\n      case Kind.SCALAR_TYPE_DEFINITION:\n      case Kind.INPUT_OBJECT_TYPE_DEFINITION:\n        // Sanity check that none of the defined types conflict with the\n        // schema's existing types.\n        var typeName = def.name.value;\n        if (schema.getType(typeName)) {\n          throw new _GraphQLError.GraphQLError('Type \"' + typeName + '\" already exists in the schema. It cannot also ' + 'be defined in this type definition.', [def]);\n        }\n        typeDefinitionMap[typeName] = def;\n        break;\n      case Kind.TYPE_EXTENSION_DEFINITION:\n        // Sanity check that this type extension exists within the\n        // schema's existing types.\n        var extendedTypeName = def.definition.name.value;\n        var existingType = schema.getType(extendedTypeName);\n        if (!existingType) {\n          throw new _GraphQLError.GraphQLError('Cannot extend type \"' + extendedTypeName + '\" because it does not ' + 'exist in the existing schema.', [def.definition]);\n        }\n        if (!(existingType instanceof _definition.GraphQLObjectType)) {\n          throw new _GraphQLError.GraphQLError('Cannot extend non-object type \"' + extendedTypeName + '\".', [def.definition]);\n        }\n        var extensions = typeExtensionsMap[extendedTypeName];\n        if (extensions) {\n          extensions.push(def);\n        } else {\n          extensions = [def];\n        }\n        typeExtensionsMap[extendedTypeName] = extensions;\n        break;\n      case Kind.DIRECTIVE_DEFINITION:\n        var directiveName = def.name.value;\n        var existingDirective = schema.getDirective(directiveName);\n        if (existingDirective) {\n          throw new _GraphQLError.GraphQLError('Directive \"' + directiveName + '\" already exists in the schema. It ' + 'cannot be redefined.', [def]);\n        }\n        directiveDefinitions.push(def);\n        break;\n    }\n  }\n\n  // If this document contains no new types, extensions, or directives then\n  // return the same unmodified GraphQLSchema instance.\n  if (Object.keys(typeExtensionsMap).length === 0 && Object.keys(typeDefinitionMap).length === 0 && directiveDefinitions.length === 0) {\n    return schema;\n  }\n\n  // A cache to use to store the actual GraphQLType definition objects by name.\n  // Initialize to the GraphQL built in scalars and introspection types. All\n  // functions below are inline so that this type def cache is within the scope\n  // of the closure.\n  var typeDefCache = {\n    String: _scalars.GraphQLString,\n    Int: _scalars.GraphQLInt,\n    Float: _scalars.GraphQLFloat,\n    Boolean: _scalars.GraphQLBoolean,\n    ID: _scalars.GraphQLID,\n    __Schema: _introspection.__Schema,\n    __Directive: _introspection.__Directive,\n    __DirectiveLocation: _introspection.__DirectiveLocation,\n    __Type: _introspection.__Type,\n    __Field: _introspection.__Field,\n    __InputValue: _introspection.__InputValue,\n    __EnumValue: _introspection.__EnumValue,\n    __TypeKind: _introspection.__TypeKind\n  };\n\n  // Get the root Query, Mutation, and Subscription object types.\n  var queryType = getTypeFromDef(schema.getQueryType());\n\n  var existingMutationType = schema.getMutationType();\n  var mutationType = existingMutationType ? getTypeFromDef(existingMutationType) : null;\n\n  var existingSubscriptionType = schema.getSubscriptionType();\n  var subscriptionType = existingSubscriptionType ? getTypeFromDef(existingSubscriptionType) : null;\n\n  // Iterate through all types, getting the type definition for each, ensuring\n  // that any type not directly referenced by a field will get created.\n  var typeMap = schema.getTypeMap();\n  var types = Object.keys(typeMap).map(function (typeName) {\n    return getTypeFromDef(typeMap[typeName]);\n  });\n\n  // Do the same with new types, appending to the list of defined types.\n  Object.keys(typeDefinitionMap).forEach(function (typeName) {\n    types.push(getTypeFromAST(typeDefinitionMap[typeName]));\n  });\n\n  // Then produce and return a Schema with these types.\n  return new _schema.GraphQLSchema({\n    query: queryType,\n    mutation: mutationType,\n    subscription: subscriptionType,\n    types: types,\n    directives: getMergedDirectives(),\n    astNode: schema.astNode\n  });\n\n  // Below are functions used for producing this schema that have closed over\n  // this scope and have access to the schema, cache, and newly defined types.\n\n  function getMergedDirectives() {\n    var existingDirectives = schema.getDirectives();\n    !existingDirectives ? (0, _invariant2.default)(0, 'schema must have default directives') : void 0;\n\n    var newDirectives = directiveDefinitions.map(function (directiveNode) {\n      return getDirective(directiveNode);\n    });\n    return existingDirectives.concat(newDirectives);\n  }\n\n  function getTypeFromDef(typeDef) {\n    var type = _getNamedType(typeDef.name);\n    !type ? (0, _invariant2.default)(0, 'Missing type from schema') : void 0;\n    return type;\n  }\n\n  function getTypeFromAST(node) {\n    var type = _getNamedType(node.name.value);\n    if (!type) {\n      throw new _GraphQLError.GraphQLError('Unknown type: \"' + node.name.value + '\". Ensure that this type exists ' + 'either in the original schema, or is added in a type definition.', [node]);\n    }\n    return type;\n  }\n\n  function getObjectTypeFromAST(node) {\n    var type = getTypeFromAST(node);\n    !(type instanceof _definition.GraphQLObjectType) ? (0, _invariant2.default)(0, 'Must be Object type.') : void 0;\n    return type;\n  }\n\n  function getInterfaceTypeFromAST(node) {\n    var type = getTypeFromAST(node);\n    !(type instanceof _definition.GraphQLInterfaceType) ? (0, _invariant2.default)(0, 'Must be Interface type.') : void 0;\n    return type;\n  }\n\n  function getInputTypeFromAST(node) {\n    return (0, _definition.assertInputType)(getTypeFromAST(node));\n  }\n\n  function getOutputTypeFromAST(node) {\n    return (0, _definition.assertOutputType)(getTypeFromAST(node));\n  }\n\n  // Given a name, returns a type from either the existing schema or an\n  // added type.\n  function _getNamedType(typeName) {\n    var cachedTypeDef = typeDefCache[typeName];\n    if (cachedTypeDef) {\n      return cachedTypeDef;\n    }\n\n    var existingType = schema.getType(typeName);\n    if (existingType) {\n      var typeDef = extendType(existingType);\n      typeDefCache[typeName] = typeDef;\n      return typeDef;\n    }\n\n    var typeNode = typeDefinitionMap[typeName];\n    if (typeNode) {\n      var _typeDef = buildType(typeNode);\n      typeDefCache[typeName] = _typeDef;\n      return _typeDef;\n    }\n  }\n\n  // Given a type's introspection result, construct the correct\n  // GraphQLType instance.\n  function extendType(type) {\n    if (type instanceof _definition.GraphQLObjectType) {\n      return extendObjectType(type);\n    }\n    if (type instanceof _definition.GraphQLInterfaceType) {\n      return extendInterfaceType(type);\n    }\n    if (type instanceof _definition.GraphQLUnionType) {\n      return extendUnionType(type);\n    }\n    return type;\n  }\n\n  function extendObjectType(type) {\n    var name = type.name;\n    var extensionASTNodes = type.extensionASTNodes;\n    if (typeExtensionsMap[name]) {\n      extensionASTNodes = extensionASTNodes.concat(typeExtensionsMap[name]);\n    }\n\n    return new _definition.GraphQLObjectType({\n      name: name,\n      description: type.description,\n      interfaces: function interfaces() {\n        return extendImplementedInterfaces(type);\n      },\n      fields: function fields() {\n        return extendFieldMap(type);\n      },\n      astNode: type.astNode,\n      extensionASTNodes: extensionASTNodes,\n      isTypeOf: type.isTypeOf\n    });\n  }\n\n  function extendInterfaceType(type) {\n    return new _definition.GraphQLInterfaceType({\n      name: type.name,\n      description: type.description,\n      fields: function fields() {\n        return extendFieldMap(type);\n      },\n      astNode: type.astNode,\n      resolveType: type.resolveType\n    });\n  }\n\n  function extendUnionType(type) {\n    return new _definition.GraphQLUnionType({\n      name: type.name,\n      description: type.description,\n      types: type.getTypes().map(getTypeFromDef),\n      astNode: type.astNode,\n      resolveType: type.resolveType\n    });\n  }\n\n  function extendImplementedInterfaces(type) {\n    var interfaces = type.getInterfaces().map(getTypeFromDef);\n\n    // If there are any extensions to the interfaces, apply those here.\n    var extensions = typeExtensionsMap[type.name];\n    if (extensions) {\n      extensions.forEach(function (extension) {\n        extension.definition.interfaces.forEach(function (namedType) {\n          var interfaceName = namedType.name.value;\n          if (interfaces.some(function (def) {\n            return def.name === interfaceName;\n          })) {\n            throw new _GraphQLError.GraphQLError('Type \"' + type.name + '\" already implements \"' + interfaceName + '\". ' + 'It cannot also be implemented in this type extension.', [namedType]);\n          }\n          interfaces.push(getInterfaceTypeFromAST(namedType));\n        });\n      });\n    }\n\n    return interfaces;\n  }\n\n  function extendFieldMap(type) {\n    var newFieldMap = Object.create(null);\n    var oldFieldMap = type.getFields();\n    Object.keys(oldFieldMap).forEach(function (fieldName) {\n      var field = oldFieldMap[fieldName];\n      newFieldMap[fieldName] = {\n        description: field.description,\n        deprecationReason: field.deprecationReason,\n        type: extendFieldType(field.type),\n        args: (0, _keyMap2.default)(field.args, function (arg) {\n          return arg.name;\n        }),\n        astNode: field.astNode,\n        resolve: field.resolve\n      };\n    });\n\n    // If there are any extensions to the fields, apply those here.\n    var extensions = typeExtensionsMap[type.name];\n    if (extensions) {\n      extensions.forEach(function (extension) {\n        extension.definition.fields.forEach(function (field) {\n          var fieldName = field.name.value;\n          if (oldFieldMap[fieldName]) {\n            throw new _GraphQLError.GraphQLError('Field \"' + type.name + '.' + fieldName + '\" already exists in the ' + 'schema. It cannot also be defined in this type extension.', [field]);\n          }\n          newFieldMap[fieldName] = {\n            description: (0, _buildASTSchema.getDescription)(field),\n            type: buildOutputFieldType(field.type),\n            args: buildInputValues(field.arguments),\n            deprecationReason: (0, _buildASTSchema.getDeprecationReason)(field),\n            astNode: field\n          };\n        });\n      });\n    }\n\n    return newFieldMap;\n  }\n\n  function extendFieldType(typeDef) {\n    if (typeDef instanceof _definition.GraphQLList) {\n      return new _definition.GraphQLList(extendFieldType(typeDef.ofType));\n    }\n    if (typeDef instanceof _definition.GraphQLNonNull) {\n      return new _definition.GraphQLNonNull(extendFieldType(typeDef.ofType));\n    }\n    return getTypeFromDef(typeDef);\n  }\n\n  function buildType(typeNode) {\n    switch (typeNode.kind) {\n      case Kind.OBJECT_TYPE_DEFINITION:\n        return buildObjectType(typeNode);\n      case Kind.INTERFACE_TYPE_DEFINITION:\n        return buildInterfaceType(typeNode);\n      case Kind.UNION_TYPE_DEFINITION:\n        return buildUnionType(typeNode);\n      case Kind.SCALAR_TYPE_DEFINITION:\n        return buildScalarType(typeNode);\n      case Kind.ENUM_TYPE_DEFINITION:\n        return buildEnumType(typeNode);\n      case Kind.INPUT_OBJECT_TYPE_DEFINITION:\n        return buildInputObjectType(typeNode);\n    }\n    throw new TypeError('Unknown type kind ' + typeNode.kind);\n  }\n\n  function buildObjectType(typeNode) {\n    return new _definition.GraphQLObjectType({\n      name: typeNode.name.value,\n      description: (0, _buildASTSchema.getDescription)(typeNode),\n      interfaces: function interfaces() {\n        return buildImplementedInterfaces(typeNode);\n      },\n      fields: function fields() {\n        return buildFieldMap(typeNode);\n      },\n      astNode: typeNode\n    });\n  }\n\n  function buildInterfaceType(typeNode) {\n    return new _definition.GraphQLInterfaceType({\n      name: typeNode.name.value,\n      description: (0, _buildASTSchema.getDescription)(typeNode),\n      fields: function fields() {\n        return buildFieldMap(typeNode);\n      },\n      astNode: typeNode,\n      resolveType: cannotExecuteExtendedSchema\n    });\n  }\n\n  function buildUnionType(typeNode) {\n    return new _definition.GraphQLUnionType({\n      name: typeNode.name.value,\n      description: (0, _buildASTSchema.getDescription)(typeNode),\n      types: typeNode.types.map(getObjectTypeFromAST),\n      astNode: typeNode,\n      resolveType: cannotExecuteExtendedSchema\n    });\n  }\n\n  function buildScalarType(typeNode) {\n    return new _definition.GraphQLScalarType({\n      name: typeNode.name.value,\n      description: (0, _buildASTSchema.getDescription)(typeNode),\n      astNode: typeNode,\n      serialize: function serialize(id) {\n        return id;\n      },\n      // Note: validation calls the parse functions to determine if a\n      // literal value is correct. Returning null would cause use of custom\n      // scalars to always fail validation. Returning false causes them to\n      // always pass validation.\n      parseValue: function parseValue() {\n        return false;\n      },\n      parseLiteral: function parseLiteral() {\n        return false;\n      }\n    });\n  }\n\n  function buildEnumType(typeNode) {\n    return new _definition.GraphQLEnumType({\n      name: typeNode.name.value,\n      description: (0, _buildASTSchema.getDescription)(typeNode),\n      values: (0, _keyValMap2.default)(typeNode.values, function (enumValue) {\n        return enumValue.name.value;\n      }, function (enumValue) {\n        return {\n          description: (0, _buildASTSchema.getDescription)(enumValue),\n          deprecationReason: (0, _buildASTSchema.getDeprecationReason)(enumValue),\n          astNode: enumValue\n        };\n      }),\n      astNode: typeNode\n    });\n  }\n\n  function buildInputObjectType(typeNode) {\n    return new _definition.GraphQLInputObjectType({\n      name: typeNode.name.value,\n      description: (0, _buildASTSchema.getDescription)(typeNode),\n      fields: function fields() {\n        return buildInputValues(typeNode.fields);\n      },\n      astNode: typeNode\n    });\n  }\n\n  function getDirective(directiveNode) {\n    return new _directives.GraphQLDirective({\n      name: directiveNode.name.value,\n      locations: directiveNode.locations.map(function (node) {\n        return node.value;\n      }),\n      args: directiveNode.arguments && buildInputValues(directiveNode.arguments),\n      astNode: directiveNode\n    });\n  }\n\n  function buildImplementedInterfaces(typeNode) {\n    return typeNode.interfaces && typeNode.interfaces.map(getInterfaceTypeFromAST);\n  }\n\n  function buildFieldMap(typeNode) {\n    return (0, _keyValMap2.default)(typeNode.fields, function (field) {\n      return field.name.value;\n    }, function (field) {\n      return {\n        type: buildOutputFieldType(field.type),\n        description: (0, _buildASTSchema.getDescription)(field),\n        args: buildInputValues(field.arguments),\n        deprecationReason: (0, _buildASTSchema.getDeprecationReason)(field),\n        astNode: field\n      };\n    });\n  }\n\n  function buildInputValues(values) {\n    return (0, _keyValMap2.default)(values, function (value) {\n      return value.name.value;\n    }, function (value) {\n      var type = buildInputFieldType(value.type);\n      return {\n        type: type,\n        description: (0, _buildASTSchema.getDescription)(value),\n        defaultValue: (0, _valueFromAST.valueFromAST)(value.defaultValue, type),\n        astNode: value\n      };\n    });\n  }\n\n  function buildInputFieldType(typeNode) {\n    if (typeNode.kind === Kind.LIST_TYPE) {\n      return new _definition.GraphQLList(buildInputFieldType(typeNode.type));\n    }\n    if (typeNode.kind === Kind.NON_NULL_TYPE) {\n      var nullableType = buildInputFieldType(typeNode.type);\n      !!(nullableType instanceof _definition.GraphQLNonNull) ? (0, _invariant2.default)(0, 'Must be nullable') : void 0;\n      return new _definition.GraphQLNonNull(nullableType);\n    }\n    return getInputTypeFromAST(typeNode);\n  }\n\n  function buildOutputFieldType(typeNode) {\n    if (typeNode.kind === Kind.LIST_TYPE) {\n      return new _definition.GraphQLList(buildOutputFieldType(typeNode.type));\n    }\n    if (typeNode.kind === Kind.NON_NULL_TYPE) {\n      var nullableType = buildOutputFieldType(typeNode.type);\n      !!(nullableType instanceof _definition.GraphQLNonNull) ? (0, _invariant2.default)(0, 'Must be nullable') : void 0;\n      return new _definition.GraphQLNonNull(nullableType);\n    }\n    return getOutputTypeFromAST(typeNode);\n  }\n}\n\nfunction cannotExecuteExtendedSchema() {\n  throw new Error('Extended Schema cannot use Interface or Union types for execution.');\n}","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.printSchema = printSchema;\nexports.printIntrospectionSchema = printIntrospectionSchema;\nexports.printType = printType;\n\nvar _invariant = require('../jsutils/invariant');\n\nvar _invariant2 = _interopRequireDefault(_invariant);\n\nvar _isNullish = require('../jsutils/isNullish');\n\nvar _isNullish2 = _interopRequireDefault(_isNullish);\n\nvar _isInvalid = require('../jsutils/isInvalid');\n\nvar _isInvalid2 = _interopRequireDefault(_isInvalid);\n\nvar _astFromValue = require('../utilities/astFromValue');\n\nvar _printer = require('../language/printer');\n\nvar _definition = require('../type/definition');\n\nvar _scalars = require('../type/scalars');\n\nvar _directives = require('../type/directives');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n *  Copyright (c) 2015, Facebook, Inc.\n *  All rights reserved.\n *\n *  This source code is licensed under the BSD-style license found in the\n *  LICENSE file in the root directory of this source tree. An additional grant\n *  of patent rights can be found in the PATENTS file in the same directory.\n */\n\nfunction printSchema(schema) {\n  return printFilteredSchema(schema, function (n) {\n    return !isSpecDirective(n);\n  }, isDefinedType);\n}\n\nfunction printIntrospectionSchema(schema) {\n  return printFilteredSchema(schema, isSpecDirective, isIntrospectionType);\n}\n\nfunction isSpecDirective(directiveName) {\n  return directiveName === 'skip' || directiveName === 'include' || directiveName === 'deprecated';\n}\n\nfunction isDefinedType(typename) {\n  return !isIntrospectionType(typename) && !isBuiltInScalar(typename);\n}\n\nfunction isIntrospectionType(typename) {\n  return typename.indexOf('__') === 0;\n}\n\nfunction isBuiltInScalar(typename) {\n  return typename === 'String' || typename === 'Boolean' || typename === 'Int' || typename === 'Float' || typename === 'ID';\n}\n\nfunction printFilteredSchema(schema, directiveFilter, typeFilter) {\n  var directives = schema.getDirectives().filter(function (directive) {\n    return directiveFilter(directive.name);\n  });\n  var typeMap = schema.getTypeMap();\n  var types = Object.keys(typeMap).filter(typeFilter).sort(function (name1, name2) {\n    return name1.localeCompare(name2);\n  }).map(function (typeName) {\n    return typeMap[typeName];\n  });\n\n  return [printSchemaDefinition(schema)].concat(directives.map(printDirective), types.map(printType)).filter(Boolean).join('\\n\\n') + '\\n';\n}\n\nfunction printSchemaDefinition(schema) {\n  if (isSchemaOfCommonNames(schema)) {\n    return;\n  }\n\n  var operationTypes = [];\n\n  var queryType = schema.getQueryType();\n  if (queryType) {\n    operationTypes.push('  query: ' + queryType.name);\n  }\n\n  var mutationType = schema.getMutationType();\n  if (mutationType) {\n    operationTypes.push('  mutation: ' + mutationType.name);\n  }\n\n  var subscriptionType = schema.getSubscriptionType();\n  if (subscriptionType) {\n    operationTypes.push('  subscription: ' + subscriptionType.name);\n  }\n\n  return 'schema {\\n' + operationTypes.join('\\n') + '\\n}';\n}\n\n/**\n * GraphQL schema define root types for each type of operation. These types are\n * the same as any other type and can be named in any manner, however there is\n * a common naming convention:\n *\n *   schema {\n *     query: Query\n *     mutation: Mutation\n *   }\n *\n * When using this naming convention, the schema description can be omitted.\n */\nfunction isSchemaOfCommonNames(schema) {\n  var queryType = schema.getQueryType();\n  if (queryType && queryType.name !== 'Query') {\n    return false;\n  }\n\n  var mutationType = schema.getMutationType();\n  if (mutationType && mutationType.name !== 'Mutation') {\n    return false;\n  }\n\n  var subscriptionType = schema.getSubscriptionType();\n  if (subscriptionType && subscriptionType.name !== 'Subscription') {\n    return false;\n  }\n\n  return true;\n}\n\nfunction printType(type) {\n  if (type instanceof _definition.GraphQLScalarType) {\n    return printScalar(type);\n  } else if (type instanceof _definition.GraphQLObjectType) {\n    return printObject(type);\n  } else if (type instanceof _definition.GraphQLInterfaceType) {\n    return printInterface(type);\n  } else if (type instanceof _definition.GraphQLUnionType) {\n    return printUnion(type);\n  } else if (type instanceof _definition.GraphQLEnumType) {\n    return printEnum(type);\n  }\n  !(type instanceof _definition.GraphQLInputObjectType) ? (0, _invariant2.default)(0) : void 0;\n  return printInputObject(type);\n}\n\nfunction printScalar(type) {\n  return printDescription(type) + ('scalar ' + type.name);\n}\n\nfunction printObject(type) {\n  var interfaces = type.getInterfaces();\n  var implementedInterfaces = interfaces.length ? ' implements ' + interfaces.map(function (i) {\n    return i.name;\n  }).join(', ') : '';\n  return printDescription(type) + ('type ' + type.name + implementedInterfaces + ' {\\n') + printFields(type) + '\\n' + '}';\n}\n\nfunction printInterface(type) {\n  return printDescription(type) + ('interface ' + type.name + ' {\\n') + printFields(type) + '\\n' + '}';\n}\n\nfunction printUnion(type) {\n  return printDescription(type) + ('union ' + type.name + ' = ' + type.getTypes().join(' | '));\n}\n\nfunction printEnum(type) {\n  return printDescription(type) + ('enum ' + type.name + ' {\\n') + printEnumValues(type.getValues()) + '\\n' + '}';\n}\n\nfunction printEnumValues(values) {\n  return values.map(function (value, i) {\n    return printDescription(value, '  ', !i) + '  ' + value.name + printDeprecated(value);\n  }).join('\\n');\n}\n\nfunction printInputObject(type) {\n  var fieldMap = type.getFields();\n  var fields = Object.keys(fieldMap).map(function (fieldName) {\n    return fieldMap[fieldName];\n  });\n  return printDescription(type) + ('input ' + type.name + ' {\\n') + fields.map(function (f, i) {\n    return printDescription(f, '  ', !i) + '  ' + printInputValue(f);\n  }).join('\\n') + '\\n' + '}';\n}\n\nfunction printFields(type) {\n  var fieldMap = type.getFields();\n  var fields = Object.keys(fieldMap).map(function (fieldName) {\n    return fieldMap[fieldName];\n  });\n  return fields.map(function (f, i) {\n    return printDescription(f, '  ', !i) + '  ' + f.name + printArgs(f.args, '  ') + ': ' + String(f.type) + printDeprecated(f);\n  }).join('\\n');\n}\n\nfunction printArgs(args) {\n  var indentation = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n\n  if (args.length === 0) {\n    return '';\n  }\n\n  // If every arg does not have a description, print them on one line.\n  if (args.every(function (arg) {\n    return !arg.description;\n  })) {\n    return '(' + args.map(printInputValue).join(', ') + ')';\n  }\n\n  return '(\\n' + args.map(function (arg, i) {\n    return printDescription(arg, '  ' + indentation, !i) + '  ' + indentation + printInputValue(arg);\n  }).join('\\n') + '\\n' + indentation + ')';\n}\n\nfunction printInputValue(arg) {\n  var argDecl = arg.name + ': ' + String(arg.type);\n  if (!(0, _isInvalid2.default)(arg.defaultValue)) {\n    argDecl += ' = ' + (0, _printer.print)((0, _astFromValue.astFromValue)(arg.defaultValue, arg.type));\n  }\n  return argDecl;\n}\n\nfunction printDirective(directive) {\n  return printDescription(directive) + 'directive @' + directive.name + printArgs(directive.args) + ' on ' + directive.locations.join(' | ');\n}\n\nfunction printDeprecated(fieldOrEnumVal) {\n  var reason = fieldOrEnumVal.deprecationReason;\n  if ((0, _isNullish2.default)(reason)) {\n    return '';\n  }\n  if (reason === '' || reason === _directives.DEFAULT_DEPRECATION_REASON) {\n    return ' @deprecated';\n  }\n  return ' @deprecated(reason: ' + (0, _printer.print)((0, _astFromValue.astFromValue)(reason, _scalars.GraphQLString)) + ')';\n}\n\nfunction printDescription(def) {\n  var indentation = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n  var firstInBlock = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n\n  if (!def.description) {\n    return '';\n  }\n  var lines = def.description.split('\\n');\n  var description = indentation && !firstInBlock ? '\\n' : '';\n  for (var i = 0; i < lines.length; i++) {\n    if (lines[i] === '') {\n      description += indentation + '#\\n';\n    } else {\n      // For > 120 character long lines, cut at space boundaries into sublines\n      // of ~80 chars.\n      var sublines = breakLine(lines[i], 120 - indentation.length);\n      for (var j = 0; j < sublines.length; j++) {\n        description += indentation + '# ' + sublines[j] + '\\n';\n      }\n    }\n  }\n  return description;\n}\n\nfunction breakLine(line, len) {\n  if (line.length < len + 5) {\n    return [line];\n  }\n  var parts = line.split(new RegExp('((?: |^).{15,' + (len - 40) + '}(?= |$))'));\n  if (parts.length < 4) {\n    return [line];\n  }\n  var sublines = [parts[0] + parts[1] + parts[2]];\n  for (var i = 3; i < parts.length; i += 2) {\n    sublines.push(parts[i].slice(1) + parts[i + 1]);\n  }\n  return sublines;\n}","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.concatAST = concatAST;\n\n\n/**\n * Provided a collection of ASTs, presumably each from different files,\n * concatenate the ASTs together into batched AST, useful for validating many\n * GraphQL source files which together represent one conceptual application.\n */\nfunction concatAST(asts) {\n  var batchDefinitions = [];\n  for (var i = 0; i < asts.length; i++) {\n    var definitions = asts[i].definitions;\n    for (var j = 0; j < definitions.length; j++) {\n      batchDefinitions.push(definitions[j]);\n    }\n  }\n  return {\n    kind: 'Document',\n    definitions: batchDefinitions\n  };\n}\n/**\n *  Copyright (c) 2015, Facebook, Inc.\n *  All rights reserved.\n *\n *  This source code is licensed under the BSD-style license found in the\n *  LICENSE file in the root directory of this source tree. An additional grant\n *  of patent rights can be found in the PATENTS file in the same directory.\n */","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.separateOperations = separateOperations;\n\nvar _visitor = require('../language/visitor');\n\n/**\n * separateOperations accepts a single AST document which may contain many\n * operations and fragments and returns a collection of AST documents each of\n * which contains a single operation as well the fragment definitions it\n * refers to.\n */\nfunction separateOperations(documentAST) {\n\n  var operations = [];\n  var fragments = Object.create(null);\n  var positions = new Map();\n  var depGraph = Object.create(null);\n  var fromName = void 0;\n  var idx = 0;\n\n  // Populate metadata and build a dependency graph.\n  (0, _visitor.visit)(documentAST, {\n    OperationDefinition: function OperationDefinition(node) {\n      fromName = opName(node);\n      operations.push(node);\n      positions.set(node, idx++);\n    },\n    FragmentDefinition: function FragmentDefinition(node) {\n      fromName = node.name.value;\n      fragments[fromName] = node;\n      positions.set(node, idx++);\n    },\n    FragmentSpread: function FragmentSpread(node) {\n      var toName = node.name.value;\n      (depGraph[fromName] || (depGraph[fromName] = Object.create(null)))[toName] = true;\n    }\n  });\n\n  // For each operation, produce a new synthesized AST which includes only what\n  // is necessary for completing that operation.\n  var separatedDocumentASTs = Object.create(null);\n  operations.forEach(function (operation) {\n    var operationName = opName(operation);\n    var dependencies = Object.create(null);\n    collectTransitiveDependencies(dependencies, depGraph, operationName);\n\n    // The list of definition nodes to be included for this operation, sorted\n    // to retain the same order as the original document.\n    var definitions = [operation];\n    Object.keys(dependencies).forEach(function (name) {\n      definitions.push(fragments[name]);\n    });\n    definitions.sort(function (n1, n2) {\n      return (positions.get(n1) || 0) - (positions.get(n2) || 0);\n    });\n\n    separatedDocumentASTs[operationName] = {\n      kind: 'Document',\n      definitions: definitions\n    };\n  });\n\n  return separatedDocumentASTs;\n}\n/**\n *  Copyright (c) 2015, Facebook, Inc.\n *  All rights reserved.\n *\n *  This source code is licensed under the BSD-style license found in the\n *  LICENSE file in the root directory of this source tree. An additional grant\n *  of patent rights can be found in the PATENTS file in the same directory.\n */\n\n// Provides the empty string for anonymous operations.\nfunction opName(operation) {\n  return operation.name ? operation.name.value : '';\n}\n\n// From a dependency graph, collects a list of transitive dependencies by\n// recursing through a dependency graph.\nfunction collectTransitiveDependencies(collected, depGraph, fromName) {\n  var immediateDeps = depGraph[fromName];\n  if (immediateDeps) {\n    Object.keys(immediateDeps).forEach(function (toName) {\n      if (!collected[toName]) {\n        collected[toName] = true;\n        collectTransitiveDependencies(collected, depGraph, toName);\n      }\n    });\n  }\n}","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.DangerousChangeType = exports.BreakingChangeType = undefined;\nexports.findBreakingChanges = findBreakingChanges;\nexports.findDangerousChanges = findDangerousChanges;\nexports.findRemovedTypes = findRemovedTypes;\nexports.findTypesThatChangedKind = findTypesThatChangedKind;\nexports.findArgChanges = findArgChanges;\nexports.findFieldsThatChangedType = findFieldsThatChangedType;\nexports.findFieldsThatChangedTypeOnInputObjectTypes = findFieldsThatChangedTypeOnInputObjectTypes;\nexports.findTypesRemovedFromUnions = findTypesRemovedFromUnions;\nexports.findValuesRemovedFromEnums = findValuesRemovedFromEnums;\nexports.findInterfacesRemovedFromObjectTypes = findInterfacesRemovedFromObjectTypes;\n\nvar _definition = require('../type/definition');\n\nvar _schema = require('../type/schema');\n\n/**\n *  Copyright (c) 2016, Facebook, Inc.\n *  All rights reserved.\n *\n *  This source code is licensed under the BSD-style license found in the\n *  LICENSE file in the root directory of this source tree. An additional grant\n *  of patent rights can be found in the PATENTS file in the same directory.\n */\n\nvar BreakingChangeType = exports.BreakingChangeType = {\n  FIELD_CHANGED_KIND: 'FIELD_CHANGED_KIND',\n  FIELD_REMOVED: 'FIELD_REMOVED',\n  TYPE_CHANGED_KIND: 'TYPE_CHANGED_KIND',\n  TYPE_REMOVED: 'TYPE_REMOVED',\n  TYPE_REMOVED_FROM_UNION: 'TYPE_REMOVED_FROM_UNION',\n  VALUE_REMOVED_FROM_ENUM: 'VALUE_REMOVED_FROM_ENUM',\n  ARG_REMOVED: 'ARG_REMOVED',\n  ARG_CHANGED_KIND: 'ARG_CHANGED_KIND',\n  NON_NULL_ARG_ADDED: 'NON_NULL_ARG_ADDED',\n  NON_NULL_INPUT_FIELD_ADDED: 'NON_NULL_INPUT_FIELD_ADDED',\n  INTERFACE_REMOVED_FROM_OBJECT: 'INTERFACE_REMOVED_FROM_OBJECT'\n};\n\nvar DangerousChangeType = exports.DangerousChangeType = {\n  ARG_DEFAULT_VALUE_CHANGE: 'ARG_DEFAULT_VALUE_CHANGE'\n};\n\n/**\n * Given two schemas, returns an Array containing descriptions of all the types\n * of breaking changes covered by the other functions down below.\n */\nfunction findBreakingChanges(oldSchema, newSchema) {\n  return [].concat(findRemovedTypes(oldSchema, newSchema), findTypesThatChangedKind(oldSchema, newSchema), findFieldsThatChangedType(oldSchema, newSchema), findTypesRemovedFromUnions(oldSchema, newSchema), findValuesRemovedFromEnums(oldSchema, newSchema), findArgChanges(oldSchema, newSchema).breakingChanges, findInterfacesRemovedFromObjectTypes(oldSchema, newSchema));\n}\n\n/**\n * Given two schemas, returns an Array containing descriptions of all the types\n * of potentially dangerous changes covered by the other functions down below.\n */\nfunction findDangerousChanges(oldSchema, newSchema) {\n  return [].concat(findArgChanges(oldSchema, newSchema).dangerousChanges);\n}\n\n/**\n * Given two schemas, returns an Array containing descriptions of any breaking\n * changes in the newSchema related to removing an entire type.\n */\nfunction findRemovedTypes(oldSchema, newSchema) {\n  var oldTypeMap = oldSchema.getTypeMap();\n  var newTypeMap = newSchema.getTypeMap();\n\n  var breakingChanges = [];\n  Object.keys(oldTypeMap).forEach(function (typeName) {\n    if (!newTypeMap[typeName]) {\n      breakingChanges.push({\n        type: BreakingChangeType.TYPE_REMOVED,\n        description: typeName + ' was removed.'\n      });\n    }\n  });\n  return breakingChanges;\n}\n\n/**\n * Given two schemas, returns an Array containing descriptions of any breaking\n * changes in the newSchema related to changing the type of a type.\n */\nfunction findTypesThatChangedKind(oldSchema, newSchema) {\n  var oldTypeMap = oldSchema.getTypeMap();\n  var newTypeMap = newSchema.getTypeMap();\n\n  var breakingChanges = [];\n  Object.keys(oldTypeMap).forEach(function (typeName) {\n    if (!newTypeMap[typeName]) {\n      return;\n    }\n    var oldType = oldTypeMap[typeName];\n    var newType = newTypeMap[typeName];\n    if (!(oldType instanceof newType.constructor)) {\n      breakingChanges.push({\n        type: BreakingChangeType.TYPE_CHANGED_KIND,\n        description: typeName + ' changed from ' + (typeKindName(oldType) + ' to ' + typeKindName(newType) + '.')\n      });\n    }\n  });\n  return breakingChanges;\n}\n\n/**\n * Given two schemas, returns an Array containing descriptions of any\n * breaking or dangerous changes in the newSchema related to arguments\n * (such as removal or change of type of an argument, or a change in an\n * argument's default value).\n */\nfunction findArgChanges(oldSchema, newSchema) {\n  var oldTypeMap = oldSchema.getTypeMap();\n  var newTypeMap = newSchema.getTypeMap();\n\n  var breakingChanges = [];\n  var dangerousChanges = [];\n\n  Object.keys(oldTypeMap).forEach(function (typeName) {\n    var oldType = oldTypeMap[typeName];\n    var newType = newTypeMap[typeName];\n    if (!(oldType instanceof _definition.GraphQLObjectType || oldType instanceof _definition.GraphQLInterfaceType) || !(newType instanceof oldType.constructor)) {\n      return;\n    }\n\n    var oldTypeFields = oldType.getFields();\n    var newTypeFields = newType.getFields();\n\n    Object.keys(oldTypeFields).forEach(function (fieldName) {\n      if (!newTypeFields[fieldName]) {\n        return;\n      }\n\n      oldTypeFields[fieldName].args.forEach(function (oldArgDef) {\n        var newArgs = newTypeFields[fieldName].args;\n        var newArgDef = newArgs.find(function (arg) {\n          return arg.name === oldArgDef.name;\n        });\n\n        // Arg not present\n        if (!newArgDef) {\n          breakingChanges.push({\n            type: BreakingChangeType.ARG_REMOVED,\n            description: oldType.name + '.' + fieldName + ' arg ' + (oldArgDef.name + ' was removed')\n          });\n        } else {\n          var isSafe = isChangeSafeForInputObjectFieldOrFieldArg(oldArgDef.type, newArgDef.type);\n          if (!isSafe) {\n            breakingChanges.push({\n              type: BreakingChangeType.ARG_CHANGED_KIND,\n              description: oldType.name + '.' + fieldName + ' arg ' + (oldArgDef.name + ' has changed type from ') + (oldArgDef.type.toString() + ' to ' + newArgDef.type.toString())\n            });\n          } else if (oldArgDef.defaultValue !== undefined && oldArgDef.defaultValue !== newArgDef.defaultValue) {\n            dangerousChanges.push({\n              type: DangerousChangeType.ARG_DEFAULT_VALUE_CHANGE,\n              description: oldType.name + '.' + fieldName + ' arg ' + (oldArgDef.name + ' has changed defaultValue')\n            });\n          }\n        }\n      });\n      // Check if a non-null arg was added to the field\n      newTypeFields[fieldName].args.forEach(function (newArgDef) {\n        var oldArgs = oldTypeFields[fieldName].args;\n        var oldArgDef = oldArgs.find(function (arg) {\n          return arg.name === newArgDef.name;\n        });\n        if (!oldArgDef && newArgDef.type instanceof _definition.GraphQLNonNull) {\n          breakingChanges.push({\n            type: BreakingChangeType.NON_NULL_ARG_ADDED,\n            description: 'A non-null arg ' + newArgDef.name + ' on ' + (newType.name + '.' + fieldName + ' was added')\n          });\n        }\n      });\n    });\n  });\n\n  return {\n    breakingChanges: breakingChanges,\n    dangerousChanges: dangerousChanges\n  };\n}\n\nfunction typeKindName(type) {\n  if (type instanceof _definition.GraphQLScalarType) {\n    return 'a Scalar type';\n  }\n  if (type instanceof _definition.GraphQLObjectType) {\n    return 'an Object type';\n  }\n  if (type instanceof _definition.GraphQLInterfaceType) {\n    return 'an Interface type';\n  }\n  if (type instanceof _definition.GraphQLUnionType) {\n    return 'a Union type';\n  }\n  if (type instanceof _definition.GraphQLEnumType) {\n    return 'an Enum type';\n  }\n  if (type instanceof _definition.GraphQLInputObjectType) {\n    return 'an Input type';\n  }\n  throw new TypeError('Unknown type ' + type.constructor.name);\n}\n\n/**\n * Given two schemas, returns an Array containing descriptions of any breaking\n * changes in the newSchema related to the fields on a type. This includes if\n * a field has been removed from a type, if a field has changed type, or if\n * a non-null field is added to an input type.\n */\nfunction findFieldsThatChangedType(oldSchema, newSchema) {\n  return [].concat(findFieldsThatChangedTypeOnObjectOrInterfaceTypes(oldSchema, newSchema), findFieldsThatChangedTypeOnInputObjectTypes(oldSchema, newSchema));\n}\n\nfunction findFieldsThatChangedTypeOnObjectOrInterfaceTypes(oldSchema, newSchema) {\n  var oldTypeMap = oldSchema.getTypeMap();\n  var newTypeMap = newSchema.getTypeMap();\n\n  var breakingFieldChanges = [];\n  Object.keys(oldTypeMap).forEach(function (typeName) {\n    var oldType = oldTypeMap[typeName];\n    var newType = newTypeMap[typeName];\n    if (!(oldType instanceof _definition.GraphQLObjectType || oldType instanceof _definition.GraphQLInterfaceType) || !(newType instanceof oldType.constructor)) {\n      return;\n    }\n\n    var oldTypeFieldsDef = oldType.getFields();\n    var newTypeFieldsDef = newType.getFields();\n    Object.keys(oldTypeFieldsDef).forEach(function (fieldName) {\n      // Check if the field is missing on the type in the new schema.\n      if (!(fieldName in newTypeFieldsDef)) {\n        breakingFieldChanges.push({\n          type: BreakingChangeType.FIELD_REMOVED,\n          description: typeName + '.' + fieldName + ' was removed.'\n        });\n      } else {\n        var oldFieldType = oldTypeFieldsDef[fieldName].type;\n        var newFieldType = newTypeFieldsDef[fieldName].type;\n        var isSafe = isChangeSafeForObjectOrInterfaceField(oldFieldType, newFieldType);\n        if (!isSafe) {\n          var oldFieldTypeString = (0, _definition.isNamedType)(oldFieldType) ? oldFieldType.name : oldFieldType.toString();\n          var newFieldTypeString = (0, _definition.isNamedType)(newFieldType) ? newFieldType.name : newFieldType.toString();\n          breakingFieldChanges.push({\n            type: BreakingChangeType.FIELD_CHANGED_KIND,\n            description: typeName + '.' + fieldName + ' changed type from ' + (oldFieldTypeString + ' to ' + newFieldTypeString + '.')\n          });\n        }\n      }\n    });\n  });\n  return breakingFieldChanges;\n}\n\nfunction findFieldsThatChangedTypeOnInputObjectTypes(oldSchema, newSchema) {\n  var oldTypeMap = oldSchema.getTypeMap();\n  var newTypeMap = newSchema.getTypeMap();\n\n  var breakingFieldChanges = [];\n  Object.keys(oldTypeMap).forEach(function (typeName) {\n    var oldType = oldTypeMap[typeName];\n    var newType = newTypeMap[typeName];\n    if (!(oldType instanceof _definition.GraphQLInputObjectType) || !(newType instanceof _definition.GraphQLInputObjectType)) {\n      return;\n    }\n\n    var oldTypeFieldsDef = oldType.getFields();\n    var newTypeFieldsDef = newType.getFields();\n    Object.keys(oldTypeFieldsDef).forEach(function (fieldName) {\n      // Check if the field is missing on the type in the new schema.\n      if (!(fieldName in newTypeFieldsDef)) {\n        breakingFieldChanges.push({\n          type: BreakingChangeType.FIELD_REMOVED,\n          description: typeName + '.' + fieldName + ' was removed.'\n        });\n      } else {\n        var oldFieldType = oldTypeFieldsDef[fieldName].type;\n        var newFieldType = newTypeFieldsDef[fieldName].type;\n\n        var isSafe = isChangeSafeForInputObjectFieldOrFieldArg(oldFieldType, newFieldType);\n        if (!isSafe) {\n          var oldFieldTypeString = (0, _definition.isNamedType)(oldFieldType) ? oldFieldType.name : oldFieldType.toString();\n          var newFieldTypeString = (0, _definition.isNamedType)(newFieldType) ? newFieldType.name : newFieldType.toString();\n          breakingFieldChanges.push({\n            type: BreakingChangeType.FIELD_CHANGED_KIND,\n            description: typeName + '.' + fieldName + ' changed type from ' + (oldFieldTypeString + ' to ' + newFieldTypeString + '.')\n          });\n        }\n      }\n    });\n    // Check if a non-null field was added to the input object type\n    Object.keys(newTypeFieldsDef).forEach(function (fieldName) {\n      if (!(fieldName in oldTypeFieldsDef) && newTypeFieldsDef[fieldName].type instanceof _definition.GraphQLNonNull) {\n        breakingFieldChanges.push({\n          type: BreakingChangeType.NON_NULL_INPUT_FIELD_ADDED,\n          description: 'A non-null field ' + fieldName + ' on ' + ('input type ' + newType.name + ' was added.')\n        });\n      }\n    });\n  });\n  return breakingFieldChanges;\n}\n\nfunction isChangeSafeForObjectOrInterfaceField(oldType, newType) {\n  if ((0, _definition.isNamedType)(oldType)) {\n    return (\n      // if they're both named types, see if their names are equivalent\n      (0, _definition.isNamedType)(newType) && oldType.name === newType.name ||\n      // moving from nullable to non-null of the same underlying type is safe\n      newType instanceof _definition.GraphQLNonNull && isChangeSafeForObjectOrInterfaceField(oldType, newType.ofType)\n    );\n  } else if (oldType instanceof _definition.GraphQLList) {\n    return (\n      // if they're both lists, make sure the underlying types are compatible\n      newType instanceof _definition.GraphQLList && isChangeSafeForObjectOrInterfaceField(oldType.ofType, newType.ofType) ||\n      // moving from nullable to non-null of the same underlying type is safe\n      newType instanceof _definition.GraphQLNonNull && isChangeSafeForObjectOrInterfaceField(oldType, newType.ofType)\n    );\n  } else if (oldType instanceof _definition.GraphQLNonNull) {\n    // if they're both non-null, make sure the underlying types are compatible\n    return newType instanceof _definition.GraphQLNonNull && isChangeSafeForObjectOrInterfaceField(oldType.ofType, newType.ofType);\n  }\n  return false;\n}\n\nfunction isChangeSafeForInputObjectFieldOrFieldArg(oldType, newType) {\n  if ((0, _definition.isNamedType)(oldType)) {\n    // if they're both named types, see if their names are equivalent\n    return (0, _definition.isNamedType)(newType) && oldType.name === newType.name;\n  } else if (oldType instanceof _definition.GraphQLList) {\n    // if they're both lists, make sure the underlying types are compatible\n    return newType instanceof _definition.GraphQLList && isChangeSafeForInputObjectFieldOrFieldArg(oldType.ofType, newType.ofType);\n  } else if (oldType instanceof _definition.GraphQLNonNull) {\n    return (\n      // if they're both non-null, make sure the underlying types are\n      // compatible\n      newType instanceof _definition.GraphQLNonNull && isChangeSafeForInputObjectFieldOrFieldArg(oldType.ofType, newType.ofType) ||\n      // moving from non-null to nullable of the same underlying type is safe\n      !(newType instanceof _definition.GraphQLNonNull) && isChangeSafeForInputObjectFieldOrFieldArg(oldType.ofType, newType)\n    );\n  }\n  return false;\n}\n\n/**\n * Given two schemas, returns an Array containing descriptions of any breaking\n * changes in the newSchema related to removing types from a union type.\n */\nfunction findTypesRemovedFromUnions(oldSchema, newSchema) {\n  var oldTypeMap = oldSchema.getTypeMap();\n  var newTypeMap = newSchema.getTypeMap();\n\n  var typesRemovedFromUnion = [];\n  Object.keys(oldTypeMap).forEach(function (typeName) {\n    var oldType = oldTypeMap[typeName];\n    var newType = newTypeMap[typeName];\n    if (!(oldType instanceof _definition.GraphQLUnionType) || !(newType instanceof _definition.GraphQLUnionType)) {\n      return;\n    }\n    var typeNamesInNewUnion = Object.create(null);\n    newType.getTypes().forEach(function (type) {\n      typeNamesInNewUnion[type.name] = true;\n    });\n    oldType.getTypes().forEach(function (type) {\n      if (!typeNamesInNewUnion[type.name]) {\n        typesRemovedFromUnion.push({\n          type: BreakingChangeType.TYPE_REMOVED_FROM_UNION,\n          description: type.name + ' was removed from union type ' + typeName + '.'\n        });\n      }\n    });\n  });\n  return typesRemovedFromUnion;\n}\n\n/**\n * Given two schemas, returns an Array containing descriptions of any breaking\n * changes in the newSchema related to removing values from an enum type.\n */\nfunction findValuesRemovedFromEnums(oldSchema, newSchema) {\n  var oldTypeMap = oldSchema.getTypeMap();\n  var newTypeMap = newSchema.getTypeMap();\n\n  var valuesRemovedFromEnums = [];\n  Object.keys(oldTypeMap).forEach(function (typeName) {\n    var oldType = oldTypeMap[typeName];\n    var newType = newTypeMap[typeName];\n    if (!(oldType instanceof _definition.GraphQLEnumType) || !(newType instanceof _definition.GraphQLEnumType)) {\n      return;\n    }\n    var valuesInNewEnum = Object.create(null);\n    newType.getValues().forEach(function (value) {\n      valuesInNewEnum[value.name] = true;\n    });\n    oldType.getValues().forEach(function (value) {\n      if (!valuesInNewEnum[value.name]) {\n        valuesRemovedFromEnums.push({\n          type: BreakingChangeType.VALUE_REMOVED_FROM_ENUM,\n          description: value.name + ' was removed from enum type ' + typeName + '.'\n        });\n      }\n    });\n  });\n  return valuesRemovedFromEnums;\n}\n\nfunction findInterfacesRemovedFromObjectTypes(oldSchema, newSchema) {\n  var oldTypeMap = oldSchema.getTypeMap();\n  var newTypeMap = newSchema.getTypeMap();\n  var breakingChanges = [];\n\n  Object.keys(oldTypeMap).forEach(function (typeName) {\n    var oldType = oldTypeMap[typeName];\n    var newType = newTypeMap[typeName];\n    if (!(oldType instanceof _definition.GraphQLObjectType) || !(newType instanceof _definition.GraphQLObjectType)) {\n      return;\n    }\n\n    var oldInterfaces = oldType.getInterfaces();\n    var newInterfaces = newType.getInterfaces();\n    oldInterfaces.forEach(function (oldInterface) {\n      if (!newInterfaces.some(function (int) {\n        return int.name === oldInterface.name;\n      })) {\n        breakingChanges.push({\n          type: BreakingChangeType.INTERFACE_REMOVED_FROM_OBJECT,\n          description: typeName + ' no longer implements interface ' + (oldInterface.name + '.')\n        });\n      }\n    });\n  });\n  return breakingChanges;\n}","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.findDeprecatedUsages = findDeprecatedUsages;\n\nvar _GraphQLError = require('../error/GraphQLError');\n\nvar _visitor = require('../language/visitor');\n\nvar _definition = require('../type/definition');\n\nvar _schema = require('../type/schema');\n\nvar _TypeInfo = require('./TypeInfo');\n\n/**\n * A validation rule which reports deprecated usages.\n *\n * Returns a list of GraphQLError instances describing each deprecated use.\n */\nfunction findDeprecatedUsages(schema, ast) {\n  var errors = [];\n  var typeInfo = new _TypeInfo.TypeInfo(schema);\n\n  (0, _visitor.visit)(ast, (0, _visitor.visitWithTypeInfo)(typeInfo, {\n    Field: function Field(node) {\n      var fieldDef = typeInfo.getFieldDef();\n      if (fieldDef && fieldDef.isDeprecated) {\n        var parentType = typeInfo.getParentType();\n        if (parentType) {\n          var reason = fieldDef.deprecationReason;\n          errors.push(new _GraphQLError.GraphQLError('The field ' + parentType.name + '.' + fieldDef.name + ' is deprecated.' + (reason ? ' ' + reason : ''), [node]));\n        }\n      }\n    },\n    EnumValue: function EnumValue(node) {\n      var enumVal = typeInfo.getEnumValue();\n      if (enumVal && enumVal.isDeprecated) {\n        var type = (0, _definition.getNamedType)(typeInfo.getInputType());\n        if (type) {\n          var reason = enumVal.deprecationReason;\n          errors.push(new _GraphQLError.GraphQLError('The enum value ' + type.name + '.' + enumVal.name + ' is deprecated.' + (reason ? ' ' + reason : ''), [node]));\n        }\n      }\n    }\n  }));\n\n  return errors;\n}\n/**\n *  Copyright (c) Facebook, Inc.\n *  All rights reserved.\n *\n *  This source code is licensed under the BSD-style license found in the\n *  LICENSE file in the root directory of this source tree. An additional grant\n *  of patent rights can be found in the PATENTS file in the same directory.\n */","import defineType from \"./index\";\nimport graphqlDef from \"./graphql\";\n\ngraphqlDef().forEach(([name, params]) => defineType(name, params));\n","/* These are auto-generated definitions: Please do not edit this file directly */\n\nimport {\n  assertNodeType,\n  assertValueType,\n  assertEach,\n  assertOneOf,\n  assertArrayOf\n} from './index';\n\nexport default () => [[\"Name\", {\n  builder: [\"value\"],\n  fields: {\n    value: {\n      optional: false,\n      validate: assertValueType(\"string\")\n    }\n  },\n  aliases: [\"AST\"]\n}], [\"Document\", {\n  builder: [\"definitions\"],\n  fields: {\n    definitions: {\n      optional: false,\n      validate: assertArrayOf(assertNodeType(\"Definition\"))\n    }\n  },\n  aliases: [\"AST\"]\n}], [\"OperationDefinition\", {\n  builder: [\"operation\", \"selectionSet\", \"name\", \"variableDefinitions\", \"directives\"],\n  fields: {\n    operation: {\n      optional: false,\n      validate: assertValueType(\"string\")\n    },\n    selectionSet: {\n      optional: false,\n      validate: assertNodeType(\"SelectionSet\")\n    },\n    name: {\n      optional: true,\n      validate: assertNodeType(\"Name\")\n    },\n    variableDefinitions: {\n      optional: true,\n      validate: assertArrayOf(assertNodeType(\"VariableDefinition\"))\n    },\n    directives: {\n      optional: true,\n      validate: assertArrayOf(assertNodeType(\"Directive\"))\n    }\n  },\n  aliases: [\"AST\", \"Definition\"]\n}], [\"VariableDefinition\", {\n  builder: [\"variable\", \"type\", \"defaultValue\"],\n  fields: {\n    variable: {\n      optional: false,\n      validate: assertNodeType(\"Variable\")\n    },\n    type: {\n      optional: false,\n      validate: assertNodeType(\"Type\")\n    },\n    defaultValue: {\n      optional: true,\n      validate: assertNodeType(\"Value\")\n    }\n  },\n  aliases: [\"AST\"]\n}], [\"Variable\", {\n  builder: [\"name\"],\n  fields: {\n    name: {\n      optional: false,\n      validate: assertNodeType(\"Name\")\n    }\n  },\n  aliases: [\"AST\", \"Value\"]\n}], [\"SelectionSet\", {\n  builder: [\"selections\"],\n  fields: {\n    selections: {\n      optional: false,\n      validate: assertArrayOf(assertNodeType(\"Selection\"))\n    }\n  },\n  aliases: [\"AST\"]\n}], [\"Field\", {\n  builder: [\"name\", \"alias\", \"arguments\", \"directives\", \"selectionSet\"],\n  fields: {\n    name: {\n      optional: false,\n      validate: assertNodeType(\"Name\")\n    },\n    alias: {\n      optional: true,\n      validate: assertNodeType(\"Name\")\n    },\n    arguments: {\n      optional: true,\n      validate: assertArrayOf(assertNodeType(\"Argument\"))\n    },\n    directives: {\n      optional: true,\n      validate: assertArrayOf(assertNodeType(\"Directive\"))\n    },\n    selectionSet: {\n      optional: true,\n      validate: assertNodeType(\"SelectionSet\")\n    }\n  },\n  aliases: [\"AST\", \"Selection\"]\n}], [\"Argument\", {\n  builder: [\"name\", \"value\"],\n  fields: {\n    name: {\n      optional: false,\n      validate: assertNodeType(\"Name\")\n    },\n    value: {\n      optional: false,\n      validate: assertNodeType(\"Value\")\n    }\n  },\n  aliases: [\"AST\"]\n}], [\"FragmentSpread\", {\n  builder: [\"name\", \"directives\"],\n  fields: {\n    name: {\n      optional: false,\n      validate: assertNodeType(\"Name\")\n    },\n    directives: {\n      optional: true,\n      validate: assertArrayOf(assertNodeType(\"Directive\"))\n    }\n  },\n  aliases: [\"AST\", \"Selection\"]\n}], [\"InlineFragment\", {\n  builder: [\"selectionSet\", \"typeCondition\", \"directives\"],\n  fields: {\n    selectionSet: {\n      optional: false,\n      validate: assertNodeType(\"SelectionSet\")\n    },\n    typeCondition: {\n      optional: true,\n      validate: assertNodeType(\"NamedType\")\n    },\n    directives: {\n      optional: true,\n      validate: assertArrayOf(assertNodeType(\"Directive\"))\n    }\n  },\n  aliases: [\"AST\", \"Selection\"]\n}], [\"FragmentDefinition\", {\n  builder: [\"name\", \"typeCondition\", \"selectionSet\", \"directives\"],\n  fields: {\n    name: {\n      optional: false,\n      validate: assertNodeType(\"Name\")\n    },\n    typeCondition: {\n      optional: false,\n      validate: assertNodeType(\"NamedType\")\n    },\n    selectionSet: {\n      optional: false,\n      validate: assertNodeType(\"SelectionSet\")\n    },\n    directives: {\n      optional: true,\n      validate: assertArrayOf(assertNodeType(\"Directive\"))\n    }\n  },\n  aliases: [\"AST\", \"Definition\"]\n}], [\"IntValue\", {\n  builder: [\"value\"],\n  fields: {\n    value: {\n      optional: false,\n      validate: assertValueType(\"string\")\n    }\n  },\n  aliases: [\"AST\", \"Value\"]\n}], [\"FloatValue\", {\n  builder: [\"value\"],\n  fields: {\n    value: {\n      optional: false,\n      validate: assertValueType(\"string\")\n    }\n  },\n  aliases: [\"AST\", \"Value\"]\n}], [\"StringValue\", {\n  builder: [\"value\"],\n  fields: {\n    value: {\n      optional: false,\n      validate: assertValueType(\"string\")\n    }\n  },\n  aliases: [\"AST\", \"Value\"]\n}], [\"BooleanValue\", {\n  builder: [\"value\"],\n  fields: {\n    value: {\n      optional: false,\n      validate: assertValueType(\"boolean\")\n    }\n  },\n  aliases: [\"AST\", \"Value\"]\n}], [\"NullValue\", {\n  builder: [],\n  fields: {},\n  aliases: [\"AST\", \"Value\"]\n}], [\"EnumValue\", {\n  builder: [\"value\"],\n  fields: {\n    value: {\n      optional: false,\n      validate: assertValueType(\"string\")\n    }\n  },\n  aliases: [\"AST\", \"Value\"]\n}], [\"ListValue\", {\n  builder: [\"values\"],\n  fields: {\n    values: {\n      optional: false,\n      validate: assertArrayOf(assertNodeType(\"Value\"))\n    }\n  },\n  aliases: [\"AST\", \"Value\"]\n}], [\"ObjectValue\", {\n  builder: [\"fields\"],\n  fields: {\n    fields: {\n      optional: false,\n      validate: assertArrayOf(assertNodeType(\"ObjectField\"))\n    }\n  },\n  aliases: [\"AST\", \"Value\"]\n}], [\"ObjectField\", {\n  builder: [\"name\", \"value\"],\n  fields: {\n    name: {\n      optional: false,\n      validate: assertNodeType(\"Name\")\n    },\n    value: {\n      optional: false,\n      validate: assertNodeType(\"Value\")\n    }\n  },\n  aliases: [\"AST\"]\n}], [\"Directive\", {\n  builder: [\"name\", \"arguments\"],\n  fields: {\n    name: {\n      optional: false,\n      validate: assertNodeType(\"Name\")\n    },\n    arguments: {\n      optional: true,\n      validate: assertArrayOf(assertNodeType(\"Argument\"))\n    }\n  },\n  aliases: [\"AST\"]\n}], [\"NamedType\", {\n  builder: [\"name\"],\n  fields: {\n    name: {\n      optional: false,\n      validate: assertNodeType(\"Name\")\n    }\n  },\n  aliases: [\"AST\", \"Type\"]\n}], [\"ListType\", {\n  builder: [\"type\"],\n  fields: {\n    type: {\n      optional: false,\n      validate: assertNodeType(\"Type\")\n    }\n  },\n  aliases: [\"AST\", \"Type\"]\n}], [\"NonNullType\", {\n  builder: [\"type\"],\n  fields: {\n    type: {\n      optional: false,\n      validate: assertOneOf(\"NamedType\", \"ListType\")\n    }\n  },\n  aliases: [\"AST\", \"Type\"]\n}], [\"SchemaDefinition\", {\n  builder: [\"directives\", \"operationTypes\"],\n  fields: {\n    directives: {\n      optional: false,\n      validate: assertArrayOf(assertNodeType(\"Directive\"))\n    },\n    operationTypes: {\n      optional: false,\n      validate: assertArrayOf(assertNodeType(\"OperationTypeDefinition\"))\n    }\n  },\n  aliases: [\"AST\", \"TypeSystemDefinition\"]\n}], [\"OperationTypeDefinition\", {\n  builder: [\"operation\", \"type\"],\n  fields: {\n    operation: {\n      optional: false,\n      validate: assertValueType(\"string\")\n    },\n    type: {\n      optional: false,\n      validate: assertNodeType(\"NamedType\")\n    }\n  },\n  aliases: [\"AST\"]\n}], [\"ScalarTypeDefinition\", {\n  builder: [\"name\", \"directives\"],\n  fields: {\n    name: {\n      optional: false,\n      validate: assertNodeType(\"Name\")\n    },\n    directives: {\n      optional: true,\n      validate: assertArrayOf(assertNodeType(\"Directive\"))\n    }\n  },\n  aliases: [\"AST\", \"TypeDefinition\"]\n}], [\"ObjectTypeDefinition\", {\n  builder: [\"name\", \"fields\", \"interfaces\", \"directives\"],\n  fields: {\n    name: {\n      optional: false,\n      validate: assertNodeType(\"Name\")\n    },\n    fields: {\n      optional: false,\n      validate: assertArrayOf(assertNodeType(\"FieldDefinition\"))\n    },\n    interfaces: {\n      optional: true,\n      validate: assertArrayOf(assertNodeType(\"NamedType\"))\n    },\n    directives: {\n      optional: true,\n      validate: assertArrayOf(assertNodeType(\"Directive\"))\n    }\n  },\n  aliases: [\"AST\", \"TypeDefinition\"]\n}], [\"FieldDefinition\", {\n  builder: [\"name\", \"arguments\", \"type\", \"directives\"],\n  fields: {\n    name: {\n      optional: false,\n      validate: assertNodeType(\"Name\")\n    },\n    arguments: {\n      optional: false,\n      validate: assertArrayOf(assertNodeType(\"InputValueDefinition\"))\n    },\n    type: {\n      optional: false,\n      validate: assertNodeType(\"Type\")\n    },\n    directives: {\n      optional: true,\n      validate: assertArrayOf(assertNodeType(\"Directive\"))\n    }\n  },\n  aliases: [\"AST\"]\n}], [\"InputValueDefinition\", {\n  builder: [\"name\", \"type\", \"defaultValue\", \"directives\"],\n  fields: {\n    name: {\n      optional: false,\n      validate: assertNodeType(\"Name\")\n    },\n    type: {\n      optional: false,\n      validate: assertNodeType(\"Type\")\n    },\n    defaultValue: {\n      optional: true,\n      validate: assertNodeType(\"Value\")\n    },\n    directives: {\n      optional: true,\n      validate: assertArrayOf(assertNodeType(\"Directive\"))\n    }\n  },\n  aliases: [\"AST\"]\n}], [\"InterfaceTypeDefinition\", {\n  builder: [\"name\", \"fields\", \"directives\"],\n  fields: {\n    name: {\n      optional: false,\n      validate: assertNodeType(\"Name\")\n    },\n    fields: {\n      optional: false,\n      validate: assertArrayOf(assertNodeType(\"FieldDefinition\"))\n    },\n    directives: {\n      optional: true,\n      validate: assertArrayOf(assertNodeType(\"Directive\"))\n    }\n  },\n  aliases: [\"AST\", \"TypeDefinition\"]\n}], [\"UnionTypeDefinition\", {\n  builder: [\"name\", \"types\", \"directives\"],\n  fields: {\n    name: {\n      optional: false,\n      validate: assertNodeType(\"Name\")\n    },\n    types: {\n      optional: false,\n      validate: assertArrayOf(assertNodeType(\"NamedType\"))\n    },\n    directives: {\n      optional: true,\n      validate: assertArrayOf(assertNodeType(\"Directive\"))\n    }\n  },\n  aliases: [\"AST\", \"TypeDefinition\"]\n}], [\"EnumTypeDefinition\", {\n  builder: [\"name\", \"values\", \"directives\"],\n  fields: {\n    name: {\n      optional: false,\n      validate: assertNodeType(\"Name\")\n    },\n    values: {\n      optional: false,\n      validate: assertArrayOf(assertNodeType(\"EnumValueDefinition\"))\n    },\n    directives: {\n      optional: true,\n      validate: assertArrayOf(assertNodeType(\"Directive\"))\n    }\n  },\n  aliases: [\"AST\", \"TypeDefinition\"]\n}], [\"EnumValueDefinition\", {\n  builder: [\"name\", \"directives\"],\n  fields: {\n    name: {\n      optional: false,\n      validate: assertNodeType(\"Name\")\n    },\n    directives: {\n      optional: true,\n      validate: assertArrayOf(assertNodeType(\"Directive\"))\n    }\n  },\n  aliases: [\"AST\"]\n}], [\"InputObjectTypeDefinition\", {\n  builder: [\"name\", \"fields\", \"directives\"],\n  fields: {\n    name: {\n      optional: false,\n      validate: assertNodeType(\"Name\")\n    },\n    fields: {\n      optional: false,\n      validate: assertArrayOf(assertNodeType(\"InputValueDefinition\"))\n    },\n    directives: {\n      optional: true,\n      validate: assertArrayOf(assertNodeType(\"Directive\"))\n    }\n  },\n  aliases: [\"AST\", \"TypeDefinition\"]\n}], [\"TypeExtensionDefinition\", {\n  builder: [\"definition\"],\n  fields: {\n    definition: {\n      optional: false,\n      validate: assertNodeType(\"ObjectTypeDefinition\")\n    }\n  },\n  aliases: [\"AST\", \"TypeSystemDefinition\"]\n}], [\"DirectiveDefinition\", {\n  builder: [\"name\", \"locations\", \"arguments\"],\n  fields: {\n    name: {\n      optional: false,\n      validate: assertNodeType(\"Name\")\n    },\n    locations: {\n      optional: false,\n      validate: assertArrayOf(assertNodeType(\"Name\"))\n    },\n    arguments: {\n      optional: true,\n      validate: assertArrayOf(assertNodeType(\"InputValueDefinition\"))\n    }\n  },\n  aliases: [\"AST\", \"TypeSystemDefinition\"]\n}]];","/* global define */\n\n(function (root, pluralize) {\n  /* istanbul ignore else */\n  if (typeof require === 'function' && typeof exports === 'object' && typeof module === 'object') {\n    // Node.\n    module.exports = pluralize();\n  } else if (typeof define === 'function' && define.amd) {\n    // AMD, registers as an anonymous module.\n    define(function () {\n      return pluralize();\n    });\n  } else {\n    // Browser global.\n    root.pluralize = pluralize();\n  }\n})(this, function () {\n  // Rule storage - pluralize and singularize need to be run sequentially,\n  // while other rules can be optimized using an object for instant lookups.\n  var pluralRules = [];\n  var singularRules = [];\n  var uncountables = {};\n  var irregularPlurals = {};\n  var irregularSingles = {};\n\n  /**\n   * Sanitize a pluralization rule to a usable regular expression.\n   *\n   * @param  {(RegExp|string)} rule\n   * @return {RegExp}\n   */\n  function sanitizeRule (rule) {\n    if (typeof rule === 'string') {\n      return new RegExp('^' + rule + '$', 'i');\n    }\n\n    return rule;\n  }\n\n  /**\n   * Pass in a word token to produce a function that can replicate the case on\n   * another word.\n   *\n   * @param  {string}   word\n   * @param  {string}   token\n   * @return {Function}\n   */\n  function restoreCase (word, token) {\n    // Tokens are an exact match.\n    if (word === token) return token;\n\n    // Upper cased words. E.g. \"HELLO\".\n    if (word === word.toUpperCase()) return token.toUpperCase();\n\n    // Title cased words. E.g. \"Title\".\n    if (word[0] === word[0].toUpperCase()) {\n      return token.charAt(0).toUpperCase() + token.substr(1).toLowerCase();\n    }\n\n    // Lower cased words. E.g. \"test\".\n    return token.toLowerCase();\n  }\n\n  /**\n   * Interpolate a regexp string.\n   *\n   * @param  {string} str\n   * @param  {Array}  args\n   * @return {string}\n   */\n  function interpolate (str, args) {\n    return str.replace(/\\$(\\d{1,2})/g, function (match, index) {\n      return args[index] || '';\n    });\n  }\n\n  /**\n   * Replace a word using a rule.\n   *\n   * @param  {string} word\n   * @param  {Array}  rule\n   * @return {string}\n   */\n  function replace (word, rule) {\n    return word.replace(rule[0], function (match, index) {\n      var result = interpolate(rule[1], arguments);\n\n      if (match === '') {\n        return restoreCase(word[index - 1], result);\n      }\n\n      return restoreCase(match, result);\n    });\n  }\n\n  /**\n   * Sanitize a word by passing in the word and sanitization rules.\n   *\n   * @param  {string}   token\n   * @param  {string}   word\n   * @param  {Array}    rules\n   * @return {string}\n   */\n  function sanitizeWord (token, word, rules) {\n    // Empty string or doesn't need fixing.\n    if (!token.length || uncountables.hasOwnProperty(token)) {\n      return word;\n    }\n\n    var len = rules.length;\n\n    // Iterate over the sanitization rules and use the first one to match.\n    while (len--) {\n      var rule = rules[len];\n\n      if (rule[0].test(word)) return replace(word, rule);\n    }\n\n    return word;\n  }\n\n  /**\n   * Replace a word with the updated word.\n   *\n   * @param  {Object}   replaceMap\n   * @param  {Object}   keepMap\n   * @param  {Array}    rules\n   * @return {Function}\n   */\n  function replaceWord (replaceMap, keepMap, rules) {\n    return function (word) {\n      // Get the correct token and case restoration functions.\n      var token = word.toLowerCase();\n\n      // Check against the keep object map.\n      if (keepMap.hasOwnProperty(token)) {\n        return restoreCase(word, token);\n      }\n\n      // Check against the replacement map for a direct word replacement.\n      if (replaceMap.hasOwnProperty(token)) {\n        return restoreCase(word, replaceMap[token]);\n      }\n\n      // Run all the rules against the word.\n      return sanitizeWord(token, word, rules);\n    };\n  }\n\n  /**\n   * Check if a word is part of the map.\n   */\n  function checkWord (replaceMap, keepMap, rules, bool) {\n    return function (word) {\n      var token = word.toLowerCase();\n\n      if (keepMap.hasOwnProperty(token)) return true;\n      if (replaceMap.hasOwnProperty(token)) return false;\n\n      return sanitizeWord(token, token, rules) === token;\n    };\n  }\n\n  /**\n   * Pluralize or singularize a word based on the passed in count.\n   *\n   * @param  {string}  word\n   * @param  {number}  count\n   * @param  {boolean} inclusive\n   * @return {string}\n   */\n  function pluralize (word, count, inclusive) {\n    var pluralized = count === 1\n      ? pluralize.singular(word) : pluralize.plural(word);\n\n    return (inclusive ? count + ' ' : '') + pluralized;\n  }\n\n  /**\n   * Pluralize a word.\n   *\n   * @type {Function}\n   */\n  pluralize.plural = replaceWord(\n    irregularSingles, irregularPlurals, pluralRules\n  );\n\n  /**\n   * Check if a word is plural.\n   *\n   * @type {Function}\n   */\n  pluralize.isPlural = checkWord(\n    irregularSingles, irregularPlurals, pluralRules\n  );\n\n  /**\n   * Singularize a word.\n   *\n   * @type {Function}\n   */\n  pluralize.singular = replaceWord(\n    irregularPlurals, irregularSingles, singularRules\n  );\n\n  /**\n   * Check if a word is singular.\n   *\n   * @type {Function}\n   */\n  pluralize.isSingular = checkWord(\n    irregularPlurals, irregularSingles, singularRules\n  );\n\n  /**\n   * Add a pluralization rule to the collection.\n   *\n   * @param {(string|RegExp)} rule\n   * @param {string}          replacement\n   */\n  pluralize.addPluralRule = function (rule, replacement) {\n    pluralRules.push([sanitizeRule(rule), replacement]);\n  };\n\n  /**\n   * Add a singularization rule to the collection.\n   *\n   * @param {(string|RegExp)} rule\n   * @param {string}          replacement\n   */\n  pluralize.addSingularRule = function (rule, replacement) {\n    singularRules.push([sanitizeRule(rule), replacement]);\n  };\n\n  /**\n   * Add an uncountable word rule.\n   *\n   * @param {(string|RegExp)} word\n   */\n  pluralize.addUncountableRule = function (word) {\n    if (typeof word === 'string') {\n      uncountables[word.toLowerCase()] = true;\n      return;\n    }\n\n    // Set singular and plural references for the word.\n    pluralize.addPluralRule(word, '$0');\n    pluralize.addSingularRule(word, '$0');\n  };\n\n  /**\n   * Add an irregular word definition.\n   *\n   * @param {string} single\n   * @param {string} plural\n   */\n  pluralize.addIrregularRule = function (single, plural) {\n    plural = plural.toLowerCase();\n    single = single.toLowerCase();\n\n    irregularSingles[single] = plural;\n    irregularPlurals[plural] = single;\n  };\n\n  /**\n   * Irregular rules.\n   */\n  [\n    // Pronouns.\n    ['I', 'we'],\n    ['me', 'us'],\n    ['he', 'they'],\n    ['she', 'they'],\n    ['them', 'them'],\n    ['myself', 'ourselves'],\n    ['yourself', 'yourselves'],\n    ['itself', 'themselves'],\n    ['herself', 'themselves'],\n    ['himself', 'themselves'],\n    ['themself', 'themselves'],\n    ['is', 'are'],\n    ['was', 'were'],\n    ['has', 'have'],\n    ['this', 'these'],\n    ['that', 'those'],\n    // Words ending in with a consonant and `o`.\n    ['echo', 'echoes'],\n    ['dingo', 'dingoes'],\n    ['volcano', 'volcanoes'],\n    ['tornado', 'tornadoes'],\n    ['torpedo', 'torpedoes'],\n    // Ends with `us`.\n    ['genus', 'genera'],\n    ['viscus', 'viscera'],\n    // Ends with `ma`.\n    ['stigma', 'stigmata'],\n    ['stoma', 'stomata'],\n    ['dogma', 'dogmata'],\n    ['lemma', 'lemmata'],\n    ['schema', 'schemata'],\n    ['anathema', 'anathemata'],\n    // Other irregular rules.\n    ['ox', 'oxen'],\n    ['axe', 'axes'],\n    ['die', 'dice'],\n    ['yes', 'yeses'],\n    ['foot', 'feet'],\n    ['eave', 'eaves'],\n    ['goose', 'geese'],\n    ['tooth', 'teeth'],\n    ['quiz', 'quizzes'],\n    ['human', 'humans'],\n    ['proof', 'proofs'],\n    ['carve', 'carves'],\n    ['valve', 'valves'],\n    ['looey', 'looies'],\n    ['thief', 'thieves'],\n    ['groove', 'grooves'],\n    ['pickaxe', 'pickaxes'],\n    ['whiskey', 'whiskies']\n  ].forEach(function (rule) {\n    return pluralize.addIrregularRule(rule[0], rule[1]);\n  });\n\n  /**\n   * Pluralization rules.\n   */\n  [\n    [/s?$/i, 's'],\n    [/[^\\u0000-\\u007F]$/i, '$0'],\n    [/([^aeiou]ese)$/i, '$1'],\n    [/(ax|test)is$/i, '$1es'],\n    [/(alias|[^aou]us|tlas|gas|ris)$/i, '$1es'],\n    [/(e[mn]u)s?$/i, '$1s'],\n    [/([^l]ias|[aeiou]las|[emjzr]as|[iu]am)$/i, '$1'],\n    [/(alumn|syllab|octop|vir|radi|nucle|fung|cact|stimul|termin|bacill|foc|uter|loc|strat)(?:us|i)$/i, '$1i'],\n    [/(alumn|alg|vertebr)(?:a|ae)$/i, '$1ae'],\n    [/(seraph|cherub)(?:im)?$/i, '$1im'],\n    [/(her|at|gr)o$/i, '$1oes'],\n    [/(agend|addend|millenni|dat|extrem|bacteri|desiderat|strat|candelabr|errat|ov|symposi|curricul|automat|quor)(?:a|um)$/i, '$1a'],\n    [/(apheli|hyperbat|periheli|asyndet|noumen|phenomen|criteri|organ|prolegomen|hedr|automat)(?:a|on)$/i, '$1a'],\n    [/sis$/i, 'ses'],\n    [/(?:(kni|wi|li)fe|(ar|l|ea|eo|oa|hoo)f)$/i, '$1$2ves'],\n    [/([^aeiouy]|qu)y$/i, '$1ies'],\n    [/([^ch][ieo][ln])ey$/i, '$1ies'],\n    [/(x|ch|ss|sh|zz)$/i, '$1es'],\n    [/(matr|cod|mur|sil|vert|ind|append)(?:ix|ex)$/i, '$1ices'],\n    [/(m|l)(?:ice|ouse)$/i, '$1ice'],\n    [/(pe)(?:rson|ople)$/i, '$1ople'],\n    [/(child)(?:ren)?$/i, '$1ren'],\n    [/eaux$/i, '$0'],\n    [/m[ae]n$/i, 'men'],\n    ['thou', 'you']\n  ].forEach(function (rule) {\n    return pluralize.addPluralRule(rule[0], rule[1]);\n  });\n\n  /**\n   * Singularization rules.\n   */\n  [\n    [/s$/i, ''],\n    [/(ss)$/i, '$1'],\n    [/(wi|kni|(?:after|half|high|low|mid|non|night|[^\\w]|^)li)ves$/i, '$1fe'],\n    [/(ar|(?:wo|[ae])l|[eo][ao])ves$/i, '$1f'],\n    [/ies$/i, 'y'],\n    [/\\b([pl]|zomb|(?:neck|cross)?t|coll|faer|food|gen|goon|group|lass|talk|goal|cut)ies$/i, '$1ie'],\n    [/\\b(mon|smil)ies$/i, '$1ey'],\n    [/(m|l)ice$/i, '$1ouse'],\n    [/(seraph|cherub)im$/i, '$1'],\n    [/(x|ch|ss|sh|zz|tto|go|cho|alias|[^aou]us|tlas|gas|(?:her|at|gr)o|ris)(?:es)?$/i, '$1'],\n    [/(analy|ba|diagno|parenthe|progno|synop|the|empha|cri)(?:sis|ses)$/i, '$1sis'],\n    [/(movie|twelve|abuse|e[mn]u)s$/i, '$1'],\n    [/(test)(?:is|es)$/i, '$1is'],\n    [/(alumn|syllab|octop|vir|radi|nucle|fung|cact|stimul|termin|bacill|foc|uter|loc|strat)(?:us|i)$/i, '$1us'],\n    [/(agend|addend|millenni|dat|extrem|bacteri|desiderat|strat|candelabr|errat|ov|symposi|curricul|quor)a$/i, '$1um'],\n    [/(apheli|hyperbat|periheli|asyndet|noumen|phenomen|criteri|organ|prolegomen|hedr|automat)a$/i, '$1on'],\n    [/(alumn|alg|vertebr)ae$/i, '$1a'],\n    [/(cod|mur|sil|vert|ind)ices$/i, '$1ex'],\n    [/(matr|append)ices$/i, '$1ix'],\n    [/(pe)(rson|ople)$/i, '$1rson'],\n    [/(child)ren$/i, '$1'],\n    [/(eau)x?$/i, '$1'],\n    [/men$/i, 'man']\n  ].forEach(function (rule) {\n    return pluralize.addSingularRule(rule[0], rule[1]);\n  });\n\n  /**\n   * Uncountable rules.\n   */\n  [\n    // Singular words with no plurals.\n    'adulthood',\n    'advice',\n    'agenda',\n    'aid',\n    'alcohol',\n    'ammo',\n    'anime',\n    'athletics',\n    'audio',\n    'bison',\n    'blood',\n    'bream',\n    'buffalo',\n    'butter',\n    'carp',\n    'cash',\n    'chassis',\n    'chess',\n    'clothing',\n    'cod',\n    'commerce',\n    'cooperation',\n    'corps',\n    'debris',\n    'diabetes',\n    'digestion',\n    'elk',\n    'energy',\n    'equipment',\n    'excretion',\n    'expertise',\n    'flounder',\n    'fun',\n    'gallows',\n    'garbage',\n    'graffiti',\n    'headquarters',\n    'health',\n    'herpes',\n    'highjinks',\n    'homework',\n    'housework',\n    'information',\n    'jeans',\n    'justice',\n    'kudos',\n    'labour',\n    'literature',\n    'machinery',\n    'mackerel',\n    'mail',\n    'media',\n    'mews',\n    'moose',\n    'music',\n    'manga',\n    'news',\n    'pike',\n    'plankton',\n    'pliers',\n    'pollution',\n    'premises',\n    'rain',\n    'research',\n    'rice',\n    'salmon',\n    'scissors',\n    'series',\n    'sewage',\n    'shambles',\n    'shrimp',\n    'species',\n    'staff',\n    'swine',\n    'tennis',\n    'traffic',\n    'transporation',\n    'trout',\n    'tuna',\n    'wealth',\n    'welfare',\n    'whiting',\n    'wildebeest',\n    'wildlife',\n    'you',\n    // Regexes.\n    /[^aeiou]ese$/i, // \"chinese\", \"japanese\"\n    /deer$/i, // \"deer\", \"reindeer\"\n    /fish$/i, // \"fish\", \"blowfish\", \"angelfish\"\n    /measles$/i,\n    /o[iu]s$/i, // \"carnivorous\"\n    /pox$/i, // \"chickpox\", \"smallpox\"\n    /sheep$/i\n  ].forEach(pluralize.addUncountableRule);\n\n  return pluralize;\n});\n","module.exports = function(originalModule) {\n\tif (!originalModule.webpackPolyfill) {\n\t\tvar module = Object.create(originalModule);\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"exports\", {\n\t\t\tenumerable: true\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n","export default function symbolObservablePonyfill(root) {\n\tvar result;\n\tvar Symbol = root.Symbol;\n\n\tif (typeof Symbol === 'function') {\n\t\tif (Symbol.observable) {\n\t\t\tresult = Symbol.observable;\n\t\t} else {\n\t\t\tresult = Symbol('observable');\n\t\t\tSymbol.observable = result;\n\t\t}\n\t} else {\n\t\tresult = '@@observable';\n\t}\n\n\treturn result;\n};\n","module.exports = require('./lib/Observable.js').Observable;\n","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Observable = void 0;\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n// === Symbol Support ===\nvar hasSymbols = function () {\n  return typeof Symbol === 'function';\n};\n\nvar hasSymbol = function (name) {\n  return hasSymbols() && Boolean(Symbol[name]);\n};\n\nvar getSymbol = function (name) {\n  return hasSymbol(name) ? Symbol[name] : '@@' + name;\n};\n\nif (hasSymbols() && !hasSymbol('observable')) {\n  Symbol.observable = Symbol('observable');\n}\n\nvar SymbolIterator = getSymbol('iterator');\nvar SymbolObservable = getSymbol('observable');\nvar SymbolSpecies = getSymbol('species'); // === Abstract Operations ===\n\nfunction getMethod(obj, key) {\n  var value = obj[key];\n  if (value == null) return undefined;\n  if (typeof value !== 'function') throw new TypeError(value + ' is not a function');\n  return value;\n}\n\nfunction getSpecies(obj) {\n  var ctor = obj.constructor;\n\n  if (ctor !== undefined) {\n    ctor = ctor[SymbolSpecies];\n\n    if (ctor === null) {\n      ctor = undefined;\n    }\n  }\n\n  return ctor !== undefined ? ctor : Observable;\n}\n\nfunction isObservable(x) {\n  return x instanceof Observable; // SPEC: Brand check\n}\n\nfunction hostReportError(e) {\n  if (hostReportError.log) {\n    hostReportError.log(e);\n  } else {\n    setTimeout(function () {\n      throw e;\n    });\n  }\n}\n\nfunction enqueue(fn) {\n  Promise.resolve().then(function () {\n    try {\n      fn();\n    } catch (e) {\n      hostReportError(e);\n    }\n  });\n}\n\nfunction cleanupSubscription(subscription) {\n  var cleanup = subscription._cleanup;\n  if (cleanup === undefined) return;\n  subscription._cleanup = undefined;\n\n  if (!cleanup) {\n    return;\n  }\n\n  try {\n    if (typeof cleanup === 'function') {\n      cleanup();\n    } else {\n      var unsubscribe = getMethod(cleanup, 'unsubscribe');\n\n      if (unsubscribe) {\n        unsubscribe.call(cleanup);\n      }\n    }\n  } catch (e) {\n    hostReportError(e);\n  }\n}\n\nfunction closeSubscription(subscription) {\n  subscription._observer = undefined;\n  subscription._queue = undefined;\n  subscription._state = 'closed';\n}\n\nfunction flushSubscription(subscription) {\n  var queue = subscription._queue;\n\n  if (!queue) {\n    return;\n  }\n\n  subscription._queue = undefined;\n  subscription._state = 'ready';\n\n  for (var i = 0; i < queue.length; ++i) {\n    notifySubscription(subscription, queue[i].type, queue[i].value);\n    if (subscription._state === 'closed') break;\n  }\n}\n\nfunction notifySubscription(subscription, type, value) {\n  subscription._state = 'running';\n  var observer = subscription._observer;\n\n  try {\n    var m = getMethod(observer, type);\n\n    switch (type) {\n      case 'next':\n        if (m) m.call(observer, value);\n        break;\n\n      case 'error':\n        closeSubscription(subscription);\n        if (m) m.call(observer, value);else throw value;\n        break;\n\n      case 'complete':\n        closeSubscription(subscription);\n        if (m) m.call(observer);\n        break;\n    }\n  } catch (e) {\n    hostReportError(e);\n  }\n\n  if (subscription._state === 'closed') cleanupSubscription(subscription);else if (subscription._state === 'running') subscription._state = 'ready';\n}\n\nfunction onNotify(subscription, type, value) {\n  if (subscription._state === 'closed') return;\n\n  if (subscription._state === 'buffering') {\n    subscription._queue.push({\n      type: type,\n      value: value\n    });\n\n    return;\n  }\n\n  if (subscription._state !== 'ready') {\n    subscription._state = 'buffering';\n    subscription._queue = [{\n      type: type,\n      value: value\n    }];\n    enqueue(function () {\n      return flushSubscription(subscription);\n    });\n    return;\n  }\n\n  notifySubscription(subscription, type, value);\n}\n\nvar Subscription =\n/*#__PURE__*/\nfunction () {\n  function Subscription(observer, subscriber) {\n    _classCallCheck(this, Subscription);\n\n    // ASSERT: observer is an object\n    // ASSERT: subscriber is callable\n    this._cleanup = undefined;\n    this._observer = observer;\n    this._queue = undefined;\n    this._state = 'initializing';\n    var subscriptionObserver = new SubscriptionObserver(this);\n\n    try {\n      this._cleanup = subscriber.call(undefined, subscriptionObserver);\n    } catch (e) {\n      subscriptionObserver.error(e);\n    }\n\n    if (this._state === 'initializing') this._state = 'ready';\n  }\n\n  _createClass(Subscription, [{\n    key: \"unsubscribe\",\n    value: function unsubscribe() {\n      if (this._state !== 'closed') {\n        closeSubscription(this);\n        cleanupSubscription(this);\n      }\n    }\n  }, {\n    key: \"closed\",\n    get: function () {\n      return this._state === 'closed';\n    }\n  }]);\n\n  return Subscription;\n}();\n\nvar SubscriptionObserver =\n/*#__PURE__*/\nfunction () {\n  function SubscriptionObserver(subscription) {\n    _classCallCheck(this, SubscriptionObserver);\n\n    this._subscription = subscription;\n  }\n\n  _createClass(SubscriptionObserver, [{\n    key: \"next\",\n    value: function next(value) {\n      onNotify(this._subscription, 'next', value);\n    }\n  }, {\n    key: \"error\",\n    value: function error(value) {\n      onNotify(this._subscription, 'error', value);\n    }\n  }, {\n    key: \"complete\",\n    value: function complete() {\n      onNotify(this._subscription, 'complete');\n    }\n  }, {\n    key: \"closed\",\n    get: function () {\n      return this._subscription._state === 'closed';\n    }\n  }]);\n\n  return SubscriptionObserver;\n}();\n\nvar Observable =\n/*#__PURE__*/\nfunction () {\n  function Observable(subscriber) {\n    _classCallCheck(this, Observable);\n\n    if (!(this instanceof Observable)) throw new TypeError('Observable cannot be called as a function');\n    if (typeof subscriber !== 'function') throw new TypeError('Observable initializer must be a function');\n    this._subscriber = subscriber;\n  }\n\n  _createClass(Observable, [{\n    key: \"subscribe\",\n    value: function subscribe(observer) {\n      if (typeof observer !== 'object' || observer === null) {\n        observer = {\n          next: observer,\n          error: arguments[1],\n          complete: arguments[2]\n        };\n      }\n\n      return new Subscription(observer, this._subscriber);\n    }\n  }, {\n    key: \"forEach\",\n    value: function forEach(fn) {\n      var _this = this;\n\n      return new Promise(function (resolve, reject) {\n        if (typeof fn !== 'function') {\n          reject(new TypeError(fn + ' is not a function'));\n          return;\n        }\n\n        function done() {\n          subscription.unsubscribe();\n          resolve();\n        }\n\n        var subscription = _this.subscribe({\n          next: function (value) {\n            try {\n              fn(value, done);\n            } catch (e) {\n              reject(e);\n              subscription.unsubscribe();\n            }\n          },\n          error: reject,\n          complete: resolve\n        });\n      });\n    }\n  }, {\n    key: \"map\",\n    value: function map(fn) {\n      var _this2 = this;\n\n      if (typeof fn !== 'function') throw new TypeError(fn + ' is not a function');\n      var C = getSpecies(this);\n      return new C(function (observer) {\n        return _this2.subscribe({\n          next: function (value) {\n            try {\n              value = fn(value);\n            } catch (e) {\n              return observer.error(e);\n            }\n\n            observer.next(value);\n          },\n          error: function (e) {\n            observer.error(e);\n          },\n          complete: function () {\n            observer.complete();\n          }\n        });\n      });\n    }\n  }, {\n    key: \"filter\",\n    value: function filter(fn) {\n      var _this3 = this;\n\n      if (typeof fn !== 'function') throw new TypeError(fn + ' is not a function');\n      var C = getSpecies(this);\n      return new C(function (observer) {\n        return _this3.subscribe({\n          next: function (value) {\n            try {\n              if (!fn(value)) return;\n            } catch (e) {\n              return observer.error(e);\n            }\n\n            observer.next(value);\n          },\n          error: function (e) {\n            observer.error(e);\n          },\n          complete: function () {\n            observer.complete();\n          }\n        });\n      });\n    }\n  }, {\n    key: \"reduce\",\n    value: function reduce(fn) {\n      var _this4 = this;\n\n      if (typeof fn !== 'function') throw new TypeError(fn + ' is not a function');\n      var C = getSpecies(this);\n      var hasSeed = arguments.length > 1;\n      var hasValue = false;\n      var seed = arguments[1];\n      var acc = seed;\n      return new C(function (observer) {\n        return _this4.subscribe({\n          next: function (value) {\n            var first = !hasValue;\n            hasValue = true;\n\n            if (!first || hasSeed) {\n              try {\n                acc = fn(acc, value);\n              } catch (e) {\n                return observer.error(e);\n              }\n            } else {\n              acc = value;\n            }\n          },\n          error: function (e) {\n            observer.error(e);\n          },\n          complete: function () {\n            if (!hasValue && !hasSeed) return observer.error(new TypeError('Cannot reduce an empty sequence'));\n            observer.next(acc);\n            observer.complete();\n          }\n        });\n      });\n    }\n  }, {\n    key: \"concat\",\n    value: function concat() {\n      var _this5 = this;\n\n      for (var _len = arguments.length, sources = new Array(_len), _key = 0; _key < _len; _key++) {\n        sources[_key] = arguments[_key];\n      }\n\n      var C = getSpecies(this);\n      return new C(function (observer) {\n        var subscription;\n        var index = 0;\n\n        function startNext(next) {\n          subscription = next.subscribe({\n            next: function (v) {\n              observer.next(v);\n            },\n            error: function (e) {\n              observer.error(e);\n            },\n            complete: function () {\n              if (index === sources.length) {\n                subscription = undefined;\n                observer.complete();\n              } else {\n                startNext(C.from(sources[index++]));\n              }\n            }\n          });\n        }\n\n        startNext(_this5);\n        return function () {\n          if (subscription) {\n            subscription.unsubscribe();\n            subscription = undefined;\n          }\n        };\n      });\n    }\n  }, {\n    key: \"flatMap\",\n    value: function flatMap(fn) {\n      var _this6 = this;\n\n      if (typeof fn !== 'function') throw new TypeError(fn + ' is not a function');\n      var C = getSpecies(this);\n      return new C(function (observer) {\n        var subscriptions = [];\n\n        var outer = _this6.subscribe({\n          next: function (value) {\n            if (fn) {\n              try {\n                value = fn(value);\n              } catch (e) {\n                return observer.error(e);\n              }\n            }\n\n            var inner = C.from(value).subscribe({\n              next: function (value) {\n                observer.next(value);\n              },\n              error: function (e) {\n                observer.error(e);\n              },\n              complete: function () {\n                var i = subscriptions.indexOf(inner);\n                if (i >= 0) subscriptions.splice(i, 1);\n                completeIfDone();\n              }\n            });\n            subscriptions.push(inner);\n          },\n          error: function (e) {\n            observer.error(e);\n          },\n          complete: function () {\n            completeIfDone();\n          }\n        });\n\n        function completeIfDone() {\n          if (outer.closed && subscriptions.length === 0) observer.complete();\n        }\n\n        return function () {\n          subscriptions.forEach(function (s) {\n            return s.unsubscribe();\n          });\n          outer.unsubscribe();\n        };\n      });\n    }\n  }, {\n    key: SymbolObservable,\n    value: function () {\n      return this;\n    }\n  }], [{\n    key: \"from\",\n    value: function from(x) {\n      var C = typeof this === 'function' ? this : Observable;\n      if (x == null) throw new TypeError(x + ' is not an object');\n      var method = getMethod(x, SymbolObservable);\n\n      if (method) {\n        var observable = method.call(x);\n        if (Object(observable) !== observable) throw new TypeError(observable + ' is not an object');\n        if (isObservable(observable) && observable.constructor === C) return observable;\n        return new C(function (observer) {\n          return observable.subscribe(observer);\n        });\n      }\n\n      if (hasSymbol('iterator')) {\n        method = getMethod(x, SymbolIterator);\n\n        if (method) {\n          return new C(function (observer) {\n            enqueue(function () {\n              if (observer.closed) return;\n              var _iteratorNormalCompletion = true;\n              var _didIteratorError = false;\n              var _iteratorError = undefined;\n\n              try {\n                for (var _iterator = method.call(x)[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n                  var _item = _step.value;\n                  observer.next(_item);\n                  if (observer.closed) return;\n                }\n              } catch (err) {\n                _didIteratorError = true;\n                _iteratorError = err;\n              } finally {\n                try {\n                  if (!_iteratorNormalCompletion && _iterator.return != null) {\n                    _iterator.return();\n                  }\n                } finally {\n                  if (_didIteratorError) {\n                    throw _iteratorError;\n                  }\n                }\n              }\n\n              observer.complete();\n            });\n          });\n        }\n      }\n\n      if (Array.isArray(x)) {\n        return new C(function (observer) {\n          enqueue(function () {\n            if (observer.closed) return;\n\n            for (var i = 0; i < x.length; ++i) {\n              observer.next(x[i]);\n              if (observer.closed) return;\n            }\n\n            observer.complete();\n          });\n        });\n      }\n\n      throw new TypeError(x + ' is not observable');\n    }\n  }, {\n    key: \"of\",\n    value: function of() {\n      for (var _len2 = arguments.length, items = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        items[_key2] = arguments[_key2];\n      }\n\n      var C = typeof this === 'function' ? this : Observable;\n      return new C(function (observer) {\n        enqueue(function () {\n          if (observer.closed) return;\n\n          for (var i = 0; i < items.length; ++i) {\n            observer.next(items[i]);\n            if (observer.closed) return;\n          }\n\n          observer.complete();\n        });\n      });\n    }\n  }, {\n    key: SymbolSpecies,\n    get: function () {\n      return this;\n    }\n  }]);\n\n  return Observable;\n}();\n\nexports.Observable = Observable;\n\nif (hasSymbols()) {\n  Object.defineProperty(Observable, Symbol('extensions'), {\n    value: {\n      symbol: SymbolObservable,\n      hostReportError: hostReportError\n    },\n    configurable: true\n  });\n}","'use strict';\n\nmodule.exports = function (data, opts) {\n    if (!opts) opts = {};\n    if (typeof opts === 'function') opts = { cmp: opts };\n    var cycles = (typeof opts.cycles === 'boolean') ? opts.cycles : false;\n\n    var cmp = opts.cmp && (function (f) {\n        return function (node) {\n            return function (a, b) {\n                var aobj = { key: a, value: node[a] };\n                var bobj = { key: b, value: node[b] };\n                return f(aobj, bobj);\n            };\n        };\n    })(opts.cmp);\n\n    var seen = [];\n    return (function stringify (node) {\n        if (node && node.toJSON && typeof node.toJSON === 'function') {\n            node = node.toJSON();\n        }\n\n        if (node === undefined) return;\n        if (typeof node == 'number') return isFinite(node) ? '' + node : 'null';\n        if (typeof node !== 'object') return JSON.stringify(node);\n\n        var i, out;\n        if (Array.isArray(node)) {\n            out = '[';\n            for (i = 0; i < node.length; i++) {\n                if (i) out += ',';\n                out += stringify(node[i]) || 'null';\n            }\n            return out + ']';\n        }\n\n        if (node === null) return 'null';\n\n        if (seen.indexOf(node) !== -1) {\n            if (cycles) return JSON.stringify('__cycle__');\n            throw new TypeError('Converting circular structure to JSON');\n        }\n\n        var seenIndex = seen.push(node) - 1;\n        var keys = Object.keys(node).sort(cmp && cmp(node));\n        out = '';\n        for (i = 0; i < keys.length; i++) {\n            var key = keys[i];\n            var value = stringify(node[key]);\n\n            if (!value) continue;\n            if (out) out += ',';\n            out += JSON.stringify(key) + ':' + value;\n        }\n        seen.splice(seenIndex, 1);\n        return '{' + out + '}';\n    })(data);\n};\n","var __makeTemplateObject = (this && this.__makeTemplateObject) || function (cooked, raw) {\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\n    return cooked;\n};\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nvar __spreadArrays = (this && this.__spreadArrays) || function () {\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n            r[k] = a[j];\n    return r;\n};\nimport { getIntrospectionQuery } from 'graphql';\nimport gql from 'graphql-tag';\nimport { GET_LIST, GET_ONE } from 'ra-core';\nimport { ALL_TYPES } from './constants';\nexport var isResourceIncluded = function (_a) {\n    var include = _a.include, type = _a.type;\n    if (Array.isArray(include)) {\n        return include.includes(type.name);\n    }\n    if (typeof include === 'function') {\n        return include(type);\n    }\n    return false;\n};\nexport var isResourceExcluded = function (_a) {\n    var exclude = _a.exclude, type = _a.type;\n    if (Array.isArray(exclude)) {\n        return exclude.includes(type.name);\n    }\n    if (typeof exclude === 'function') {\n        return exclude(type);\n    }\n    return false;\n};\n/**\n * @param {ApolloClient} client The Apollo client\n * @param {Object} options The introspection options\n */\nexport default (function (client, options) { return __awaiter(void 0, void 0, void 0, function () {\n    var schema, _a, queries, types, isResource, buildResource, filteredResources, resources;\n    return __generator(this, function (_b) {\n        switch (_b.label) {\n            case 0:\n                if (!options.schema) return [3 /*break*/, 1];\n                _a = options.schema;\n                return [3 /*break*/, 3];\n            case 1: return [4 /*yield*/, client\n                    .query({\n                    fetchPolicy: 'network-only',\n                    query: gql(templateObject_1 || (templateObject_1 = __makeTemplateObject([\"\\n                      \", \"\\n                  \"], [\"\\n                      \", \"\\n                  \"])), getIntrospectionQuery()),\n                })\n                    .then(function (_a) {\n                    var __schema = _a.data.__schema;\n                    return __schema;\n                })];\n            case 2:\n                _a = _b.sent();\n                _b.label = 3;\n            case 3:\n                schema = _a;\n                queries = schema.types.reduce(function (acc, type) {\n                    if (type.name !== (schema.queryType && schema.queryType.name) &&\n                        type.name !== (schema.mutationType && schema.mutationType.name))\n                        return acc;\n                    return __spreadArrays(acc, type.fields);\n                }, []);\n                types = schema.types.filter(function (type) {\n                    return type.name !== (schema.queryType && schema.queryType.name) &&\n                        type.name !== (schema.mutationType && schema.mutationType.name);\n                });\n                isResource = function (type) {\n                    if (isResourceIncluded(__assign({ type: type }, options)))\n                        return true;\n                    if (isResourceExcluded(__assign({ type: type }, options)))\n                        return false;\n                    return (queries.some(function (query) { return query.name === options.operationNames[GET_LIST](type); }) &&\n                        queries.some(function (query) { return query.name === options.operationNames[GET_ONE](type); }));\n                };\n                buildResource = function (type) {\n                    return ALL_TYPES.reduce(function (acc, aorFetchType) {\n                        var _a;\n                        return (__assign(__assign({}, acc), (_a = {}, _a[aorFetchType] = queries.find(function (query) {\n                            return options.operationNames[aorFetchType] &&\n                                query.name ===\n                                    options.operationNames[aorFetchType](type);\n                        }), _a)));\n                    }, { type: type });\n                };\n                filteredResources = types.filter(isResource);\n                resources = filteredResources.map(buildResource);\n                return [2 /*return*/, {\n                        types: types,\n                        queries: queries,\n                        resources: resources,\n                        schema: schema,\n                    }];\n        }\n    });\n}); });\nvar templateObject_1;\n","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nvar _a;\nimport merge from 'lodash/merge';\nimport get from 'lodash/get';\nimport pluralize from 'pluralize';\nimport { GET_LIST, GET_ONE, GET_MANY, GET_MANY_REFERENCE, CREATE, UPDATE, DELETE, } from 'ra-core';\nimport buildApolloClient from './buildApolloClient';\nimport { QUERY_TYPES as INNER_QUERY_TYPES, MUTATION_TYPES as INNER_MUTATION_TYPES, ALL_TYPES as INNER_ALL_TYPES, } from './constants';\nimport defaultResolveIntrospection from './introspection';\nexport var QUERY_TYPES = INNER_QUERY_TYPES;\nexport var MUTATION_TYPES = INNER_MUTATION_TYPES;\nexport var ALL_TYPES = INNER_ALL_TYPES;\nvar defaultOptions = {\n    resolveIntrospection: defaultResolveIntrospection,\n    introspection: {\n        operationNames: (_a = {},\n            _a[GET_LIST] = function (resource) { return \"all\" + pluralize(resource.name); },\n            _a[GET_ONE] = function (resource) { return \"\" + resource.name; },\n            _a[GET_MANY] = function (resource) { return \"all\" + pluralize(resource.name); },\n            _a[GET_MANY_REFERENCE] = function (resource) { return \"all\" + pluralize(resource.name); },\n            _a[CREATE] = function (resource) { return \"create\" + resource.name; },\n            _a[UPDATE] = function (resource) { return \"update\" + resource.name; },\n            _a[DELETE] = function (resource) { return \"delete\" + resource.name; },\n            _a),\n        exclude: undefined,\n        include: undefined,\n    },\n};\nvar getOptions = function (options, aorFetchType, resource) {\n    if (typeof options === 'function') {\n        return options(resource, aorFetchType);\n    }\n    return options;\n};\nexport default (function (options) { return __awaiter(void 0, void 0, void 0, function () {\n    var _a, clientObject, clientOptions, introspection, resolveIntrospection, buildQueryFactory, _b, override, otherOptions, client, introspectionResults, buildQuery, raDataProvider;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                _a = merge({}, defaultOptions, options), clientObject = _a.client, clientOptions = _a.clientOptions, introspection = _a.introspection, resolveIntrospection = _a.resolveIntrospection, buildQueryFactory = _a.buildQuery, _b = _a.override, override = _b === void 0 ? {} : _b, otherOptions = __rest(_a, [\"client\", \"clientOptions\", \"introspection\", \"resolveIntrospection\", \"buildQuery\", \"override\"]);\n                if (override && process.env.NODE_ENV === 'production') {\n                    console.warn(\n                    // eslint-disable-line\n                    'The override option is deprecated. You should instead wrap the buildQuery function provided by the dataProvider you use.');\n                }\n                client = clientObject || buildApolloClient(clientOptions);\n                if (!introspection) return [3 /*break*/, 2];\n                return [4 /*yield*/, resolveIntrospection(client, introspection)];\n            case 1:\n                introspectionResults = _c.sent();\n                _c.label = 2;\n            case 2:\n                buildQuery = buildQueryFactory(introspectionResults, otherOptions);\n                raDataProvider = function (aorFetchType, resource, params) {\n                    var overriddenBuildQuery = get(override, resource + \".\" + aorFetchType);\n                    try {\n                        var _a = overriddenBuildQuery\n                            ? __assign(__assign({}, buildQuery(aorFetchType, resource, params)), overriddenBuildQuery(params)) : buildQuery(aorFetchType, resource, params), parseResponse_1 = _a.parseResponse, query = __rest(_a, [\"parseResponse\"]);\n                        var operation = getQueryOperation(query.query);\n                        if (operation === 'query') {\n                            var apolloQuery_1 = __assign(__assign(__assign({}, query), { fetchPolicy: 'network-only' }), getOptions(otherOptions.query, aorFetchType, resource));\n                            return client\n                                .query(apolloQuery_1)\n                                .then(function (response) { return parseResponse_1(response); });\n                        }\n                        var apolloQuery = __assign({ mutation: query.query, variables: query.variables }, getOptions(otherOptions.mutation, aorFetchType, resource));\n                        return client.mutate(apolloQuery).then(parseResponse_1);\n                    }\n                    catch (e) {\n                        return Promise.reject(e);\n                    }\n                };\n                raDataProvider.observeRequest = function (aorFetchType, resource, params) {\n                    var _a = buildQuery(aorFetchType, resource, params), parseResponse = _a.parseResponse, query = __rest(_a, [\"parseResponse\"]);\n                    var apolloQuery = __assign(__assign({}, query), getOptions(otherOptions.watchQuery, aorFetchType, resource));\n                    return client.watchQuery(apolloQuery).then(parseResponse);\n                };\n                raDataProvider.saga = function () { };\n                return [2 /*return*/, raDataProvider];\n        }\n    });\n}); });\nvar getQueryOperation = function (query) {\n    if (query && query.definitions && query.definitions.length > 0) {\n        return query.definitions[0].operation;\n    }\n    throw new Error('Unable to determine the query operation');\n};\n","import buildVariables from './buildVariables';\nimport buildGqlQuery from './buildGqlQuery';\nimport getResponseParser from './getResponseParser';\nexport var buildQueryFactory = function (buildVariablesImpl, buildGqlQueryImpl, getResponseParserImpl) { return function (introspectionResults) {\n    var knownResources = introspectionResults.resources.map(function (r) { return r.type.name; });\n    return function (aorFetchType, resourceName, params) {\n        var resource = introspectionResults.resources.find(function (r) { return r.type.name === resourceName; });\n        if (!resource) {\n            throw new Error(\"Unknown resource \" + resourceName + \". Make sure it has been declared on your server side schema. Known resources are \" + knownResources.join(', '));\n        }\n        var queryType = resource[aorFetchType];\n        if (!queryType) {\n            throw new Error(\"No query or mutation matching fetch type \" + aorFetchType + \" could be found for resource \" + resource.type.name);\n        }\n        var variables = buildVariablesImpl(introspectionResults)(resource, aorFetchType, params, queryType);\n        var query = buildGqlQueryImpl(introspectionResults)(resource, aorFetchType, queryType, variables);\n        var parseResponse = getResponseParserImpl(introspectionResults)(aorFetchType, resource, queryType);\n        return {\n            query: query,\n            variables: variables,\n            parseResponse: parseResponse,\n        };\n    };\n}; };\nexport default buildQueryFactory(buildVariables, buildGqlQuery, getResponseParser);\n","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport { ApolloClient } from 'apollo-client';\nimport { HttpLink, InMemoryCache, IntrospectionFragmentMatcher, } from 'apollo-client-preset';\nexport default (function (options) {\n    if (!options) {\n        return new ApolloClient();\n    }\n    var cache = options.cache, link = options.link, uri = options.uri, otherOptions = __rest(options, [\"cache\", \"link\", \"uri\"]);\n    var finalLink = link;\n    var finalCache = cache;\n    // Create an empty fragment matcher\n    // See: https://github.com/apollographql/apollo-client/issues/3397#issuecomment-421433032\n    var fragmentMatcher = new IntrospectionFragmentMatcher({\n        introspectionQueryResultData: {\n            __schema: {\n                types: [],\n            },\n        },\n    });\n    if (!link && uri) {\n        finalLink = new HttpLink({ uri: uri });\n    }\n    if (!cache) {\n        finalCache = new InMemoryCache({ fragmentMatcher: fragmentMatcher }).restore({});\n    }\n    return new ApolloClient(__assign({ link: finalLink, cache: finalCache }, otherOptions));\n});\n","import { GET_LIST, GET_ONE, GET_MANY, GET_MANY_REFERENCE, CREATE, UPDATE, UPDATE_MANY, DELETE, DELETE_MANY, } from 'ra-core';\nexport var QUERY_TYPES = [GET_LIST, GET_MANY, GET_MANY_REFERENCE, GET_ONE];\nexport var MUTATION_TYPES = [\n    CREATE,\n    UPDATE,\n    DELETE,\n    UPDATE_MANY,\n    DELETE_MANY,\n];\nexport var ALL_TYPES = QUERY_TYPES.concat(MUTATION_TYPES);\n","import { TypeKind } from 'graphql';\n/**\n * Ensure we get the real type even if the root type is NON_NULL or LIST\n * @param {GraphQLType} type\n */\nvar getFinalType = function (type) {\n    if (type.kind === TypeKind.NON_NULL || type.kind === TypeKind.LIST) {\n        return getFinalType(type.ofType);\n    }\n    return type;\n};\nexport default getFinalType;\n","import { TypeKind } from 'graphql';\nvar isList = function (type) {\n    if (type.kind === TypeKind.NON_NULL) {\n        return isList(type.ofType);\n    }\n    return type.kind === TypeKind.LIST;\n};\nexport default isList;\n","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\n/* eslint-disable default-case */\nimport { GET_LIST, GET_ONE, GET_MANY, GET_MANY_REFERENCE, CREATE, UPDATE, DELETE, } from 'ra-core';\nimport getFinalType from './getFinalType';\nimport isList from './isList';\nvar sanitizeValue = function (type, value) {\n    if (type.name === 'Int') {\n        return parseInt(value, 10);\n    }\n    if (type.name === 'Float') {\n        return parseFloat(value);\n    }\n    return value;\n};\nvar castType = function (value, type) {\n    var realType = type.kind === 'NON_NULL' ? type.ofType : type;\n    switch (realType.kind + \":\" + realType.name) {\n        case 'SCALAR:Int':\n            return Number(value);\n        case 'SCALAR:String':\n            return String(value);\n        case 'SCALAR:Boolean':\n            return Boolean(value);\n        default:\n            return value;\n    }\n};\nvar prepareParams = function (params, queryType, introspectionResults) {\n    var result = {};\n    if (!params) {\n        return params;\n    }\n    Object.keys(params).forEach(function (key) {\n        var param = params[key];\n        var arg = null;\n        if (!param) {\n            result[key] = param;\n            return;\n        }\n        if (queryType && Array.isArray(queryType.args)) {\n            arg = queryType.args.find(function (item) { return item.name === key; });\n        }\n        if (param instanceof File) {\n            result[key] = param;\n            return;\n        }\n        if (param instanceof Date) {\n            result[key] = param.toISOString();\n            return;\n        }\n        if (param instanceof Object &&\n            !Array.isArray(param) &&\n            arg &&\n            arg.type.kind === 'INPUT_OBJECT') {\n            var args = introspectionResults.types.find(function (item) {\n                return item.kind === arg.type.kind && item.name === arg.type.name;\n            }).inputFields;\n            result[key] = prepareParams(param, { args: args }, introspectionResults);\n            return;\n        }\n        if (param instanceof Object &&\n            !param instanceof Date &&\n            !Array.isArray(param)) {\n            result[key] = prepareParams(param, queryType, introspectionResults);\n            return;\n        }\n        if (!arg) {\n            result[key] = param;\n            return;\n        }\n        result[key] = castType(param, arg.type);\n    });\n    return result;\n};\nvar buildGetListVariables = function (introspectionResults) { return function (resource, aorFetchType, params) {\n    var variables = { filter: {} };\n    if (params.filter) {\n        variables.filter = Object.keys(params.filter).reduce(function (acc, key) {\n            var _a, _b, _c, _d, _e, _f, _g;\n            var _h, _j;\n            if (key === 'ids') {\n                return __assign(__assign({}, acc), { ids: params.filter[key] });\n            }\n            if (typeof params.filter[key] === 'object') {\n                var type = introspectionResults.types.find(function (t) { return t.name === resource.type.name + \"Filter\"; });\n                var filterSome = (_h = type === null || type === void 0 ? void 0 : type.inputFields) === null || _h === void 0 ? void 0 : _h.find(function (t) { return t.name === key + \"_some\"; });\n                if (filterSome) {\n                    var filter = Object.keys(params.filter[key]).reduce(function (acc, k) {\n                        var _a;\n                        return (__assign(__assign({}, acc), (_a = {}, _a[k + \"_in\"] = params.filter[key][k], _a)));\n                    }, {});\n                    return __assign(__assign({}, acc), (_a = {}, _a[key + \"_some\"] = filter, _a));\n                }\n            }\n            var parts = key.split('.');\n            if (parts.length > 1) {\n                if (parts[1] === 'id') {\n                    var type_1 = introspectionResults.types.find(function (t) { return t.name === resource.type.name + \"Filter\"; });\n                    var filterSome = (_j = type_1 === null || type_1 === void 0 ? void 0 : type_1.inputFields) === null || _j === void 0 ? void 0 : _j.find(function (t) { return t.name === parts[0] + \"_some\"; });\n                    if (filterSome) {\n                        return __assign(__assign({}, acc), (_b = {}, _b[parts[0] + \"_some\"] = { id: params.filter[key] }, _b));\n                    }\n                    return __assign(__assign({}, acc), (_c = {}, _c[parts[0]] = { id: params.filter[key] }, _c));\n                }\n                var resourceField_1 = resource.type.fields.find(function (f) { return f.name === parts[0]; });\n                var type = getFinalType(resourceField_1.type);\n                return __assign(__assign({}, acc), (_d = {}, _d[key] = sanitizeValue(type, params.filter[key]), _d));\n            }\n            var resourceField = resource.type.fields.find(function (f) { return f.name === key; });\n            if (resourceField) {\n                var type_2 = getFinalType(resourceField.type);\n                var isAList = isList(resourceField.type);\n                if (isAList) {\n                    return __assign(__assign({}, acc), (_e = {}, _e[key] = Array.isArray(params.filter[key])\n                        ? params.filter[key].map(function (value) {\n                            return sanitizeValue(type_2, value);\n                        })\n                        : sanitizeValue(type_2, [params.filter[key]]), _e));\n                }\n                return __assign(__assign({}, acc), (_f = {}, _f[key] = sanitizeValue(type_2, params.filter[key]), _f));\n            }\n            return __assign(__assign({}, acc), (_g = {}, _g[key] = params.filter[key], _g));\n        }, {});\n    }\n    if (params.pagination) {\n        variables.page = parseInt(params.pagination.page, 10) - 1;\n        variables.perPage = parseInt(params.pagination.perPage, 10);\n    }\n    if (params.sort) {\n        variables.sortField = params.sort.field;\n        variables.sortOrder = params.sort.order;\n    }\n    return variables;\n}; };\nvar buildCreateUpdateVariables = function (resource, aorFetchType, params, queryType) {\n    return Object.keys(params.data).reduce(function (acc, key) {\n        var _a, _b, _c;\n        if (Array.isArray(params.data[key])) {\n            var arg = queryType.args.find(function (a) { return a.name === key + \"Ids\"; });\n            if (arg) {\n                return __assign(__assign({}, acc), (_a = {}, _a[key + \"Ids\"] = params.data[key].map(function (_a) {\n                    var id = _a.id;\n                    return id;\n                }), _a));\n            }\n        }\n        if (typeof params.data[key] === 'object') {\n            var arg = queryType.args.find(function (a) { return a.name === key + \"Id\"; });\n            if (arg) {\n                return __assign(__assign({}, acc), (_b = {}, _b[key + \"Id\"] = params.data[key].id, _b));\n            }\n        }\n        return __assign(__assign({}, acc), (_c = {}, _c[key] = params.data[key], _c));\n    }, {});\n};\nexport default (function (introspectionResults) { return function (resource, aorFetchType, params, queryType) {\n    var _a;\n    var preparedParams = prepareParams(params, queryType, introspectionResults);\n    switch (aorFetchType) {\n        case GET_LIST: {\n            return buildGetListVariables(introspectionResults)(resource, aorFetchType, preparedParams, queryType);\n        }\n        case GET_MANY:\n            return {\n                filter: { ids: preparedParams.ids },\n            };\n        case GET_MANY_REFERENCE: {\n            var variables = buildGetListVariables(introspectionResults)(resource, aorFetchType, preparedParams, queryType);\n            variables.filter = __assign(__assign({}, variables.filter), (_a = {}, _a[preparedParams.target] = preparedParams.id, _a));\n            return variables;\n        }\n        case GET_ONE:\n        case DELETE:\n            return {\n                id: preparedParams.id,\n            };\n        case CREATE:\n        case UPDATE: {\n            return buildCreateUpdateVariables(resource, aorFetchType, preparedParams, queryType);\n        }\n    }\n}; });\n","import { TypeKind } from 'graphql';\nvar isRequired = function (type) {\n    if (type.kind === TypeKind.LIST) {\n        return isRequired(type.ofType);\n    }\n    return type.kind === TypeKind.NON_NULL;\n};\nexport default isRequired;\n","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nvar __spreadArrays = (this && this.__spreadArrays) || function () {\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n            r[k] = a[j];\n    return r;\n};\nimport { GET_LIST, GET_MANY, GET_MANY_REFERENCE, DELETE } from 'ra-core';\nimport { QUERY_TYPES } from 'ra-data-graphql';\nimport { TypeKind } from 'graphql';\nimport * as gqlTypes from 'graphql-ast-types-browser';\nimport getFinalType from './getFinalType';\nimport isList from './isList';\nimport isRequired from './isRequired';\nexport var buildFragments = function (introspectionResults) { return function (possibleTypes) {\n    return possibleTypes.reduce(function (acc, possibleType) {\n        var type = getFinalType(possibleType);\n        var linkedType = introspectionResults.types.find(function (t) { return t.name === type.name; });\n        return __spreadArrays(acc, [\n            gqlTypes.inlineFragment(gqlTypes.selectionSet(buildFields(introspectionResults)(linkedType.fields)), gqlTypes.namedType(gqlTypes.name(type.name))),\n        ]);\n    }, []);\n}; };\nexport var buildFields = function (introspectionResults, path) {\n    if (path === void 0) { path = []; }\n    return function (fields) {\n        return fields.reduce(function (acc, field) {\n            var type = getFinalType(field.type);\n            if (type.name.startsWith('_')) {\n                return acc;\n            }\n            if (type.kind !== TypeKind.OBJECT && type.kind !== TypeKind.INTERFACE) {\n                return __spreadArrays(acc, [gqlTypes.field(gqlTypes.name(field.name))]);\n            }\n            var linkedResource = introspectionResults.resources.find(function (r) { return r.type.name === type.name; });\n            if (linkedResource) {\n                return __spreadArrays(acc, [\n                    gqlTypes.field(gqlTypes.name(field.name), null, null, null, gqlTypes.selectionSet([gqlTypes.field(gqlTypes.name('id'))])),\n                ]);\n            }\n            var linkedType = introspectionResults.types.find(function (t) { return t.name === type.name; });\n            if (linkedType && !path.includes(linkedType.name)) {\n                return __spreadArrays(acc, [\n                    gqlTypes.field(gqlTypes.name(field.name), null, null, null, gqlTypes.selectionSet(__spreadArrays(buildFragments(introspectionResults)(linkedType.possibleTypes || []), buildFields(introspectionResults, __spreadArrays(path, [\n                        linkedType.name,\n                    ]))(linkedType.fields)))),\n                ]);\n            }\n            // NOTE: We might have to handle linked types which are not resources but will have to be careful about\n            // ending with endless circular dependencies\n            return acc;\n        }, []);\n    };\n};\nexport var getArgType = function (arg) {\n    var type = getFinalType(arg.type);\n    var required = isRequired(arg.type);\n    var list = isList(arg.type);\n    if (list) {\n        if (required) {\n            return gqlTypes.listType(gqlTypes.nonNullType(gqlTypes.namedType(gqlTypes.name(type.name))));\n        }\n        return gqlTypes.listType(gqlTypes.namedType(gqlTypes.name(type.name)));\n    }\n    if (required) {\n        return gqlTypes.nonNullType(gqlTypes.namedType(gqlTypes.name(type.name)));\n    }\n    return gqlTypes.namedType(gqlTypes.name(type.name));\n};\nexport var buildArgs = function (query, variables) {\n    if (query.args.length === 0) {\n        return [];\n    }\n    var validVariables = Object.keys(variables).filter(function (k) { return typeof variables[k] !== 'undefined'; });\n    var args = query.args\n        .filter(function (a) { return validVariables.includes(a.name); })\n        .reduce(function (acc, arg) { return __spreadArrays(acc, [\n        gqlTypes.argument(gqlTypes.name(arg.name), gqlTypes.variable(gqlTypes.name(arg.name))),\n    ]); }, []);\n    return args;\n};\nexport var buildApolloArgs = function (query, variables) {\n    if (query.args.length === 0) {\n        return [];\n    }\n    var validVariables = Object.keys(variables).filter(function (k) { return typeof variables[k] !== 'undefined'; });\n    var args = query.args\n        .filter(function (a) { return validVariables.includes(a.name); })\n        .reduce(function (acc, arg) {\n        return __spreadArrays(acc, [\n            gqlTypes.variableDefinition(gqlTypes.variable(gqlTypes.name(arg.name)), getArgType(arg)),\n        ]);\n    }, []);\n    return args;\n};\nexport default (function (introspectionResults) { return function (resource, aorFetchType, queryType, variables) {\n    var sortField = variables.sortField, sortOrder = variables.sortOrder, metaVariables = __rest(variables, [\"sortField\", \"sortOrder\"]);\n    var apolloArgs = buildApolloArgs(queryType, variables);\n    var args = buildArgs(queryType, variables);\n    var metaArgs = buildArgs(queryType, metaVariables);\n    var fields = buildFields(introspectionResults)(resource.type.fields);\n    if (aorFetchType === GET_LIST ||\n        aorFetchType === GET_MANY ||\n        aorFetchType === GET_MANY_REFERENCE) {\n        return gqlTypes.document([\n            gqlTypes.operationDefinition('query', gqlTypes.selectionSet([\n                gqlTypes.field(gqlTypes.name(queryType.name), gqlTypes.name('items'), args, null, gqlTypes.selectionSet(fields)),\n                gqlTypes.field(gqlTypes.name(\"_\" + queryType.name + \"Meta\"), gqlTypes.name('total'), metaArgs, null, gqlTypes.selectionSet([\n                    gqlTypes.field(gqlTypes.name('count')),\n                ])),\n            ]), gqlTypes.name(queryType.name), apolloArgs),\n        ]);\n    }\n    if (aorFetchType === DELETE) {\n        return gqlTypes.document([\n            gqlTypes.operationDefinition('mutation', gqlTypes.selectionSet([\n                gqlTypes.field(gqlTypes.name(queryType.name), gqlTypes.name('data'), args, null, gqlTypes.selectionSet(fields)),\n            ]), gqlTypes.name(queryType.name), apolloArgs),\n        ]);\n    }\n    return gqlTypes.document([\n        gqlTypes.operationDefinition(QUERY_TYPES.includes(aorFetchType) ? 'query' : 'mutation', gqlTypes.selectionSet([\n            gqlTypes.field(gqlTypes.name(queryType.name), gqlTypes.name('data'), args, null, gqlTypes.selectionSet(fields)),\n        ]), gqlTypes.name(queryType.name), apolloArgs),\n    ]);\n}; });\n","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport { GET_LIST, GET_MANY, GET_MANY_REFERENCE } from 'ra-core';\nvar sanitizeResource = function (data) {\n    var result = Object.keys(data).reduce(function (acc, key) {\n        var _a, _b, _c, _d, _e;\n        if (key.startsWith('_')) {\n            return acc;\n        }\n        var dataKey = data[key];\n        if (dataKey === null || dataKey === undefined) {\n            return acc;\n        }\n        if (Array.isArray(dataKey)) {\n            if (typeof dataKey[0] === 'object' && dataKey[0] !== null) {\n                return __assign(__assign({}, acc), (_a = {}, _a[key] = dataKey.map(sanitizeResource), _a[key + \"Ids\"] = dataKey.map(function (d) { return d.id; }), _a));\n            }\n            else {\n                return __assign(__assign({}, acc), (_b = {}, _b[key] = dataKey, _b));\n            }\n        }\n        if (typeof dataKey === 'object' && dataKey !== null) {\n            return __assign(__assign(__assign({}, acc), (dataKey &&\n                dataKey.id && (_c = {},\n                _c[key + \".id\"] = dataKey.id,\n                _c))), (_d = {}, _d[key] = sanitizeResource(dataKey), _d));\n        }\n        return __assign(__assign({}, acc), (_e = {}, _e[key] = dataKey, _e));\n    }, {});\n    return result;\n};\nexport default (function (introspectionResults) { return function (aorFetchType) { return function (response) {\n    var data = response.data;\n    if (aorFetchType === GET_LIST ||\n        aorFetchType === GET_MANY ||\n        aorFetchType === GET_MANY_REFERENCE) {\n        return {\n            data: response.data.items.map(sanitizeResource),\n            total: response.data.total.count,\n        };\n    }\n    return { data: sanitizeResource(data.data) };\n}; }; });\n","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nvar __spreadArrays = (this && this.__spreadArrays) || function () {\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n            r[k] = a[j];\n    return r;\n};\nimport merge from 'lodash/merge';\nimport buildDataProvider from 'ra-data-graphql';\nimport { DELETE, DELETE_MANY, UPDATE, UPDATE_MANY } from 'ra-core';\nimport defaultBuildQuery from './buildQuery';\nvar defaultOptions = {\n    buildQuery: defaultBuildQuery,\n};\nexport var buildQuery = defaultBuildQuery;\nexport default (function (options) {\n    return buildDataProvider(merge({}, defaultOptions, options)).then(function (defaultDataProvider) {\n        return function (fetchType, resource, params) {\n            // This provider does not support multiple deletions so instead we send multiple DELETE requests\n            // This can be optimized using the apollo-link-batch-http link\n            if (fetchType === DELETE_MANY) {\n                var ids = params.ids, otherParams_1 = __rest(params, [\"ids\"]);\n                return Promise.all(ids.map(function (id) {\n                    return defaultDataProvider(DELETE, resource, __assign({ id: id }, otherParams_1));\n                })).then(function (results) {\n                    var data = results.reduce(function (acc, _a) {\n                        var data = _a.data;\n                        return __spreadArrays(acc, [data.id]);\n                    }, []);\n                    return { data: data };\n                });\n            }\n            // This provider does not support multiple deletions so instead we send multiple UPDATE requests\n            // This can be optimized using the apollo-link-batch-http link\n            if (fetchType === UPDATE_MANY) {\n                var ids = params.ids, data_1 = params.data, otherParams_2 = __rest(params, [\"ids\", \"data\"]);\n                return Promise.all(ids.map(function (id) {\n                    return defaultDataProvider(UPDATE, resource, __assign({ data: __assign({ id: id }, data_1) }, otherParams_2));\n                })).then(function (results) {\n                    var data = results.reduce(function (acc, _a) {\n                        var data = _a.data;\n                        return __spreadArrays(acc, [data.id]);\n                    }, []);\n                    return { data: data };\n                });\n            }\n            return defaultDataProvider(fetchType, resource, params);\n        };\n    });\n});\n","/* tslint:disable */\n\nimport { ApolloLink, Observable, RequestHandler, fromError } from 'apollo-link';\nimport {\n  serializeFetchParameter,\n  selectURI,\n  parseAndCheckHttpResponse,\n  checkFetcher,\n  selectHttpOptionsAndBody,\n  createSignalIfSupported,\n  fallbackHttpConfig,\n  Body,\n  HttpOptions,\n  UriFunction as _UriFunction,\n} from 'apollo-link-http-common';\nimport { DefinitionNode } from 'graphql';\n\nexport namespace HttpLink {\n  //TODO Would much rather be able to export directly\n  export interface UriFunction extends _UriFunction {}\n  export interface Options extends HttpOptions {\n    /**\n     * If set to true, use the HTTP GET method for query operations. Mutations\n     * will still use the method specified in fetchOptions.method (which defaults\n     * to POST).\n     */\n    useGETForQueries?: boolean;\n  }\n}\n\n// For backwards compatibility.\nexport import FetchOptions = HttpLink.Options;\nexport import UriFunction = HttpLink.UriFunction;\n\nexport const createHttpLink = (linkOptions: HttpLink.Options = {}) => {\n  let {\n    uri = '/graphql',\n    // use default global fetch if nothing passed in\n    fetch: fetcher,\n    includeExtensions,\n    useGETForQueries,\n    ...requestOptions\n  } = linkOptions;\n\n  // dev warnings to ensure fetch is present\n  checkFetcher(fetcher);\n\n  //fetcher is set here rather than the destructuring to ensure fetch is\n  //declared before referencing it. Reference in the destructuring would cause\n  //a ReferenceError\n  if (!fetcher) {\n    fetcher = fetch;\n  }\n\n  const linkConfig = {\n    http: { includeExtensions },\n    options: requestOptions.fetchOptions,\n    credentials: requestOptions.credentials,\n    headers: requestOptions.headers,\n  };\n\n  return new ApolloLink(operation => {\n    let chosenURI = selectURI(operation, uri);\n\n    const context = operation.getContext();\n\n    // `apollographql-client-*` headers are automatically set if a\n    // `clientAwareness` object is found in the context. These headers are\n    // set first, followed by the rest of the headers pulled from\n    // `context.headers`. If desired, `apollographql-client-*` headers set by\n    // the `clientAwareness` object can be overridden by\n    // `apollographql-client-*` headers set in `context.headers`.\n    const clientAwarenessHeaders = {};\n    if (context.clientAwareness) {\n      const { name, version } = context.clientAwareness;\n      if (name) {\n        clientAwarenessHeaders['apollographql-client-name'] = name;\n      }\n      if (version) {\n        clientAwarenessHeaders['apollographql-client-version'] = version;\n      }\n    }\n\n    const contextHeaders = { ...clientAwarenessHeaders, ...context.headers };\n\n    const contextConfig = {\n      http: context.http,\n      options: context.fetchOptions,\n      credentials: context.credentials,\n      headers: contextHeaders,\n    };\n\n    //uses fallback, link, and then context to build options\n    const { options, body } = selectHttpOptionsAndBody(\n      operation,\n      fallbackHttpConfig,\n      linkConfig,\n      contextConfig,\n    );\n\n    let controller;\n    if (!(options as any).signal) {\n      const { controller: _controller, signal } = createSignalIfSupported();\n      controller = _controller;\n      if (controller) (options as any).signal = signal;\n    }\n\n    // If requested, set method to GET if there are no mutations.\n    const definitionIsMutation = (d: DefinitionNode) => {\n      return d.kind === 'OperationDefinition' && d.operation === 'mutation';\n    };\n    if (\n      useGETForQueries &&\n      !operation.query.definitions.some(definitionIsMutation)\n    ) {\n      options.method = 'GET';\n    }\n\n    if (options.method === 'GET') {\n      const { newURI, parseError } = rewriteURIForGET(chosenURI, body);\n      if (parseError) {\n        return fromError(parseError);\n      }\n      chosenURI = newURI;\n    } else {\n      try {\n        (options as any).body = serializeFetchParameter(body, 'Payload');\n      } catch (parseError) {\n        return fromError(parseError);\n      }\n    }\n\n    return new Observable(observer => {\n      fetcher(chosenURI, options)\n        .then(response => {\n          operation.setContext({ response });\n          return response;\n        })\n        .then(parseAndCheckHttpResponse(operation))\n        .then(result => {\n          // we have data and can send it to back up the link chain\n          observer.next(result);\n          observer.complete();\n          return result;\n        })\n        .catch(err => {\n          // fetch was cancelled so it's already been cleaned up in the unsubscribe\n          if (err.name === 'AbortError') return;\n          // if it is a network error, BUT there is graphql result info\n          // fire the next observer before calling error\n          // this gives apollo-client (and react-apollo) the `graphqlErrors` and `networErrors`\n          // to pass to UI\n          // this should only happen if we *also* have data as part of the response key per\n          // the spec\n          if (err.result && err.result.errors && err.result.data) {\n            // if we don't call next, the UI can only show networkError because AC didn't\n            // get any graphqlErrors\n            // this is graphql execution result info (i.e errors and possibly data)\n            // this is because there is no formal spec how errors should translate to\n            // http status codes. So an auth error (401) could have both data\n            // from a public field, errors from a private field, and a status of 401\n            // {\n            //  user { // this will have errors\n            //    firstName\n            //  }\n            //  products { // this is public so will have data\n            //    cost\n            //  }\n            // }\n            //\n            // the result of above *could* look like this:\n            // {\n            //   data: { products: [{ cost: \"$10\" }] },\n            //   errors: [{\n            //      message: 'your session has timed out',\n            //      path: []\n            //   }]\n            // }\n            // status code of above would be a 401\n            // in the UI you want to show data where you can, errors as data where you can\n            // and use correct http status codes\n            observer.next(err.result);\n          }\n          observer.error(err);\n        });\n\n      return () => {\n        // XXX support canceling this request\n        // https://developers.google.com/web/updates/2017/09/abortable-fetch\n        if (controller) controller.abort();\n      };\n    });\n  });\n};\n\n// For GET operations, returns the given URI rewritten with parameters, or a\n// parse error.\nfunction rewriteURIForGET(chosenURI: string, body: Body) {\n  // Implement the standard HTTP GET serialization, plus 'extensions'. Note\n  // the extra level of JSON serialization!\n  const queryParams = [];\n  const addQueryParam = (key: string, value: string) => {\n    queryParams.push(`${key}=${encodeURIComponent(value)}`);\n  };\n\n  if ('query' in body) {\n    addQueryParam('query', body.query);\n  }\n  if (body.operationName) {\n    addQueryParam('operationName', body.operationName);\n  }\n  if (body.variables) {\n    let serializedVariables;\n    try {\n      serializedVariables = serializeFetchParameter(\n        body.variables,\n        'Variables map',\n      );\n    } catch (parseError) {\n      return { parseError };\n    }\n    addQueryParam('variables', serializedVariables);\n  }\n  if (body.extensions) {\n    let serializedExtensions;\n    try {\n      serializedExtensions = serializeFetchParameter(\n        body.extensions,\n        'Extensions map',\n      );\n    } catch (parseError) {\n      return { parseError };\n    }\n    addQueryParam('extensions', serializedExtensions);\n  }\n\n  // Reconstruct the URI with added query params.\n  // XXX This assumes that the URI is well-formed and that it doesn't\n  //     already contain any of these query params. We could instead use the\n  //     URL API and take a polyfill (whatwg-url@6) for older browsers that\n  //     don't support URLSearchParams. Note that some browsers (and\n  //     versions of whatwg-url) support URL but not URLSearchParams!\n  let fragment = '',\n    preFragment = chosenURI;\n  const fragmentStart = chosenURI.indexOf('#');\n  if (fragmentStart !== -1) {\n    fragment = chosenURI.substr(fragmentStart);\n    preFragment = chosenURI.substr(0, fragmentStart);\n  }\n  const queryParamsPrefix = preFragment.indexOf('?') === -1 ? '?' : '&';\n  const newURI =\n    preFragment + queryParamsPrefix + queryParams.join('&') + fragment;\n  return { newURI };\n}\n\nexport class HttpLink extends ApolloLink {\n  public requester: RequestHandler;\n  constructor(opts?: HttpLink.Options) {\n    super(createHttpLink(opts).request);\n  }\n}\n"],"sourceRoot":""}